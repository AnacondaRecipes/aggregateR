{% set version = '0.1.0' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-sparseeigen
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/sparseEigen_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/sparseEigen/sparseEigen_{{ version }}.tar.gz
  sha256: 5a9c43ae8acaaf20752f2b21eef8581302e287de233bf4231db7669583f10c6f

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: knitr, MASS, rmarkdown, testthat
requirements:
  build:
    - {{ posix }}zip               # [win]

  host:
    - r-base

  run:
    - r-base

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('sparseEigen')"           # [not win]
    - "\"%R%\" -e \"library('sparseEigen')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/dppalomar/sparseEigen, https://www.danielppalomar.com, https://doi.org/10.1109/TSP.2016.2605073
  license: GPL-3
  summary: 'Computation of sparse eigenvectors of a matrix (aka sparse PCA) with running time
    2-3 orders of magnitude lower than existing methods and better final performance
    in terms of recovery of sparsity pattern and estimation of numerical values. Can
    handle covariance matrices as well as data matrices with real or complex-valued
    entries. Different levels of sparsity can be specified for each individual ordered
    eigenvector and the method is robust in parameter selection. See vignette for a
    detailed documentation and comparison, with several illustrative examples. The package
    is based on the paper: K. Benidis, Y. Sun, P. Babu, and D. P. Palomar (2016). "Orthogonal
    Sparse PCA and Covariance Estimation via Procrustes Reformulation," IEEE Transactions
    on Signal Processing <doi:10.1109/TSP.2016.2605073>.'
  license_family: GPL3
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-3'
    - LICENSE

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: sparseEigen
# Title: Computation of Sparse Eigenvectors of a Matrix
# Version: 0.1.0
# Description: Computation of sparse eigenvectors of a matrix (aka sparse PCA) with running time 2-3 orders of magnitude lower than existing methods and better final performance in terms of recovery of sparsity pattern and estimation of numerical values. Can handle covariance matrices as well as data matrices with real or complex-valued entries. Different levels of sparsity can be specified for each individual ordered eigenvector and the method is robust in parameter selection. See vignette for a detailed documentation and comparison, with several illustrative examples. The package is based on the paper: K. Benidis, Y. Sun, P. Babu, and D. P. Palomar (2016). "Orthogonal Sparse PCA and Covariance Estimation via Procrustes Reformulation," IEEE Transactions on Signal Processing <doi:10.1109/TSP.2016.2605073>.
# Authors@R: c( person("Konstantinos", "Benidis", role = "aut", email = "benidisk@gmail.com"), person(c("Daniel", "P."), "Palomar", role = c("cre", "aut"), email = "daniel.p.palomar@gmail.com") )
# Maintainer: Daniel P. Palomar <daniel.p.palomar@gmail.com>
# URL: https://github.com/dppalomar/sparseEigen, https://www.danielppalomar.com, https://doi.org/10.1109/TSP.2016.2605073
# BugReports: https://github.com/dppalomar/sparseEigen/issues
# Depends: R (>= 3.4.0)
# License: GPL-3 | file LICENSE
# Encoding: UTF-8
# LazyData: true
# Imports:
# RoxygenNote: 6.0.1
# Suggests: knitr, MASS, rmarkdown, testthat
# VignetteBuilder: knitr
# NeedsCompilation: no
# Packaged: 2017-12-21 15:54:05 UTC; hornik
# Author: Konstantinos Benidis [aut], Daniel P. Palomar [cre, aut]
# Repository: CRAN
# Date/Publication: 2017-12-21 16:54:39

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
