{% set version = '2013-2.21' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-rcgmin
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/Rcgmin_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/Rcgmin/Rcgmin_{{ version }}.tar.gz
  sha256: a824a09c32d7565a3e30607c71333506d5b7197478fbe8b43f8a77dad6c12f0a

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{posix}}zip               # [win]

  host:
    - r-base
    - r-numderiv

  run:
    - r-base
    - r-numderiv

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('Rcgmin')"           # [not win]
    - "\"%R%\" -e \"library('Rcgmin')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=Rcgmin
  license: GPL-2
  summary: Conjugate gradient minimization of nonlinear functions with box constraints incorporating
    the Dai/Yuan update. This implementation should be used in place of the "CG" algorithm
    of the optim() function.
  license_family: GPL2
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: Rcgmin
# Type: Package
# Title: Conjugate Gradient Minimization of Nonlinear Functions
# Version: 2013-2.21
# Date: 2013-02-21
# Author: John C. Nash
# Maintainer: John C. Nash <nashjc@uottawa.ca>
# Description: Conjugate gradient minimization of nonlinear functions with box constraints incorporating the Dai/Yuan update. This implementation should be used in place of the "CG" algorithm of the optim() function.
# Imports: numDeriv
# License: GPL (>= 2)
# NeedsCompilation: no
# Packaged: 2014-12-03 14:44:25 UTC; john
# Repository: CRAN
# Date/Publication: 2014-12-06 00:21:13

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
