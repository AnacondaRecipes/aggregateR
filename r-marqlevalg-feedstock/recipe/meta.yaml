{% set version = '2.0.6' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-marqlevalg
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/marqLevAlg_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/marqLevAlg/marqLevAlg_{{ version }}.tar.gz
  sha256: a8a98e0621c434865ddb24243e8afbbf4f743e3461176297792da38094cf5b8a

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: microbenchmark,knitr,rmarkdown,rticles,ggplot2,viridis,patchwork,xtable
requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('fortran') }}        # [not win]
    - {{ compiler('m2w64_fortran') }}  # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}make
    - {{ posix }}sed               # [win]
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-doparallel
    - r-foreach

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-doparallel
    - r-foreach

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('marqLevAlg')"           # [not win]
    - "\"%R%\" -e \"library('marqLevAlg')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=marqLevAlg
  license: GPL (>= 2.0)
  summary: This algorithm provides a numerical solution to the problem of unconstrained local
    minimization (or maximization). It is particularly suited for complex problems and
    more efficient than the Gauss-Newton-like algorithm when starting from points very
    far from the final minimum (or maximum). Each iteration is parallelized and convergence
    relies on a stringent stopping criterion based on the first and second derivatives.
    See Philipps et al, 2021 <doi:10.32614/RJ-2021-089>.
  license_family: GPL3

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: marqLevAlg
# Type: Package
# Title: A Parallelized General-Purpose Optimization Based on Marquardt-Levenberg Algorithm
# Version: 2.0.6
# Date: 2022-03-08
# Author: Viviane Philipps, Cecile Proust-Lima, Melanie Prague, Boris Hejblum, Daniel Commenges, Amadou Diakite
# Maintainer: Viviane Philipps <viviane.philipps@u-bordeaux.fr>
# Depends: R (>= 3.5.0)
# Suggests: microbenchmark,knitr,rmarkdown,rticles,ggplot2,viridis,patchwork,xtable
# LazyLoad: yes
# LazyData: true
# Description: This algorithm provides a numerical solution to the problem of unconstrained local minimization (or maximization). It is particularly suited for complex problems and more efficient than the Gauss-Newton-like algorithm when starting from points very far from the final minimum (or maximum). Each iteration is parallelized and convergence relies on a stringent stopping criterion based on the first and second derivatives. See Philipps et al, 2021 <doi:10.32614/RJ-2021-089>.
# License: GPL (>= 2.0)
# BugReports: https://github.com/VivianePhilipps/marqLevAlgParallel/issues
# Imports: doParallel, foreach
# VignetteBuilder: knitr
# NeedsCompilation: yes
# RoxygenNote: 7.1.1
# Packaged: 2022-03-09 11:56:55 UTC; vp3
# Repository: CRAN
# Date/Publication: 2022-03-09 15:20:07 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
