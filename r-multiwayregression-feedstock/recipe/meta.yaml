{% set version = '1.2' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-multiwayregression
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/MultiwayRegression_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/MultiwayRegression/MultiwayRegression_{{ version }}.tar.gz
  sha256: d45d70926518718bafbe155dd17f9ce4c1b69c012db36ca12df3e2cced681ef0

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{posix}}zip               # [win]

  host:
    - r-base
    - r-mass

  run:
    - r-base
    - r-mass

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('MultiwayRegression')"           # [not win]
    - "\"%R%\" -e \"library('MultiwayRegression')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=MultiwayRegression
  license: GPL-3
  summary: 'Functions to predict one multi-way array (i.e., a tensor) from another multi-way
    array, using a low-rank CANDECOMP/PARAFAC (CP) factorization and a ridge (L_2) penalty
    [Lock, EF (2018) <doi:10.1080/10618600.2017.1401544>].  Also includes functions
    to sample from the Bayesian posterior of a tensor-on-tensor model.      '

  license_family: GPL3
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-3'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: MultiwayRegression
# Type: Package
# Title: Perform Tensor-on-Tensor Regression
# Version: 1.2
# Date: 2019-05-28
# Author: Eric F. Lock
# Maintainer: Eric F. Lock <elock@umn.edu>
# Description: Functions to predict one multi-way array (i.e., a tensor) from another multi-way array, using a low-rank CANDECOMP/PARAFAC (CP) factorization and a ridge (L_2) penalty [Lock, EF (2018) <doi:10.1080/10618600.2017.1401544>].  Also includes functions to sample from the Bayesian posterior of a tensor-on-tensor model.
# License: GPL-3
# Imports: MASS
# Depends: R(>= 2.10.0)
# NeedsCompilation: no
# Packaged: 2019-05-29 01:42:10 UTC; bowenli
# Repository: CRAN
# Date/Publication: 2019-05-31 16:10:03 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
