{% set version = '1.0.5' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-rsvd
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/rsvd_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/rsvd/rsvd_{{ version }}.tar.gz
  sha256: e40686b869acd4f71fdb1e8e7a6c64cd6792fc9d52a78f9e559a7176ab84e21e

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: ggplot2, testthat
requirements:
  build:
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-matrix

  run:
    - r-base
    - r-matrix

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('rsvd')"           # [not win]
    - "\"%R%\" -e \"library('rsvd')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/erichson/rSVD
  license: GPL-3
  summary: Low-rank matrix decompositions are fundamental tools and widely used for data analysis,
    dimension reduction, and data compression. Classically, highly accurate deterministic
    matrix algorithms are used for this task. However, the emergence of large-scale
    data has severely challenged our computational ability to analyze big data. The
    concept of randomness has been demonstrated as an effective strategy to quickly
    produce approximate answers to familiar problems such as the singular value decomposition
    (SVD). The rsvd package provides several randomized matrix algorithms such as the
    randomized singular value decomposition (rsvd), randomized principal component analysis
    (rpca), randomized robust principal component analysis (rrpca), randomized interpolative
    decomposition (rid), and the randomized CUR decomposition (rcur). In addition several
    plot functions are provided.
  license_family: GPL3
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-3'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: rsvd
# Type: Package
# Title: Randomized Singular Value Decomposition
# Version: 1.0.5
# Date: 2021-04-11
# Authors@R: c(person("N. Benjamin", "Erichson", role = c("aut", "cre"), email = "erichson@berkeley.edu"))
# Author: N. Benjamin Erichson [aut, cre]
# Maintainer: N. Benjamin Erichson <erichson@berkeley.edu>
# Description: Low-rank matrix decompositions are fundamental tools and widely used for data analysis, dimension reduction, and data compression. Classically, highly accurate deterministic matrix algorithms are used for this task. However, the emergence of large-scale data has severely challenged our computational ability to analyze big data. The concept of randomness has been demonstrated as an effective strategy to quickly produce approximate answers to familiar problems such as the singular value decomposition (SVD). The rsvd package provides several randomized matrix algorithms such as the randomized singular value decomposition (rsvd), randomized principal component analysis (rpca), randomized robust principal component analysis (rrpca), randomized interpolative decomposition (rid), and the randomized CUR decomposition (rcur). In addition several plot functions are provided.
# Depends: R (>= 4.0.0)
# Imports: Matrix
# License: GPL (>= 3)
# LazyData: TRUE
# LazyDataCompression: xz
# URL: https://github.com/erichson/rSVD
# BugReports: https://github.com/erichson/rSVD/issues
# Suggests: ggplot2, testthat
# RoxygenNote: 7.1.1
# NeedsCompilation: no
# Encoding: UTF-8
# Packaged: 2021-04-14 17:52:09 UTC; ben
# Repository: CRAN
# Date/Publication: 2021-04-16 05:40:03 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
