{% set version = '0.2.4' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-injector
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/injectoR_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/injectoR/injectoR_{{ version }}.tar.gz
  sha256: 883a232dd6631a15e64d99b82e133db396d2fb14a055e709a8c39b7b35134369

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: testthat
requirements:
  build:
    - {{posix}}zip               # [win]

  host:
    - r-base

  run:
    - r-base

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('injectoR')"           # [not win]
    - "\"%R%\" -e \"library('injectoR')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/dfci-cccb/injectoR
  license: LGPL-3
  summary: R dependency injection framework. Dependency injection allows a program design to
    follow the dependency inversion principle. The user delegates to external code (the
    injector) the responsibility of providing its dependencies. This separates the responsibilities
    of use and construction.
  license_family: LGPL
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/LGPL-3'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: injectoR
# Version: 0.2.4
# Date: 2015-11-25
# Title: R Dependency Injection
# Author: Lev Kuznetsov
# Maintainer: Lev Kuznetsov <levk@jimmy.harvard.edu>
# Depends: R (>= 3.1.0)
# Suggests: testthat
# Description: R dependency injection framework. Dependency injection allows a program design to follow the dependency inversion principle. The user delegates to external code (the injector) the responsibility of providing its dependencies. This separates the responsibilities of use and construction.
# License: LGPL (>= 3)
# URL: https://github.com/dfci-cccb/injectoR
# BugReports: https://github.com/dfci-cccb/injectoR/issues
# RoxygenNote: 5.0.1
# NeedsCompilation: no
# Packaged: 2015-11-25 19:43:15 UTC; levk
# Repository: CRAN
# Date/Publication: 2015-11-30 08:17:48

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
