{% set version = '1.4.99' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-rquery
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/rquery_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/rquery/rquery_{{ version }}.tar.gz
  sha256: c3a700af2630d5788c6214f3f367fbce6da33560970ca1c7e164763e06ef8014

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: DBI, RSQLite, rqdatatable (>= 1.3.2), igraph, knitr, rmarkdown, yaml, tinytest
requirements:
  build:
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-wrapr >=2.0.9

  run:
    - r-base
    - r-wrapr >=2.0.9

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('rquery')"           # [not win]
    - "\"%R%\" -e \"library('rquery')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/WinVector/rquery/, https://winvector.github.io/rquery/
  license: GPL-2 | GPL-3
  summary: 'A piped query generator based on Edgar F. Codd''s relational algebra, and on production
    experience using ''SQL'' and ''dplyr'' at big data scale.  The design represents
    an attempt to make ''SQL'' more teachable by denoting composition by a sequential
    pipeline notation instead of nested queries or functions.   The implementation delivers
    reliable high performance data processing on large data systems such as ''Spark'',
    databases, and ''data.table''. Package features include: data processing trees or
    pipelines as observable objects (able to report both columns produced and columns
    used), optimized ''SQL'' generation as an explicit user visible table modeling step,
    plus explicit query reasoning and checking.'
  license_family: GPL3
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-3'

# The original CRAN metadata for this package was:

# Package: rquery
# Type: Package
# Title: Relational Query Generator for Data Manipulation at Scale
# Version: 1.4.99
# Date: 2023-08-19
# Authors@R: c( person("John", "Mount", email = "jmount@win-vector.com", role = c("aut", "cre")), person(family = "Win-Vector LLC", role = c("cph")) )
# Maintainer: John Mount <jmount@win-vector.com>
# URL: https://github.com/WinVector/rquery/, https://winvector.github.io/rquery/
# BugReports: https://github.com/WinVector/rquery/issues
# Description: A piped query generator based on Edgar F. Codd's relational algebra, and on production experience using 'SQL' and 'dplyr' at big data scale.  The design represents an attempt to make 'SQL' more teachable by denoting composition by a sequential pipeline notation instead of nested queries or functions.   The implementation delivers reliable high performance data processing on large data systems such as 'Spark', databases, and 'data.table'. Package features include: data processing trees or pipelines as observable objects (able to report both columns produced and columns used), optimized 'SQL' generation as an explicit user visible table modeling step, plus explicit query reasoning and checking.
# License: GPL-2 | GPL-3
# Encoding: UTF-8
# Depends: R (>= 3.4.0), wrapr (>= 2.0.9)
# Imports: utils, stats, methods
# Suggests: DBI, RSQLite, rqdatatable (>= 1.3.2), igraph, knitr, rmarkdown, yaml, tinytest
# RoxygenNote: 7.2.3
# ByteCompile: true
# VignetteBuilder: knitr
# NeedsCompilation: no
# Packaged: 2023-08-20 00:51:57 UTC; johnmount
# Author: John Mount [aut, cre], Win-Vector LLC [cph]
# Repository: CRAN
# Date/Publication: 2023-08-20 02:40:02 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
