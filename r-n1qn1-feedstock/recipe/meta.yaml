{% set version = '6.0.1-11' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-n1qn1
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/n1qn1_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/n1qn1/n1qn1_{{ version }}.tar.gz
  sha256: f276096f99015edb4d6c6e652fdbf399f47f7b6a5ea091263584330e2a47e49e

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: testthat, covr
requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}make
    - {{ posix }}sed               # [win]
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-rcpp >=0.12.3
    - r-rcpparmadillo >=0.5.600.2.0

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-rcpp >=0.12.3
    - r-rcpparmadillo >=0.5.600.2.0

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('n1qn1')"           # [not win]
    - "\"%R%\" -e \"library('n1qn1')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/nlmixr2/n1qn1c
  license: CeCILL-2
  summary: Provides 'Scilab' 'n1qn1'. This takes more memory than traditional L-BFGS.  The n1qn1
    routine is useful since it allows prespecification of a Hessian. If the Hessian
    is near enough the truth in optimization it can speed up the optimization problem.
    The algorithm is described in the 'Scilab' optimization documentation located at
    <https://www.scilab.org/sites/default/files/optimization_in_scilab.pdf>. This version
    uses manually modified code from 'f2c' to make this a C only binary.
  license_family: OTHER

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: n1qn1
# Title: Port of the 'Scilab' 'n1qn1' Module for Unconstrained BFGS Optimization
# Version: 6.0.1-11
# Authors@R: c(person("Matthew", "Fidler", role=c("aut","cre"), email= "matthew.fidler@gmail.com"), person("Wenping", "Wang", role = "aut", email = "wwang8198@gmail.com"), person("Claude","Lemarechal", role=c("aut","ctb")), person("Joseph", "Bonnans", role=c("ctb")), person("Jean-Charles", "Gilbert", role=c("ctb")), person("Claudia","Sagastizabal",role=c("ctb")), person("Stephen L.", "Campbell,", role=c("ctb")), person("Jean-Philippe", "Chancelier", role=c("ctb")), person("Ramine", "Nikoukhah", role=c("ctb")), person("Dirk", "Eddelbuettel", role="ctb"), person("Bruno", "Jofret", role="ctb"), person("INRIA", role="cph") )
# Maintainer: Matthew Fidler <matthew.fidler@gmail.com>
# Description: Provides 'Scilab' 'n1qn1'. This takes more memory than traditional L-BFGS.  The n1qn1 routine is useful since it allows prespecification of a Hessian. If the Hessian is near enough the truth in optimization it can speed up the optimization problem. The algorithm is described in the 'Scilab' optimization documentation located at <https://www.scilab.org/sites/default/files/optimization_in_scilab.pdf>. This version uses manually modified code from 'f2c' to make this a C only binary.
# URL: https://github.com/nlmixr2/n1qn1c
# BugReports: https://github.com/nlmixr2/n1qn1c/issues
# Depends: R (>= 3.2)
# Imports: Rcpp (>= 0.12.3)
# Suggests: testthat, covr
# License: CeCILL-2
# Biarch: true
# NeedsCompilation: yes
# LinkingTo: RcppArmadillo (>= 0.5.600.2.0), Rcpp (>= 0.12.3)
# Encoding: UTF-8
# RoxygenNote: 7.2.1
# Packaged: 2022-10-18 14:44:21 UTC; matt
# Author: Matthew Fidler [aut, cre], Wenping Wang [aut], Claude Lemarechal [aut, ctb], Joseph Bonnans [ctb], Jean-Charles Gilbert [ctb], Claudia Sagastizabal [ctb], Stephen L. Campbell, [ctb], Jean-Philippe Chancelier [ctb], Ramine Nikoukhah [ctb], Dirk Eddelbuettel [ctb], Bruno Jofret [ctb], INRIA [cph]
# Repository: CRAN
# Date/Publication: 2022-10-18 15:42:36 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
