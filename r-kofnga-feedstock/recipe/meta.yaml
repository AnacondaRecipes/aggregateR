{% set version = '1.3' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-kofnga
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/kofnGA_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/kofnGA/kofnGA_{{ version }}.tar.gz
  sha256: 7587a9da02c764e849553d60d771d496b7feaf2f22baa80980aa61db7c400870

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{posix}}zip               # [win]

  host:
    - r-base
    - r-bigmemory

  run:
    - r-base
    - r-bigmemory

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('kofnGA')"           # [not win]
    - "\"%R%\" -e \"library('kofnGA')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=kofnGA
  license: GPL-2
  summary: Provides a function that uses a genetic algorithm to search for a subset of size k
    from the integers 1:n, such that a user-supplied objective function  is minimized
    at that subset.  The selection step is done by tournament selection  based on ranks,
    and elitism may be used to retain a portion of the best solutions  from one generation
    to the next. Population objective function values may  optionally be evaluated in
    parallel.
  license_family: GPL2
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: kofnGA
# Title: A Genetic Algorithm for Fixed-Size Subset Selection
# Version: 1.3
# Authors@R: person(c("Mark","A."), "Wolters", email = "mark@mwolters.com",  role = c("aut", "cre"))
# Description: Provides a function that uses a genetic algorithm to search for a subset of size k from the integers 1:n, such that a user-supplied objective function  is minimized at that subset.  The selection step is done by tournament selection  based on ranks, and elitism may be used to retain a portion of the best solutions  from one generation to the next. Population objective function values may  optionally be evaluated in parallel.
# License: GPL-2
# Encoding: UTF-8
# LazyData: true
# RoxygenNote: 6.1.0
# Imports: bigmemory
# NeedsCompilation: no
# Packaged: 2018-11-02 05:34:43 UTC; krams
# Author: Mark A. Wolters [aut, cre]
# Maintainer: Mark A. Wolters <mark@mwolters.com>
# Repository: CRAN
# Date/Publication: 2018-11-02 06:10:03 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
