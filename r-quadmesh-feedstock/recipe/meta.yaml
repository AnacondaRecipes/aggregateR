{% set version = '0.5.5' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-quadmesh
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/quadmesh_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/quadmesh/quadmesh_{{ version }}.tar.gz
  sha256: d30afd6d848e9932bee249345e5e0f009c5069850c1155418ee6a4247249c729

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: knitr, rmarkdown, testthat, covr
requirements:
  build:
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-geometry
    - r-gridbase
    - r-palr
    - r-png
    - r-raster
    - r-reproj >=0.4.0
    - r-scales
    - r-sp

  run:
    - r-base
    - r-geometry
    - r-gridbase
    - r-palr
    - r-png
    - r-raster
    - r-reproj >=0.4.0
    - r-scales
    - r-sp

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('quadmesh')"           # [not win]
    - "\"%R%\" -e \"library('quadmesh')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/hypertidy/quadmesh
  license: GPL-3
  summary: Create surface forms from matrix or 'raster' data for flexible plotting and conversion
    to other mesh types. The functions 'quadmesh' or 'triangmesh' produce a continuous
    surface as a 'mesh3d' object as used by the 'rgl' package. This is used for plotting
    raster data in 3D (optionally with texture), and allows the application of a map
    projection without data loss and many processing applications that are restricted
    by inflexible regular grid rasters. There are discrete forms of these continuous
    surfaces available with 'dquadmesh' and 'dtriangmesh' functions.
  license_family: GPL3
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-3'

# The original CRAN metadata for this package was:

# Package: quadmesh
# Type: Package
# Title: Quadrangle Mesh
# Version: 0.5.5
# Authors@R: person("Michael D.","Sumner", role = c("aut", "cre"), email = "mdsumner@gmail.com")
# Description: Create surface forms from matrix or 'raster' data for flexible plotting and conversion to other mesh types. The functions 'quadmesh' or 'triangmesh' produce a continuous surface as a 'mesh3d' object as used by the 'rgl' package. This is used for plotting raster data in 3D (optionally with texture), and allows the application of a map projection without data loss and many processing applications that are restricted by inflexible regular grid rasters. There are discrete forms of these continuous surfaces available with 'dquadmesh' and 'dtriangmesh' functions.
# License: GPL-3
# LazyData: TRUE
# RoxygenNote: 7.2.1
# Depends: R (>= 2.10)
# Encoding: UTF-8
# Imports: raster, gridBase, png, sp, geometry, reproj (>= 0.4.0), scales, palr
# Suggests: knitr, rmarkdown, testthat, covr
# URL: https://github.com/hypertidy/quadmesh
# BugReports: https://github.com/hypertidy/quadmesh/issues
# VignetteBuilder: knitr
# ByteCompile: true
# NeedsCompilation: no
# Packaged: 2022-08-31 06:20:51 UTC; mdsumner
# Author: Michael D. Sumner [aut, cre]
# Maintainer: Michael D. Sumner <mdsumner@gmail.com>
# Repository: CRAN
# Date/Publication: 2022-08-31 06:50:02 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
