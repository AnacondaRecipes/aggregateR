{% set version = '3.3.1' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-slackr
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/slackr_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/slackr/slackr_{{ version }}.tar.gz
  sha256: a578de13709ca44adeabab6b3b5b2a1fd1dcdb56e384f613fefeac2c34a0de23

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: covr, ggplot2, knitr, rmarkdown, svglite, testthat (>= 3.0.0), texPreview
requirements:
  build:
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-cachem >=1.0.4
    - r-dplyr
    - r-httr >=1.4.2
    - r-jsonlite
    - r-magrittr
    - r-memoise >=2.0.0
    - r-rlang
    - r-tibble
    - r-withr

  run:
    - r-base
    - r-cachem >=1.0.4
    - r-dplyr
    - r-httr >=1.4.2
    - r-jsonlite
    - r-magrittr
    - r-memoise >=2.0.0
    - r-rlang
    - r-tibble
    - r-withr

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('slackr')"           # [not win]
    - "\"%R%\" -e \"library('slackr')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/mrkaye97/slackr, https://mrkaye97.github.io/slackr/
  license: MIT
  summary: '''Slack'' <https://slack.com/> provides a service for teams to collaborate by sharing
    messages, images, links, files and more. Functions are provided that make it possible
    to interact with the ''Slack'' platform ''API''. When you need to share information
    or data from R, rather than resort to copy/ paste in e-mails or other services like
    ''Skype'' <https://www.skype.com/en/>, you can use this package to send well-formatted
    output from multiple R objects and expressions to all teammates at the same time
    with little effort. You can also send images from the current graphics device, R
    objects, and upload files.'
  license_family: MIT
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/MIT'
    - LICENSE

# The original CRAN metadata for this package was:

# Type: Package
# Package: slackr
# Title: Send Messages, Images, R Objects and Files to 'Slack' Channels/Users
# Version: 3.3.1
# Author: Bob Rudis [aut, cre], Jay Jacobs [ctb], David Severski [ctb], Quinn Weber [ctb], Konrad Karczewski [ctb], Shinya Uryu [ctb], Gregory Jefferis [ctb], Ed Niles [ctb], Rick Saporta [ctb], Jonathan Sidi [aut, ctb], Matt Kaye [aut, ctb], Xinye Li [ctb], Andrie de Vries [aut, ctb]
# Maintainer: Matt Kaye <mrkaye97@gmail.com>
# Description: 'Slack' <https://slack.com/> provides a service for teams to collaborate by sharing messages, images, links, files and more. Functions are provided that make it possible to interact with the 'Slack' platform 'API'. When you need to share information or data from R, rather than resort to copy/ paste in e-mails or other services like 'Skype' <https://www.skype.com/en/>, you can use this package to send well-formatted output from multiple R objects and expressions to all teammates at the same time with little effort. You can also send images from the current graphics device, R objects, and upload files.
# License: MIT + file LICENSE
# URL: https://github.com/mrkaye97/slackr, https://mrkaye97.github.io/slackr/
# BugReports: https://github.com/mrkaye97/slackr/issues
# Depends: R (>= 3.3.0)
# Imports: cachem (>= 1.0.4), dplyr, grDevices, httr (>= 1.4.2), jsonlite, magrittr, memoise (>= 2.0.0), rlang, tibble, utils, withr
# Suggests: covr, ggplot2, knitr, rmarkdown, svglite, testthat (>= 3.0.0), texPreview
# VignetteBuilder: knitr
# Config/testthat/edition: 3
# Encoding: UTF-8
# RoxygenNote: 7.2.3
# NeedsCompilation: no
# Packaged: 2023-02-25 18:30:57 UTC; matt
# Repository: CRAN
# Date/Publication: 2023-02-26 01:12:06 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
