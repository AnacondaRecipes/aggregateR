{% set version = '0.4-10' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-kappalab
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/kappalab_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/kappalab/kappalab_{{ version }}.tar.gz
  sha256: e95d98ace59b0bc0b9f0f8beb52ed60264f62c25a637bdc10f6f57f9d474dd93

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}make
    - {{ posix }}sed               # [win]
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-kernlab
    - r-lpsolve
    - r-quadprog

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-kernlab
    - r-lpsolve
    - r-quadprog

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('kappalab')"           # [not win]
    - "\"%R%\" -e \"library('kappalab')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=kappalab
  license: CeCILL
  summary: "S4 tool box for capacity (or non-additive measure, fuzzy measure) and integral manipulation
    in a finite setting. It contains routines for handling various types of set functions
    such as games or capacities. It can be used to compute several non-additive integrals:
    the Choquet integral, the Sugeno integral, and the symmetric and asymmetric Choquet
    integrals. An analysis of capacities in terms of decision behavior can be performed
    through the computation of various indices such as the Shapley value, the interaction
    index, the orness degree, etc. The well-known M\uFFFDbius transform, as well as
    other equivalent representations of set functions can also be computed. Kappalab
    further contains seven capacity identification routines: three least squares based
    approaches, a method based on linear programming, a maximum entropy like method
    based on variance minimization, a minimum distance approach and an unsupervised
    approach based on parametric entropies. The functions contained in Kappalab can
    for instance be used in the framework of multicriteria decision making or cooperative
    game theory."
  license_family: OTHER

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: kappalab
# Version: 0.4-10
# Date: 2023-02-09
# Title: Non-Additive Measure and Integral Manipulation Functions
# Author: Michel Grabisch, Ivan Kojadinovic, Patrick Meyer.
# Maintainer: Ivan Kojadinovic <ivan.kojadinovic@univ-pau.fr>
# Description: S4 tool box for capacity (or non-additive measure, fuzzy measure) and integral manipulation in a finite setting. It contains routines for handling various types of set functions such as games or capacities. It can be used to compute several non-additive integrals: the Choquet integral, the Sugeno integral, and the symmetric and asymmetric Choquet integrals. An analysis of capacities in terms of decision behavior can be performed through the computation of various indices such as the Shapley value, the interaction index, the orness degree, etc. The well-known Mbius transform, as well as other equivalent representations of set functions can also be computed. Kappalab further contains seven capacity identification routines: three least squares based approaches, a method based on linear programming, a maximum entropy like method based on variance minimization, a minimum distance approach and an unsupervised approach based on parametric entropies. The functions contained in Kappalab can for instance be used in the framework of multicriteria decision making or cooperative game theory.
# Depends: R(>= 2.1.0), methods, lpSolve, quadprog, kernlab
# Encoding: latin1
# License: CeCILL
# NeedsCompilation: yes
# Packaged: 2023-02-09 17:07:27 UTC; ikojadin
# Repository: CRAN
# Date/Publication: 2023-02-09 17:50:07 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
