{% set version = '2.8.9' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-pwrfdr
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/pwrFDR_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/pwrFDR/pwrFDR_{{ version }}.tar.gz
  sha256: 3f7a027b67ca9752e032eba3fc5600ea6d78a49cc24579143ac8414921ef149b

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}make
    - {{ posix }}sed               # [win]
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]

  host:
    - r-base

  run:
    - r-base
    - {{native}}gcc-libs         # [win]

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('pwrFDR')"           # [not win]
    - "\"%R%\" -e \"library('pwrFDR')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=pwrFDR
  license: GPL-2
  summary: This is a package for calculating two differing notions of power, or deriving sample
    sizes for specified requisite power in multiple testing experiments under a variety
    of methods for control of the distribution of the False Discovery Proportion (FDP).
    More specifically, one can choose to control the FDP distribution according to control
    of its (i) mean, e.g. the usual BH-FDR procedure, or via the probability that it
    exceeds a given value, delta, via (ii) the Romano procedure, or via (iii) my procedure
    based upon asymptotic approximation. Likewise, we can think of the power in multiple
    testing experiments in terms of a summary of the distribution of the True Positive
    Proportion (TPP). The package will compute power, sample size or any other missing
    parameter required for power based upon (i) the mean of the TPP which is the average
    power (ii) the probability that the TPP exceeds a given value, lambda, via my asymptotic
    approximation procedure. The theoretical results are described in Izmirlian, G.
    (2020) Stat. and Prob. letters, <doi:10.1016/j.spl.2020.108713>, and an applied  paper
    describing the methodology with a simulation study is in preparation.
  license_family: GPL2
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: pwrFDR
# Version: 2.8.9
# Title: FDR Power
# Author: Grant Izmirlian Jr <izmirlig@mail.nih.gov>
# Maintainer: Grant Izmirlian Jr <izmirlig@mail.nih.gov>
# Imports: methods, stats
# Description: This is a package for calculating two differing notions of power, or deriving sample sizes for specified requisite power in multiple testing experiments under a variety of methods for control of the distribution of the False Discovery Proportion (FDP). More specifically, one can choose to control the FDP distribution according to control of its (i) mean, e.g. the usual BH-FDR procedure, or via the probability that it exceeds a given value, delta, via (ii) the Romano procedure, or via (iii) my procedure based upon asymptotic approximation. Likewise, we can think of the power in multiple testing experiments in terms of a summary of the distribution of the True Positive Proportion (TPP). The package will compute power, sample size or any other missing parameter required for power based upon (i) the mean of the TPP which is the average power (ii) the probability that the TPP exceeds a given value, lambda, via my asymptotic approximation procedure. The theoretical results are described in Izmirlian, G. (2020) Stat. and Prob. letters, <doi:10.1016/j.spl.2020.108713>, and an applied  paper describing the methodology with a simulation study is in preparation.
# Encoding: UTF-8
# License: GPL (>= 2)
# LazyLoad: yes
# NeedsCompilation: yes
# Packaged: 2021-05-12 15:03:32 UTC; izmirlig
# Repository: CRAN
# Date/Publication: 2021-05-12 16:10:03 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
