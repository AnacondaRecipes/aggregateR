{% set version = '1.0.1' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-memo
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/memo_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/memo/memo_{{ version }}.tar.gz
  sha256: 32654284e2ed9c00b19ab8c9284986ef85295f64e972d0f42cc4468d43c4db92

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: testthat (>= 0.2), knitr, rmarkdown
requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{posix}}filesystem        # [win]
    - {{posix}}make
    - {{posix}}sed               # [win]
    - {{posix}}coreutils         # [win]
    - {{posix}}zip               # [win]

  host:
    - r-base
    - r-digest

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-digest

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('memo')"           # [not win]
    - "\"%R%\" -e \"library('memo')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=memo
  license: MIT
  summary: A simple in-memory, LRU cache that can be wrapped around any function to memoize it.
    The cache can be keyed on a hash of the input data (using 'digest') or on pointer
    equivalence.
  license_family: MIT
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/MIT'
    - LICENSE

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: memo
# Type: Package
# Title: In-Memory Caching for Repeated Computations
# Version: 1.0.1
# Date: 2018-1-03
# Author: Peter Meilstrup <peter.meilstrup@gmail.com>
# Maintainer: Peter Meilstrup <peter.meilstrup@gmail.com>
# Description: A simple in-memory, LRU cache that can be wrapped around any function to memoize it. The cache can be keyed on a hash of the input data (using 'digest') or on pointer equivalence.
# License: MIT + file LICENSE
# Imports: digest
# Suggests: testthat (>= 0.2), knitr, rmarkdown
# Collate: 'lru.R' 'cache.R' 'getPointer.R' 'memo-description.r'
# VignetteBuilder: knitr
# RoxygenNote: 6.0.1
# NeedsCompilation: yes
# Packaged: 2018-01-04 02:02:40 UTC; peter
# Repository: CRAN
# Date/Publication: 2018-01-04 04:23:01 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
