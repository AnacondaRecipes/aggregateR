{% set version = '4.4.3' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-rcppparallel
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/RcppParallel_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/RcppParallel/RcppParallel_{{ version }}.tar.gz
  sha256: 7a04929ecab97e46c0b09fe5cdbac9d7bfa17ad7d111f1a9787a9997f45fa0fa

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # TODO: osx tbbmalloc issue
  skip: True  # [osx]

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: Rcpp, RUnit, knitr, rmarkdown
requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{posix}}filesystem        # [win]
    - {{posix}}sed               # [win]
    - {{posix}}grep              # [win]
    - {{posix}}autoconf
    - {{posix}}automake          # [not win]
    - {{posix}}automake-wrapper  # [win]
    - {{posix}}pkg-config
    - {{posix}}make
    - {{posix}}coreutils         # [win]
    - {{posix}}zip               # [win]

  host:
    - r-base

  run:
    - r-base
    - {{native}}gcc-libs         # [win]

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('RcppParallel')"           # [not win]
    - "\"%R%\" -e \"library('RcppParallel')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: http://rcppcore.github.io/RcppParallel, https://github.com/RcppCore/RcppParallel
  license: GPL-2
  summary: High level functions for parallel programming with 'Rcpp'. For example, the 'parallelFor()'
    function can be used to convert the work of a standard serial "for" loop into a
    parallel one and the 'parallelReduce()' function can be used for accumulating aggregate
    or other values.
  license_family: GPL2
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: RcppParallel
# Type: Package
# Title: Parallel Programming Tools for 'Rcpp'
# Version: 4.4.3
# Authors@R: c( person("JJ", "Allaire", role = c("aut"), email = "jj@rstudio.com"), person("Romain", "Francois", role = c("aut", "cph")), person("Kevin", "Ushey", role = c("aut", "cre"), email = "kevin@rstudio.com"), person("Gregory", "Vandenbrouck", role = "aut"), person("Marcus", "Geelnard", role = c("aut", "cph"), comment = "TinyThread library, http://tinythreadpp.bitsnbites.eu/"), person(family = "RStudio", role = "cph"), person(family = "Intel", role = c("aut", "cph"), comment = "Intel TBB library, https://www.threadingbuildingblocks.org/"), person(family = "Microsoft", role = "cph") )
# Description: High level functions for parallel programming with 'Rcpp'. For example, the 'parallelFor()' function can be used to convert the work of a standard serial "for" loop into a parallel one and the 'parallelReduce()' function can be used for accumulating aggregate or other values.
# Depends: R (>= 3.0.2)
# Suggests: Rcpp, RUnit, knitr, rmarkdown
# SystemRequirements: GNU make, Windows: cmd.exe and cscript.exe, Solaris: g++ is required
# License: GPL-2
# URL: http://rcppcore.github.io/RcppParallel, https://github.com/RcppCore/RcppParallel
# Biarch: TRUE
# Collate: 'build.R' 'hooks.R' 'options.R' 'skeleton.R'
# NeedsCompilation: yes
# Packaged: 2019-05-22 18:52:14 UTC; kevin
# Author: JJ Allaire [aut], Romain Francois [aut, cph], Kevin Ushey [aut, cre], Gregory Vandenbrouck [aut], Marcus Geelnard [aut, cph] (TinyThread library, http://tinythreadpp.bitsnbites.eu/), RStudio [cph], Intel [aut, cph] (Intel TBB library, https://www.threadingbuildingblocks.org/), Microsoft [cph]
# Maintainer: Kevin Ushey <kevin@rstudio.com>
# Repository: CRAN
# Date/Publication: 2019-05-22 22:20:04 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
