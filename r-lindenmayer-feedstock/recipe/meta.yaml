{% set version = '0.1.13' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-lindenmayer
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/LindenmayeR_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/LindenmayeR/LindenmayeR_{{ version }}.tar.gz
  sha256: c53a859a5044d50252f65d605e3431e5e8667cd58fde0183882aa4d57add9607

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-stringr

  run:
    - r-base
    - r-stringr

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('LindenmayeR')"           # [not win]
    - "\"%R%\" -e \"library('LindenmayeR')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=LindenmayeR
  license: GPL-3
  summary: 'L-systems or Lindenmayer systems are parallel rewriting systems which can be used
    to simulate biological forms and certain kinds of fractals. Briefly, in an L-system
    a series of symbols in a string are replaced iteratively according to rules to give
    a more complex string. Eventually, the symbols are translated into turtle graphics
    for plotting. Wikipedia has a very good introduction: en.wikipedia.org/wiki/L-system
    This package provides basic functions for exploring L-systems.'
  license_family: GPL3
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-3'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: LindenmayeR
# Type: Package
# Title: Functions to Explore L-Systems (Lindenmayer Systems)
# Version: 0.1.13
# Date: 2017-07-31
# Description: L-systems or Lindenmayer systems are parallel rewriting systems which can be used to simulate biological forms and certain kinds of fractals. Briefly, in an L-system a series of symbols in a string are replaced iteratively according to rules to give a more complex string. Eventually, the symbols are translated into turtle graphics for plotting. Wikipedia has a very good introduction: en.wikipedia.org/wiki/L-system This package provides basic functions for exploring L-systems.
# License: GPL (>= 3)
# Depends: stringr, grid
# ByteCompile: TRUE
# BugReports: https://github.com/bryanhanson/LindenmayeR/issues
# Authors@R: c(person("Bryan", "Hanson", role = c("aut", "cre"), email = "hanson@depauw.edu"))
# RoxygenNote: 6.0.1
# NeedsCompilation: no
# Packaged: 2017-07-31 19:02:05 UTC; bryanhanson
# Author: Bryan Hanson [aut, cre]
# Maintainer: Bryan Hanson <hanson@depauw.edu>
# Repository: CRAN
# Date/Publication: 2017-07-31 21:52:31 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
