{% set version = '0.11.1' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-iml
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/iml_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/iml/iml_{{ version }}.tar.gz
  sha256: a248a071a06da405acb026e939908618ea03cc29d9b82102635d7d96363d233a

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: ALEPlot, bench, bit64, caret, covr, e1071, future.callr, glmnet, gower, h2o, keras (>= 2.2.5.0), knitr, MASS, mlr, mlr3, party, partykit, patchwork, randomForest, ranger, rmarkdown, rpart, testthat, yaImpute
requirements:
  build:
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-formula
    - r-metrics
    - r-r6
    - r-checkmate
    - r-data.table
    - r-future
    - r-future.apply
    - r-ggplot2
    - r-prediction

  run:
    - r-base
    - r-formula
    - r-metrics
    - r-r6
    - r-checkmate
    - r-data.table
    - r-future
    - r-future.apply
    - r-ggplot2
    - r-prediction

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('iml')"           # [not win]
    - "\"%R%\" -e \"library('iml')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://christophm.github.io/iml/, https://github.com/christophM/iml/
  license: MIT
  summary: 'Interpretability methods to analyze the behavior and predictions of any machine learning
    model.  Implemented methods are: Feature importance described by Fisher et al. (2018)
    <arXiv:1801.01489>, accumulated local effects plots described by Apley (2018) <arXiv:1612.08468>,
    partial dependence plots described by Friedman (2001) <www.jstor.org/stable/2699986>,
    individual conditional expectation (''ice'') plots described by Goldstein et al.  (2013)
    <doi:10.1080/10618600.2014.907095>, local models (variant of ''lime'') described
    by Ribeiro et. al (2016) <arXiv:1602.04938>, the Shapley Value described by Strumbelj
    et. al (2014) <doi:10.1007/s10115-013-0679-x>, feature interactions described by
    Friedman et. al <doi:10.1214/07-AOAS148> and tree surrogate models.'
  license_family: MIT
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/MIT'
    - LICENSE

# The original CRAN metadata for this package was:

# Type: Package
# Package: iml
# Title: Interpretable Machine Learning
# Version: 0.11.1
# Authors@R: c( person("Christoph", "Molnar", , "christoph.molnar@gmail.com", role = c("aut", "cre")), person("Patrick", "Schratz", , "patrick.schratz@gmail.com", role = "aut", comment = c(ORCID = "0000-0003-0748-6624")) )
# Maintainer: Christoph Molnar <christoph.molnar@gmail.com>
# Description: Interpretability methods to analyze the behavior and predictions of any machine learning model.  Implemented methods are: Feature importance described by Fisher et al. (2018) <arXiv:1801.01489>, accumulated local effects plots described by Apley (2018) <arXiv:1612.08468>, partial dependence plots described by Friedman (2001) <www.jstor.org/stable/2699986>, individual conditional expectation ('ice') plots described by Goldstein et al.  (2013) <doi:10.1080/10618600.2014.907095>, local models (variant of 'lime') described by Ribeiro et. al (2016) <arXiv:1602.04938>, the Shapley Value described by Strumbelj et. al (2014) <doi:10.1007/s10115-013-0679-x>, feature interactions described by Friedman et. al <doi:10.1214/07-AOAS148> and tree surrogate models.
# License: MIT + file LICENSE
# URL: https://christophm.github.io/iml/, https://github.com/christophM/iml/
# BugReports: https://github.com/christophM/iml/issues
# Imports: checkmate, data.table, Formula, future, future.apply, ggplot2, Metrics, prediction, R6
# Suggests: ALEPlot, bench, bit64, caret, covr, e1071, future.callr, glmnet, gower, h2o, keras (>= 2.2.5.0), knitr, MASS, mlr, mlr3, party, partykit, patchwork, randomForest, ranger, rmarkdown, rpart, testthat, yaImpute
# VignetteBuilder: knitr
# Config/testthat/edition: 3
# Config/testthat/parallel: true
# Encoding: UTF-8
# RoxygenNote: 7.2.1
# NeedsCompilation: no
# Packaged: 2022-09-08 08:50:32 UTC; chris
# Author: Christoph Molnar [aut, cre], Patrick Schratz [aut] (<https://orcid.org/0000-0003-0748-6624>)
# Repository: CRAN
# Date/Publication: 2022-09-08 09:52:58 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
