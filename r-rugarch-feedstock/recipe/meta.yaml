{% set version = '1.5-1' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-rugarch
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/rugarch_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/rugarch/rugarch_{{ version }}.tar.gz
  sha256: 9ffe510807ebafaa689a357c10df3523e3231b473b3eae18783f528c1577de1e

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: knitr, rmarkdown
requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{ compiler('fortran') }}        # [not win]
    - {{ compiler('m2w64_fortran') }}  # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}make
    - {{ posix }}sed               # [win]
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-rcpp
    - r-rcpparmadillo >=0.2.34
    - r-rsolnp
    - r-skewhyperbolic
    - r-chron
    - r-ks
    - r-nloptr
    - r-numderiv
    - r-spd
    - r-xts
    - r-zoo

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-rcpp
    - r-rcpparmadillo >=0.2.34
    - r-rsolnp
    - r-skewhyperbolic
    - r-chron
    - r-ks
    - r-nloptr
    - r-numderiv
    - r-spd
    - r-xts
    - r-zoo

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('rugarch')"           # [not win]
    - "\"%R%\" -e \"library('rugarch')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: http://www.unstarched.net, https://github.com/alexiosg/rugarch
  license: GPL-3
  summary: ARFIMA, in-mean, external regressors and various GARCH flavors, with methods for fit,
    forecast, simulation, inference and plotting.
  license_family: GPL3
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-3'

# The original CRAN metadata for this package was:

# Package: rugarch
# Type: Package
# Title: Univariate GARCH Models
# Version: 1.5-1
# Date: 2023-09-18
# Authors@R: c(person("Alexios", "Galanos", role = c("aut", "cre"), email = "alexios@4dscape.com"),person("Tobias","Kley",role="ctb",email="tobias.kley@bristol.ac.uk"))
# Maintainer: Alexios Galanos <alexios@4dscape.com>
# Depends: R (>= 3.5.0), methods, parallel
# LinkingTo: Rcpp (>= 0.10.6), RcppArmadillo (>= 0.2.34)
# Imports: Rsolnp, ks, numDeriv, spd, xts, zoo, chron, SkewHyperbolic, Rcpp,graphics, stats, grDevices, utils, nloptr
# Suggests: knitr, rmarkdown
# Description: ARFIMA, in-mean, external regressors and various GARCH flavors, with methods for fit, forecast, simulation, inference and plotting.
# Collate: rugarch-imports.R rugarch-cwrappers.R rugarch-solvers.R rugarch-lossfn.R rugarch-distributions.R rugarch-kappa.R rugarch-helperfn.R rugarch-numderiv.R rugarch-series.R rugarch-startpars.R rugarch-tests.R rugarch-armafor.R rugarch-graphs.R rugarch-classes.R rugarch-sgarch.R rugarch-figarch.R rugarch-csgarch.R rugarch-fgarch.R rugarch-egarch.R rugarch-gjrgarch.R rugarch-aparch.R rugarch-igarch.R rugarch-mcsgarch.R rugarch-realgarch.R rugarch-multi.R rugarch-plots.R rugarch-rolling.R rugarch-uncertainty.R rugarch-bootstrap.R rugarch-methods.R rugarch-benchmarks.R arfima-classes.R arfima-multi.R arfima-main.R arfima-methods.R rugarch-cv.R zzz.R
# LazyLoad: yes
# URL: http://www.unstarched.net, https://github.com/alexiosg/rugarch
# License: GPL-3
# NeedsCompilation: yes
# Packaged: 2023-09-19 20:08:57 UTC; alexios
# Author: Alexios Galanos [aut, cre], Tobias Kley [ctb]
# Repository: CRAN
# Date/Publication: 2023-09-20 02:30:03 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
