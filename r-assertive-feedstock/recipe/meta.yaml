{% set version = '0.3-6' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-assertive
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/assertive_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/assertive/assertive_{{ version }}.tar.gz
  sha256: c403169e83c433b65e911f7fd640b378e2a4a4765a36063584b8458168a4ea0a

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: testthat, markdown
requirements:
  build:
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-assertive.base >=0.0_4
    - r-assertive.code
    - r-assertive.data
    - r-assertive.data.uk
    - r-assertive.data.us
    - r-assertive.datetimes
    - r-assertive.files
    - r-assertive.matrices
    - r-assertive.models
    - r-assertive.numbers
    - r-assertive.properties >=0.0_2
    - r-assertive.reflection >=0.0_2
    - r-assertive.sets >=0.0_2
    - r-assertive.strings
    - r-assertive.types >=0.0_2
    - r-knitr

  run:
    - r-base
    - r-assertive.base >=0.0_4
    - r-assertive.code
    - r-assertive.data
    - r-assertive.data.uk
    - r-assertive.data.us
    - r-assertive.datetimes
    - r-assertive.files
    - r-assertive.matrices
    - r-assertive.models
    - r-assertive.numbers
    - r-assertive.properties >=0.0_2
    - r-assertive.reflection >=0.0_2
    - r-assertive.sets >=0.0_2
    - r-assertive.strings
    - r-assertive.types >=0.0_2
    - r-knitr

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('assertive')"           # [not win]
    - "\"%R%\" -e \"library('assertive')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://bitbucket.org/richierocks/assertive
  license: GPL-3
  summary: Lots of predicates (is_* functions) to check the state of your variables, and assertions
    (assert_* functions) to throw errors if they aren't in the right form.
  license_family: GPL3
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-3'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: assertive
# Type: Package
# Title: Readable Check Functions to Ensure Code Integrity
# Version: 0.3-6
# Date: 2020-07-30
# Author: Richard Cotton [aut, cre]
# Maintainer: Richard Cotton <richierocks@gmail.com>
# Authors@R: person("Richard", "Cotton", role = c("aut", "cre"), email = "richierocks@gmail.com")
# Description: Lots of predicates (is_* functions) to check the state of your variables, and assertions (assert_* functions) to throw errors if they aren't in the right form.
# URL: https://bitbucket.org/richierocks/assertive
# BugReports: https://bitbucket.org/richierocks/assertive/issues
# Depends: R (>= 3.0.0)
# Imports: assertive.base (>= 0.0-4), assertive.properties (>= 0.0-2), assertive.types (>= 0.0-2), assertive.numbers, assertive.strings, assertive.datetimes, assertive.files, assertive.sets (>= 0.0-2), assertive.matrices, assertive.models, assertive.data, assertive.data.uk, assertive.data.us, assertive.reflection (>= 0.0-2), assertive.code, knitr
# Suggests: testthat, markdown
# License: GPL (>= 3)
# LazyLoad: yes
# LazyData: yes
# VignetteBuilder: knitr
# Acknowledgments: Development of this package was partially funded by the Proteomics Core at Weill Cornell Medicine - Qatar <http://qatar-weill.cornell.edu>.  The Core is supported by 'Biomedical Research Program' funds, a program funded by Qatar Foundation.
# RoxygenNote: 7.1.1
# NeedsCompilation: no
# Packaged: 2020-07-31 18:29:39 UTC; richierocks
# Repository: CRAN
# Date/Publication: 2020-08-01 01:00:02 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
