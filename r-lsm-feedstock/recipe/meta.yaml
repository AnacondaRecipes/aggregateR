{% set version = '0.1.8' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-lsm
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/lsm_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/lsm/lsm_{{ version }}.tar.gz
  sha256: a37f7e481e4627563eb30090c7bceba3b5cf4ea142c020f486c383c509f3ef40

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{posix}}zip               # [win]

  host:
    - r-base

  run:
    - r-base

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('lsm')"           # [not win]
    - "\"%R%\" -e \"library('lsm')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/jlvia1191/lsm
  license: MIT
  summary: When the values of the outcome variable Y are either 0 or 1, the function lsm() calculates
    the estimation of the log likelihood in the saturated model. This model is characterized
    by Llinas (2006, ISSN:2389-8976) in section 2.3 through the assumptions 1 and 2.
    The function LogLik() works (almost perfectly) when the number of independent variables
    K is high, but for small K it calculates wrong values in some cases. For this reason,
    when Y is dichotomous and the data are grouped in J populations, it is recommended
    to use the function lsm() because it works very well for all K.
  license_family: MIT
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/MIT'
    - LICENSE

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: lsm
# Type: Package
# Title: Estimation of the log Likelihood of the Saturated Model
# Version: 0.1.8
# Date: 2018-08-30
# Authors@R: c(person("Humberto", "Llinas", role = c("aut")), person("Omar", "Fabregas", role = c("aut")), person("Jorge", "Villalba", email = "jlvia1191@gmail.com", role = c("aut", "cre")))
# Author: Humberto Llinas [aut], Omar Fabregas [aut], Jorge Villalba [aut, cre]
# Maintainer: Jorge Villalba <jlvia1191@gmail.com>
# Description: When the values of the outcome variable Y are either 0 or 1, the function lsm() calculates the estimation of the log likelihood in the saturated model. This model is characterized by Llinas (2006, ISSN:2389-8976) in section 2.3 through the assumptions 1 and 2. The function LogLik() works (almost perfectly) when the number of independent variables K is high, but for small K it calculates wrong values in some cases. For this reason, when Y is dichotomous and the data are grouped in J populations, it is recommended to use the function lsm() because it works very well for all K.
# Depends: R (>= 3.1.0),stats
# Encoding: UTF-8
# URL: https://github.com/jlvia1191/lsm
# License: MIT + file LICENSE
# LazyData: TRUE
# RoxygenNote: 6.1.0
# Collate: 'lsm.R'
# NeedsCompilation: no
# Packaged: 2018-08-30 07:59:08 UTC; jorgeR
# Repository: CRAN
# Date/Publication: 2018-08-30 08:12:13 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
