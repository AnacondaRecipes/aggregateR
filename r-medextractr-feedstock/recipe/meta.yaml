{% set version = '0.4' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-medextractr
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/medExtractR_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/medExtractR/medExtractR_{{ version }}.tar.gz
  sha256: b30a888efb98015bd94f7e1906bb44931016c27caada7aad464a0eeb2bbca372

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: knitr, ggplot2, rmarkdown, markdown, parallel
requirements:
  build:
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-stringi
    - r-stringr

  run:
    - r-base
    - r-stringi
    - r-stringr

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('medExtractR')"           # [not win]
    - "\"%R%\" -e \"library('medExtractR')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=medExtractR
  license: GPL-2
  summary: 'Function and support for medication and dosing information extraction from free-text
    clinical notes. Medication entities for the basic medExtractR implementation that
    can be extracted include drug name, strength, dose amount, dose, frequency, intake
    time, dose change, and time of last dose. The basic medExtractR is outlined in Weeks,
    Beck, McNeer, Williams, Bejan, Denny, Choi (2020) <doi: 10.1093/jamia/ocz207>. The
    extended medExtractR_tapering implementation is intended to extract dosing information
    for more tapering schedules, which are far more complex. The tapering extension
    allows for the extraction of additional entities including dispense amount, refills,
    dose schedule, time keyword, transition, and preposition.'
  license_family: GPL2
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: medExtractR
# Version: 0.4
# Date: 2022-03-21
# Title: Extraction of Medication Information from Clinical Text
# Authors@R: c(person("Leena", "Choi", role = c("aut", "cre"), email = "leena.choi@vanderbilt.edu", comment = c(ORCID = "0000-0002-2544-7090")), person("Cole", "Beck", role = "aut", email = "cole.beck@vumc.org", comment = c(ORCID = "0000-0002-6849-6255")), person("Hannah", "Weeks", role = "aut", email = "hannah.l.weeks@vanderbilt.edu", comment = c(ORCID = "0000-0002-0262-6790")) )
# Description: Function and support for medication and dosing information extraction from free-text clinical notes. Medication entities for the basic medExtractR implementation that can be extracted include drug name, strength, dose amount, dose, frequency, intake time, dose change, and time of last dose. The basic medExtractR is outlined in Weeks, Beck, McNeer, Williams, Bejan, Denny, Choi (2020) <doi: 10.1093/jamia/ocz207>. The extended medExtractR_tapering implementation is intended to extract dosing information for more tapering schedules, which are far more complex. The tapering extension allows for the extraction of additional entities including dispense amount, refills, dose schedule, time keyword, transition, and preposition.
# License: GPL (>= 2)
# Depends: R (>= 2.10)
# Encoding: UTF-8
# LazyData: true
# Imports: stringi, stringr
# Suggests: knitr, ggplot2, rmarkdown, markdown, parallel
# RoxygenNote: 7.1.1
# VignetteBuilder: knitr
# NeedsCompilation: no
# Packaged: 2022-04-01 18:42:35 UTC; leenachoi
# Author: Leena Choi [aut, cre] (<https://orcid.org/0000-0002-2544-7090>), Cole Beck [aut] (<https://orcid.org/0000-0002-6849-6255>), Hannah Weeks [aut] (<https://orcid.org/0000-0002-0262-6790>)
# Maintainer: Leena Choi <leena.choi@vanderbilt.edu>
# Repository: CRAN
# Date/Publication: 2022-04-04 21:40:07 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
