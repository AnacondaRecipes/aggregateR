{% set version = '1.0-11' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-linkcomm
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/linkcomm_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/linkcomm/linkcomm_{{ version }}.tar.gz
  sha256: 8b8923745900896cb053fe61682ad66a22698b6760de60427660ccbc7f75baf0

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: fastcluster
requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{posix}}filesystem        # [win]
    - {{posix}}make
    - {{posix}}sed               # [win]
    - {{posix}}coreutils         # [win]
    - {{posix}}zip               # [win]

  host:
    - r-base
    - r-rcolorbrewer
    - r-dynamictreecut
    - r-igraph

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-rcolorbrewer
    - r-dynamictreecut
    - r-igraph

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('linkcomm')"           # [not win]
    - "\"%R%\" -e \"library('linkcomm')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=linkcomm
  license: GPL-2
  summary: Link communities reveal the nested and overlapping structure in networks, and uncover
    the key nodes that form connections to multiple communities. linkcomm provides a
    set of tools for generating, visualizing, and analysing link communities in networks
    of arbitrary size and type. The linkcomm package also includes tools for generating,
    visualizing, and analysing Overlapping Cluster Generator (OCG) communities.
  license_family: GPL2
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: linkcomm
# Type: Package
# Title: Tools for Generating, Visualizing, and Analysing Link Communities in Networks
# Version: 1.0-11
# Date: 2011-05-27
# Author: Alex T. Kalinka <alex.t.kalinka@gmail.com>, with contributions from Alain Guenoche
# Maintainer: Alex T. Kalinka <alex.t.kalinka@gmail.com>
# Description: Link communities reveal the nested and overlapping structure in networks, and uncover the key nodes that form connections to multiple communities. linkcomm provides a set of tools for generating, visualizing, and analysing link communities in networks of arbitrary size and type. The linkcomm package also includes tools for generating, visualizing, and analysing Overlapping Cluster Generator (OCG) communities.
# Depends: igraph, RColorBrewer
# Imports: dynamicTreeCut, grid, utils
# Suggests: fastcluster
# License: GPL (>= 2)
# LazyLoad: yes
# LazyData: yes
# Packaged: 2014-08-13 08:19:15 UTC; alexk
# NeedsCompilation: yes
# Repository: CRAN
# Date/Publication: 2014-08-13 19:00:50

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
