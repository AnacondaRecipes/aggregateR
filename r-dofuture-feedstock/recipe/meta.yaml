{% set version = '1.0.0' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-dofuture
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/doFuture_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/doFuture/doFuture_{{ version }}.tar.gz
  sha256: 5f8bc87dad1e9d803bd8536cce4507384598709b49ba285c687a71ddabbbbcdf

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: doRNG (>= 1.8.2), markdown, R.rsp
requirements:
  build:
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-foreach >=1.5.0
    - r-future >=1.32.0
    - r-future.apply
    - r-globals
    - r-iterators

  run:
    - r-base
    - r-foreach >=1.5.0
    - r-future >=1.32.0
    - r-future.apply
    - r-globals
    - r-iterators

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('doFuture')"           # [not win]
    - "\"%R%\" -e \"library('doFuture')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://doFuture.futureverse.org, https://github.com/HenrikBengtsson/doFuture
  license: LGPL-2.1
  summary: The 'future' package provides a unifying parallelization framework for R that supports
    many parallel and distributed backends. The 'foreach' package provides a powerful
    API for iterating over an R expression in parallel. The 'doFuture' package brings
    the best of the two together. There are two alternative ways to use this package.
    The first is the traditional 'foreach' approach by registering the 'foreach' adapter
    'registerDoFuture()' and so that 'y <- foreach(...) %dopar% { ... }' runs in parallelizes
    with the 'future' framework. The other alternative is to use 'y <- foreach(...)
    %dofuture% { ... }', which does not require using 'registerDoFuture()' and has many
    advantages over '%dopar%'.
  license_family: LGPL
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/LGPL-2.1'

# The original CRAN metadata for this package was:

# Package: doFuture
# Version: 1.0.0
# Title: Use Foreach to Parallelize via the Future Framework
# Depends: foreach (>= 1.5.0), future (>= 1.32.0)
# Imports: future.apply, globals, iterators, parallel, utils
# Suggests: doRNG (>= 1.8.2), markdown, R.rsp
# VignetteBuilder: R.rsp
# Authors@R: c(person("Henrik", "Bengtsson", role=c("aut", "cre", "cph"), email = "henrikb@braju.com"))
# Description: The 'future' package provides a unifying parallelization framework for R that supports many parallel and distributed backends. The 'foreach' package provides a powerful API for iterating over an R expression in parallel. The 'doFuture' package brings the best of the two together. There are two alternative ways to use this package. The first is the traditional 'foreach' approach by registering the 'foreach' adapter 'registerDoFuture()' and so that 'y <- foreach(...) %dopar% { ... }' runs in parallelizes with the 'future' framework. The other alternative is to use 'y <- foreach(...) %dofuture% { ... }', which does not require using 'registerDoFuture()' and has many advantages over '%dopar%'.
# License: LGPL (>= 2.1)
# LazyLoad: TRUE
# URL: https://doFuture.futureverse.org, https://github.com/HenrikBengtsson/doFuture
# BugReports: https://github.com/HenrikBengtsson/doFuture/issues
# RoxygenNote: 7.2.3
# NeedsCompilation: no
# Packaged: 2023-03-24 01:50:26 UTC; henrik
# Author: Henrik Bengtsson [aut, cre, cph]
# Maintainer: Henrik Bengtsson <henrikb@braju.com>
# Repository: CRAN
# Date/Publication: 2023-03-24 23:50:12 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
