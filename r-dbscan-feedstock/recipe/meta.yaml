{% set version = '1.1-10' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-dbscan
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/dbscan_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/dbscan/dbscan_{{ version }}.tar.gz
  sha256: e1fdcc324391d074800d072b4d8d10147d6f42f6ac9cd270e1f59739d30e1dc1

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: fpc, microbenchmark, testthat, dendextend, igraph, knitr, rmarkdown
requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}make
    - {{ posix }}sed               # [win]
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-rcpp >=1.0.0

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-rcpp >=1.0.0

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('dbscan')"           # [not win]
    - "\"%R%\" -e \"library('dbscan')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/mhahsler/dbscan
  license: GPL-2
  summary: A fast reimplementation of several density-based algorithms of the DBSCAN family.
    Includes the clustering algorithms DBSCAN (density-based spatial clustering of applications
    with noise) and HDBSCAN (hierarchical DBSCAN), the ordering algorithm OPTICS (ordering
    points to identify the clustering structure), shared nearest neighbor clustering,
    and the outlier detection algorithms LOF (local outlier factor) and GLOSH (global-local
    outlier score from hierarchies). The implementations use the kd-tree data structure
    (from library ANN) for faster k-nearest neighbor search. An R interface to fast
    kNN and fixed-radius NN search is also provided. Hahsler, Piekenbrock and Doran
    (2019) <doi:10.18637/jss.v091.i01>.
  license_family: GPL2
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: dbscan
# Version: 1.1-10
# Date: 2022-01-14
# Title: Density-Based Spatial Clustering of Applications with Noise (DBSCAN) and Related Algorithms
# Authors@R: c(person("Michael", "Hahsler", role = c("aut", "cre", "cph"), email = "mhahsler@lyle.smu.edu"), person("Matthew", "Piekenbrock", role = c("aut", "cph")), person("Sunil", "Arya", role = c("ctb", "cph")), person("David", "Mount", role = c("ctb", "cph")))
# Description: A fast reimplementation of several density-based algorithms of the DBSCAN family. Includes the clustering algorithms DBSCAN (density-based spatial clustering of applications with noise) and HDBSCAN (hierarchical DBSCAN), the ordering algorithm OPTICS (ordering points to identify the clustering structure), shared nearest neighbor clustering, and the outlier detection algorithms LOF (local outlier factor) and GLOSH (global-local outlier score from hierarchies). The implementations use the kd-tree data structure (from library ANN) for faster k-nearest neighbor search. An R interface to fast kNN and fixed-radius NN search is also provided. Hahsler, Piekenbrock and Doran (2019) <doi:10.18637/jss.v091.i01>.
# SystemRequirements: C++11
# Imports: Rcpp (>= 1.0.0), graphics, stats
# LinkingTo: Rcpp
# Suggests: fpc, microbenchmark, testthat, dendextend, igraph, knitr, rmarkdown
# VignetteBuilder: knitr
# URL: https://github.com/mhahsler/dbscan
# BugReports: https://github.com/mhahsler/dbscan/issues
# License: GPL (>= 2)
# Copyright: ANN library is copyright by University of Maryland, Sunil Arya and David Mount. All other code is copyright by Michael Hahsler and Matthew Piekenbrock.
# Encoding: UTF-8
# RoxygenNote: 7.1.2.9000
# NeedsCompilation: yes
# Packaged: 2022-01-14 19:45:53 UTC; hahsler
# Author: Michael Hahsler [aut, cre, cph], Matthew Piekenbrock [aut, cph], Sunil Arya [ctb, cph], David Mount [ctb, cph]
# Maintainer: Michael Hahsler <mhahsler@lyle.smu.edu>
# Repository: CRAN
# Date/Publication: 2022-01-15 17:02:48 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
