{% set version = '0.75-7' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-diptest
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/diptest_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/diptest/diptest_{{ version }}.tar.gz
  sha256: 462900100ca598ef21dbe566bf1ab2ce7c49cdeab6b7a600a50489b05f61b61b

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{posix}}filesystem        # [win]
    - {{posix}}make
    - {{posix}}sed               # [win]
    - {{posix}}coreutils         # [win]
    - {{posix}}zip               # [win]

  host:
    - r-base

  run:
    - r-base
    - {{native}}gcc-libs         # [win]

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('diptest')"           # [not win]
    - "\"%R%\" -e \"library('diptest')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=diptest
  license: GPL-2
  summary: Compute Hartigan's dip test statistic for unimodality / multimodality and provide
    a test with simulation based p-values,  where the original public code has been
    corrected.
  license_family: GPL2
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: diptest
# Version: 0.75-7
# Date: 2015-06-07
# Title: Hartigan's Dip Test Statistic for Unimodality - Corrected
# Description: Compute Hartigan's dip test statistic for unimodality / multimodality and provide a test with simulation based p-values,  where the original public code has been corrected.
# Maintainer: Martin Maechler <maechler@stat.math.ethz.ch>
# BuildResaveData: no
# Author: Martin Maechler (originally from Fortran and S-plus by Dario Ringach, NYU.edu)
# License: GPL (>= 2)
# NeedsCompilation: yes
# Packaged: 2016-12-05 14:54:04 UTC; hornik
# Repository: CRAN
# Date/Publication: 2016-12-05 18:28:47

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
