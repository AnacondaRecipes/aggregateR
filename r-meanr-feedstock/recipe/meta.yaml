{% set version = '0.1-5' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-meanr
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/meanr_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/meanr/meanr_{{ version }}.tar.gz
  sha256: b0d4eda21cf11a5f09113c9bde90a52bf3b5fa85c4dfa3fee2c291119a9c6335

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}sed               # [win]
    - {{ posix }}grep              # [win]
    - {{ posix }}autoconf
    - {{ posix }}automake          # [not win]
    - {{ posix }}automake-wrapper  # [win]
    - {{ posix }}pkg-config
    - {{ posix }}make
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]

  host:
    - r-base

  run:
    - r-base
    - {{native}}gcc-libs         # [win]

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('meanr')"           # [not win]
    - "\"%R%\" -e \"library('meanr')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/wrathematics/meanr
  license: BSD_2_clause
  summary: Sentiment analysis is a popular technique in text mining that attempts to determine
    the emotional state of some text. We provide a new implementation of a common method
    for computing sentiment, whereby words are scored as positive or negative according
    to a dictionary lookup. Then the sum of those scores is returned for the document.
    We use the 'Hu' and 'Liu' sentiment dictionary ('Hu' and 'Liu', 2004) <doi:10.1145/1014052.1014073>
    for determining sentiment. The scoring function is 'vectorized' by document, and
    scores for multiple documents are computed in parallel via 'OpenMP'.
  license_family: BSD
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/BSD_2_clause'
    - LICENSE

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: meanr
# Type: Package
# Title: Sentiment Analysis Scorer
# Version: 0.1-5
# Description: Sentiment analysis is a popular technique in text mining that attempts to determine the emotional state of some text. We provide a new implementation of a common method for computing sentiment, whereby words are scored as positive or negative according to a dictionary lookup. Then the sum of those scores is returned for the document. We use the 'Hu' and 'Liu' sentiment dictionary ('Hu' and 'Liu', 2004) <doi:10.1145/1014052.1014073> for determining sentiment. The scoring function is 'vectorized' by document, and scores for multiple documents are computed in parallel via 'OpenMP'.
# License: BSD 2-clause License + file LICENSE
# Depends: R (>= 3.0.0)
# LazyLoad: yes
# NeedsCompilation: yes
# ByteCompile: yes
# Authors@R: c(person("Drew", "Schmidt", role=c("aut", "cre"), email="wrathematics@gmail.com"))
# Maintainer: Drew Schmidt <wrathematics@gmail.com>
# URL: https://github.com/wrathematics/meanr
# BugReports: https://github.com/wrathematics/meanr/issues
# RoxygenNote: 7.2.1
# Packaged: 2022-10-25 14:46:56 UTC; mschmid3
# Author: Drew Schmidt [aut, cre]
# Repository: CRAN
# Date/Publication: 2022-10-25 20:52:44 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
