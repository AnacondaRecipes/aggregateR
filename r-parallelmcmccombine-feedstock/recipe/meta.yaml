{% set version = '1.0' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-parallelmcmccombine
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/parallelMCMCcombine_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/parallelMCMCcombine/parallelMCMCcombine_{{ version }}.tar.gz
  sha256: e7d3e9ff1376201268b8a80bab6ba876bfca44ee3461eab38398ab414c9b7916

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{posix}}zip               # [win]

  host:
    - r-base
    - r-mvtnorm

  run:
    - r-base
    - r-mvtnorm

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('parallelMCMCcombine')"           # [not win]
    - "\"%R%\" -e \"library('parallelMCMCcombine')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=parallelMCMCcombine
  license: GPL-2
  summary: Recent Bayesian Markov chain Monto Carlo (MCMC) methods have been developed for big
    data sets that are too large to be analyzed using traditional statistical methods.
    These methods partition the data into non-overlapping subsets, and perform parallel
    independent Bayesian MCMC analyses on the data subsets, creating independent subposterior
    samples for each data subset. These independent subposterior samples are combined
    through four functions in this package, including averaging across subset samples,
    weighted averaging across subsets samples, and kernel smoothing across subset samples.
    The four functions assume the user has previously run the Bayesian analysis and
    has produced the independent subposterior samples outside of the package; the functions
    use as input the array of subposterior samples. The methods have been demonstrated
    to be useful for Bayesian MCMC models including Bayesian logistic regression, Bayesian
    Gaussian mixture models and Bayesian hierarchical Poisson-Gamma models. The methods
    are appropriate for Bayesian hierarchical models with hyperparameters, as long as
    data values in a single level of the hierarchy are not split into subsets.
  license_family: GPL2
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: parallelMCMCcombine
# Type: Package
# Title: Methods for combining independent subset Markov chain Monte Carlo (MCMC) posterior samples to estimate a posterior density given the full data set
# Version: 1.0
# Date: 2014-06-12
# Author: Alexey Miroshnikov, Erin Conlon
# Maintainer: Alexey Miroshnikov <amiroshn@gmail.com>
# Description: Recent Bayesian Markov chain Monto Carlo (MCMC) methods have been developed for big data sets that are too large to be analyzed using traditional statistical methods. These methods partition the data into non-overlapping subsets, and perform parallel independent Bayesian MCMC analyses on the data subsets, creating independent subposterior samples for each data subset. These independent subposterior samples are combined through four functions in this package, including averaging across subset samples, weighted averaging across subsets samples, and kernel smoothing across subset samples. The four functions assume the user has previously run the Bayesian analysis and has produced the independent subposterior samples outside of the package; the functions use as input the array of subposterior samples. The methods have been demonstrated to be useful for Bayesian MCMC models including Bayesian logistic regression, Bayesian Gaussian mixture models and Bayesian hierarchical Poisson-Gamma models. The methods are appropriate for Bayesian hierarchical models with hyperparameters, as long as data values in a single level of the hierarchy are not split into subsets.
# Depends: mvtnorm
# License: GPL (>= 2)
# Packaged: 2014-06-19 18:45:42 UTC; Alexey
# NeedsCompilation: no
# Repository: CRAN
# Date/Publication: 2014-06-20 08:03:26

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
