{% set version = '0.1.2' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-rapiclient
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/rapiclient_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/rapiclient/rapiclient_{{ version }}.tar.gz
  sha256: 6432236f7f342cd1d9a50335b7955497c0aec86722f8fae75344e6f44fa6591c

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: testthat
requirements:
  build:
    - {{posix}}zip               # [win]

  host:
    - r-base
    - r-httr
    - r-jsonlite

  run:
    - r-base
    - r-httr
    - r-jsonlite

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('rapiclient')"           # [not win]
    - "\"%R%\" -e \"library('rapiclient')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/bergant/rapiclient
  license: MIT
  summary: Access services specified in OpenAPI (formerly Swagger) format. It is not a code generator.
    Client is generated dynamically as a list of R  functions.
  license_family: MIT
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/MIT'
    - LICENSE

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: rapiclient
# Type: Package
# Title: Dynamic OpenAPI/Swagger Client
# Version: 0.1.2
# Authors@R: person("Darko", "Bergant", email = "darko.bergant@gmail.com", role = c("aut", "cre"))
# URL: https://github.com/bergant/rapiclient
# BugReports: https://github.com/bergant/rapiclient/issues
# Description: Access services specified in OpenAPI (formerly Swagger) format. It is not a code generator. Client is generated dynamically as a list of R  functions.
# Depends: R (>= 3.3)
# License: MIT + file LICENSE
# Imports: jsonlite, httr
# LazyData: TRUE
# RoxygenNote: 5.0.1
# Suggests: testthat
# NeedsCompilation: no
# Packaged: 2017-02-13 18:09:31 UTC; Dare
# Author: Darko Bergant [aut, cre]
# Maintainer: Darko Bergant <darko.bergant@gmail.com>
# Repository: CRAN
# Date/Publication: 2017-02-14 02:14:38

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
