{% set version = '0.12-1' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-transport
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/transport_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/transport/transport_{{ version }}.tar.gz
  sha256: 74a03239477069da0a4b71dff5d14909dd08b37cc6dae0f1e0206671461cba11

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: animation, ks, testthat
requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{posix}}filesystem        # [win]
    - {{posix}}make
    - {{posix}}sed               # [win]
    - {{posix}}coreutils         # [win]
    - {{posix}}zip               # [win]
    - llvm-openmp >=4.0.1  # [osx]

  host:
    - r-base
    - r-rcpp >=0.12.10
    - r-rcppeigen
    - r-data.table
    - llvm-openmp >=4.0.1  # [osx]

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-rcpp >=0.12.10
    - r-rcppeigen
    - r-data.table
    - llvm-openmp >=4.0.1  # [osx]

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('transport')"           # [not win]
    - "\"%R%\" -e \"library('transport')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: http://www.dominic.schuhmacher.name
  license: GPL-2
  summary: Solve optimal transport problems. Compute Wasserstein distances (a.k.a. Kantorovitch,
    Fortet--Mourier, Mallows, Earth Mover's, or minimal L_p distances), return the corresponding
    transference plans, and display them graphically. Objects that can be compared include
    grey-scale images, (weighted) point patterns, and mass vectors.
  license_family: GPL2
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: transport
# Version: 0.12-1
# Date: 2019-08-07
# Title: Computation of Optimal Transport Plans and Wasserstein Distances
# Authors@R: c(person("Dominic", "Schuhmacher", email = "dominic.schuhmacher@mathematik.uni-goettingen.de", role = c("aut","cre")), person("Bjorn", "Bahre", role = "aut", comment = "aha and power diagrams"), person("Nicolas", "Bonneel", role = "aut", comment = "networkflow"), person("Carsten", "Gottschlich", role = "aut", comment = "simplex and shortlist"), person("Valentin", "Hartmann", role = "aut", comment = "semidiscrete1"), person("Florian", "Heinemann", role = "aut", comment = "transport_track and networkflow integration"), person("Bernhard", "Schmitzer", role = "aut", comment = "shielding"), person("Jorn", "Schrieber", role = "aut", comment = "subsampling"), person("Timo", "Wilm", role = "ctb", comment = "wpp"))
# Maintainer: Dominic Schuhmacher <dominic.schuhmacher@mathematik.uni-goettingen.de>
# Depends: R (>= 3.0.0)
# Imports: grDevices, graphics, methods, stats, Rcpp (>= 0.12.10), data.table
# Suggests: animation, ks, testthat
# LinkingTo: RcppEigen, Rcpp
# Description: Solve optimal transport problems. Compute Wasserstein distances (a.k.a. Kantorovitch, Fortet--Mourier, Mallows, Earth Mover's, or minimal L_p distances), return the corresponding transference plans, and display them graphically. Objects that can be compared include grey-scale images, (weighted) point patterns, and mass vectors.
# LazyData: yes
# Encoding: UTF-8
# License: GPL (>= 2)
# URL: http://www.dominic.schuhmacher.name
# RoxygenNote: 6.1.1
# NeedsCompilation: yes
# Packaged: 2019-08-07 14:30:13 UTC; schumi
# Author: Dominic Schuhmacher [aut, cre], Bjorn Bahre [aut] (aha and power diagrams), Nicolas Bonneel [aut] (networkflow), Carsten Gottschlich [aut] (simplex and shortlist), Valentin Hartmann [aut] (semidiscrete1), Florian Heinemann [aut] (transport_track and networkflow integration), Bernhard Schmitzer [aut] (shielding), Jorn Schrieber [aut] (subsampling), Timo Wilm [ctb] (wpp)
# Repository: CRAN
# Date/Publication: 2019-08-19 16:50:03 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
