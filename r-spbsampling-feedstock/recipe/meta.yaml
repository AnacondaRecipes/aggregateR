{% set version = '1.3.4' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-spbsampling
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/Spbsampling_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/Spbsampling/Spbsampling_{{ version }}.tar.gz
  sha256: 2c2be41ed29a2b3ec72aff18bf15c33c3ddee11127c6cb1a1ee4f41ba1cb4fe7

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}make
    - {{ posix }}sed               # [win]
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-rcpp
    - r-rcpparmadillo

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-rcpp
    - r-rcpparmadillo

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('Spbsampling')"           # [not win]
    - "\"%R%\" -e \"library('Spbsampling')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=Spbsampling
  license: GPL-3
  summary: Selection of spatially balanced samples. In particular, the implemented sampling designs
    allow to select probability samples well spread over the population of interest,
    in any dimension and using any distance function (e.g. Euclidean distance, Manhattan
    distance). For more details, Benedetti R and Piersimoni F (2017) <doi:10.1002/bimj.201600194>
    and Benedetti R and Piersimoni F (2017) <arXiv:1710.09116>. The implementation has
    been done in C++ through the use of 'Rcpp' and 'RcppArmadillo'.
  license_family: GPL3
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-3'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: Spbsampling
# Title: Spatially Balanced Sampling
# Version: 1.3.4
# Authors@R: c( person("Francesco", "Pantalone", email = "pantalone.fra@gmail.com", role = c("aut","cre")), person("Roberto", "Benedetti", role = "aut"), person("Federica", "Piersimoni", role = "aut") )
# Description: Selection of spatially balanced samples. In particular, the implemented sampling designs allow to select probability samples well spread over the population of interest, in any dimension and using any distance function (e.g. Euclidean distance, Manhattan distance). For more details, Benedetti R and Piersimoni F (2017) <doi:10.1002/bimj.201600194> and Benedetti R and Piersimoni F (2017) <arXiv:1710.09116>. The implementation has been done in C++ through the use of 'Rcpp' and 'RcppArmadillo'.
# Depends: R (>= 3.1)
# License: GPL-3
# Encoding: UTF-8
# LazyData: true
# LinkingTo: Rcpp, RcppArmadillo
# Imports: Rcpp
# RoxygenNote: 7.1.1
# NeedsCompilation: yes
# Packaged: 2020-08-24 10:39:31 UTC; francesco
# Author: Francesco Pantalone [aut, cre], Roberto Benedetti [aut], Federica Piersimoni [aut]
# Maintainer: Francesco Pantalone <pantalone.fra@gmail.com>
# Repository: CRAN
# Date/Publication: 2020-08-24 14:00:02 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
