{% set version = '0.2' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-av
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/av_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/av/av_{{ version }}.tar.gz
  sha256: 0c0b1f58f73a14ec4149bac78d6871379b75f3cb2c7710a0d22f07a8cd08866f

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # TODO there is no ffmpeg available on Windows
  skip: True  # [win]
  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: testthat, ps, ggplot2, gapminder
requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{posix}}filesystem        # [win]
    - {{posix}}sed               # [win]
    - {{posix}}grep              # [win]
    - {{posix}}autoconf
    - {{posix}}automake          # [not win]
    - {{posix}}automake-wrapper  # [win]
    - {{posix}}pkg-config
    - {{posix}}make
    - {{posix}}coreutils         # [win]
    - {{posix}}zip               # [win]

  host:
    - r-base
    - {{native}}ffmpeg

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - {{native}}ffmpeg

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('av')"           # [not win]
    - "\"%R%\" -e \"library('av')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/ropensci/av (devel) http://www.ffmpeg.org/ (upstream)
  license: MIT + file LICENSE
  summary: Bindings to 'FFmpeg' <http://www.ffmpeg.org/> AV library for working with audio  and
    video in R. Generate high quality videos files by capturing images from the R graphics
    device combined with custom audio stream. This package interfaces directly to the
    C API and does not require any command line utilities.
  license_family: MIT

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: av
# Type: Package
# Title: Working with Audio and Video
# Version: 0.2
# Authors@R: person("Jeroen", "Ooms", role = c("aut", "cre"), email = "jeroen@berkeley.edu", comment = c(ORCID = "0000-0002-4035-0289"))
# Description: Bindings to 'FFmpeg' <http://www.ffmpeg.org/> AV library for working with audio  and video in R. Generate high quality videos files by capturing images from the R graphics device combined with custom audio stream. This package interfaces directly to the C API and does not require any command line utilities.
# License: MIT + file LICENSE
# URL: https://github.com/ropensci/av (devel) http://www.ffmpeg.org/ (upstream)
# BugReports: https://github.com/ropensci/av/issues
# Encoding: UTF-8
# LazyData: true
# RoxygenNote: 6.1.0
# SystemRequirements: FFmpeg >= 3.2: libavfilter-dev (deb), ffmpeg-devel(rpm)
# Suggests: testthat, ps, ggplot2, gapminder
# NeedsCompilation: yes
# Packaged: 2018-09-21 23:24:52 UTC; jeroen
# Author: Jeroen Ooms [aut, cre] (<https://orcid.org/0000-0002-4035-0289>)
# Maintainer: Jeroen Ooms <jeroen@berkeley.edu>
# Repository: CRAN
# Date/Publication: 2018-09-30 15:00:10 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
