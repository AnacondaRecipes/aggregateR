{% set version = '0.6.3-11' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-pp
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/PP_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/PP/PP_{{ version }}.tar.gz
  sha256: e6d86803eb598948a10d39fbdea0b98c3bc5c64f7f8b942125a35449a32cfbfc

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: testthat, roxygen2, knitr, eRm, data.table, prettydoc, rmarkdown
requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}make
    - {{ posix }}sed               # [win]
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-rcpp >=0.11.2

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-rcpp >=0.11.2

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('PP')"           # [not win]
    - "\"%R%\" -e \"library('PP')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/jansteinfeld/PP
  license: GPL-3
  summary: The PP package includes estimation of (MLE, WLE, MAP, EAP, ROBUST) person parameters
    for the 1,2,3,4-PL model and the GPCM (generalized partial credit model). The parameters
    are estimated under the assumption that the item parameters are known and fixed.
    The package is useful e.g. in the case that items from an item pool / item bank
    with known item parameters are administered to a new population of test-takers and
    an ability estimation for every test-taker is needed.
  license_family: GPL3
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-3'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: PP
# Type: Package
# Title: Person Parameter Estimation
# Version: 0.6.3-11
# Date: 2021-05-22
# Authors@R: c( person(given = "Jan", family = "Steinfeld", email = "jan.d.steinfeld@gmail.com", role = c("cre","aut"), comment = c(ORCID = "0000-0001-9853-8260") ), person(given = "Manuel", family = "Reif", email = "manuel.reif@gmail.com", role = c("aut") ) )
# Author: Jan Steinfeld [cre, aut] (<https://orcid.org/0000-0001-9853-8260>), Manuel Reif [aut]
# Maintainer: Jan Steinfeld <jan.d.steinfeld@gmail.com>
# Description: The PP package includes estimation of (MLE, WLE, MAP, EAP, ROBUST) person parameters for the 1,2,3,4-PL model and the GPCM (generalized partial credit model). The parameters are estimated under the assumption that the item parameters are known and fixed. The package is useful e.g. in the case that items from an item pool / item bank with known item parameters are administered to a new population of test-takers and an ability estimation for every test-taker is needed.
# URL: https://github.com/jansteinfeld/PP
# BugReports: https://github.com/jansteinfeld/PP/issues
# License: GPL-3
# LazyLoad: yes
# LazyData: true
# VignetteBuilder: knitr
# Depends: R (>= 3.0)
# Encoding: UTF-8
# Suggests: testthat, roxygen2, knitr, eRm, data.table, prettydoc, rmarkdown
# Imports: Rcpp (>= 0.11.2)
# LinkingTo: Rcpp
# RoxygenNote: 7.1.1
# NeedsCompilation: yes
# Packaged: 2021-05-24 11:23:23 UTC; jansteinfeld
# Repository: CRAN
# Date/Publication: 2021-05-27 11:10:02 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
