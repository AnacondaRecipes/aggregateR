{% set version = '1.1.1' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-twosamples
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/twosamples_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/twosamples/twosamples_{{ version }}.tar.gz
  sha256: f7c63cad8f5f21893d8c80d8df582c1a9677ed0b32ed3bea9b4f6aff13995030

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}make
    - {{ posix }}sed               # [win]
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-rcpp >=0.12.17

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-rcpp >=0.12.17

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('twosamples')"           # [not win]
    - "\"%R%\" -e \"library('twosamples')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/cdowd/twosamples
  license: GPL-2
  summary: 'Fast randomization based two sample tests. Testing the hypothesis that two samples
    come from the same distribution using randomization to create p-values. Included
    tests are: Kolmogorov-Smirnov, Kuiper, Cramer-von Mises, Anderson-Darling, Wasserstein,
    and DTS. The default test (two_sample) is based on the DTS test statistic, as it
    is the most powerful, and thus most useful to most users. The DTS test statistic
    builds on the Wasserstein distance by using a weighting scheme like that of Anderson-Darling.
    See the companion paper at <arXiv:2007.01360> or <https://codowd.com/public/DTS.pdf>
    for details of that test statistic, and non-standard uses of the package (parallel
    for big N, weighted observations, one sample tests, etc). We also include the permutation
    scheme to make test building simple for others.'
  license_family: GPL2
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: twosamples
# Type: Package
# Title: Fast Permutation Based Two Sample Tests
# Version: 1.1.1
# Author: Connor Dowd
# Maintainer: Connor Dowd <cdowd@chicagobooth.edu>
# Description: Fast randomization based two sample tests. Testing the hypothesis that two samples come from the same distribution using randomization to create p-values. Included tests are: Kolmogorov-Smirnov, Kuiper, Cramer-von Mises, Anderson-Darling, Wasserstein, and DTS. The default test (two_sample) is based on the DTS test statistic, as it is the most powerful, and thus most useful to most users. The DTS test statistic builds on the Wasserstein distance by using a weighting scheme like that of Anderson-Darling. See the companion paper at <arXiv:2007.01360> or <https://codowd.com/public/DTS.pdf> for details of that test statistic, and non-standard uses of the package (parallel for big N, weighted observations, one sample tests, etc). We also include the permutation scheme to make test building simple for others.
# License: GPL (>= 2)
# Encoding: UTF-8
# LazyData: true
# Imports: Rcpp (>= 0.12.17)
# LinkingTo: Rcpp
# RoxygenNote: 7.0.2
# URL: https://github.com/cdowd/twosamples
# BugReports: https://github.com/cdowd/twosamples/issues
# NeedsCompilation: yes
# Packaged: 2020-07-15 20:05:40 UTC; cdowd
# Repository: CRAN
# Date/Publication: 2020-07-19 14:10:02 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
