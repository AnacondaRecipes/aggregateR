{% set version = '1.0.0' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-vstsr
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/vstsr_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/vstsr/vstsr_{{ version }}.tar.gz
  sha256: ff91559dfbe90ef3236b3f501ee59e35aaf2b1ac9d4e63502fb2eec07de19a3a

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: testthat
requirements:
  build:
    - {{posix}}zip               # [win]

  host:
    - r-base
    - r-r6
    - r-rcurl
    - r-httr
    - r-jsonlite
    - r-magrittr
    - r-xml2

  run:
    - r-base
    - r-r6
    - r-rcurl
    - r-httr
    - r-jsonlite
    - r-magrittr
    - r-xml2

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('vstsr')"           # [not win]
    - "\"%R%\" -e \"library('vstsr')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/ashbaldry/vstsr, https://docs.microsoft.com/en-us/rest/api/vsts
  license: GPL-2
  summary: Implementation of Visual Studio Team Services <https://www.visualstudio.com/team-services/>
    API calls.  It enables the extraction of information about repositories, build and
    release definitions and individual releases.  It also helps create repositories
    and work items within a project without logging into Visual Studio.  There is the
    ability to use any API service with a shell for any non-predefined call.
  license_family: GPL2
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: vstsr
# Type: Package
# Title: Access to Visual Studio Team Services API via R
# Version: 1.0.0
# Authors@R: person('Ashley', 'Baldry', email = 'arbaldry91@gmail.com', role = c('aut', 'cre'))
# Description: Implementation of Visual Studio Team Services <https://www.visualstudio.com/team-services/> API calls.  It enables the extraction of information about repositories, build and release definitions and individual releases.  It also helps create repositories and work items within a project without logging into Visual Studio.  There is the ability to use any API service with a shell for any non-predefined call.
# License: GPL-2
# URL: https://github.com/ashbaldry/vstsr, https://docs.microsoft.com/en-us/rest/api/vsts
# BugReports: https://github.com/ashbaldry/vstsr/issues
# Imports: R6, httr, RCurl, magrittr, jsonlite, xml2
# Encoding: UTF-8
# LazyData: true
# RoxygenNote: 6.0.1
# Suggests: testthat
# NeedsCompilation: no
# Packaged: 2018-03-13 17:20:33 UTC; BaldryA
# Author: Ashley Baldry [aut, cre]
# Maintainer: Ashley Baldry <arbaldry91@gmail.com>
# Repository: CRAN
# Date/Publication: 2018-03-14 10:20:42 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
