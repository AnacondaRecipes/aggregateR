{% set version = '2.0' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-spcr
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/spcr_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/spcr/spcr_{{ version }}.tar.gz
  sha256: 890e43fd68bf519c57c9fb9ff6c5b3d290862443889e6bb8f6fddfbc92da14d8

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{posix}}filesystem        # [win]
    - {{posix}}make
    - {{posix}}sed               # [win]
    - {{posix}}coreutils         # [win]
    - {{posix}}zip               # [win]

  host:
    - r-base

  run:
    - r-base
    - {{native}}gcc-libs         # [win]

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('spcr')"           # [not win]
    - "\"%R%\" -e \"library('spcr')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://sites.google.com/site/shuichikawanoen/
  license: GPL-2
  summary: The sparse principal component regression is computed. The regularization parameters
    are optimized by cross-validation.
  license_family: GPL2
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: spcr
# Type: Package
# Title: Sparse Principal Component Regression
# Version: 2.0
# Date: 2016-10-03
# Author: Shuichi Kawano
# Maintainer: Shuichi Kawano <skawano@uec.ac.jp>
# Description: The sparse principal component regression is computed. The regularization parameters are optimized by cross-validation.
# License: GPL (>= 2)
# URL: https://sites.google.com/site/shuichikawanoen/
# Repository: CRAN
# NeedsCompilation: yes
# Packaged: 2016-10-03 08:51:01 UTC; kawano
# Date/Publication: 2016-10-03 13:30:02

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
