{% set version = '1.0.14' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-rpf
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/rpf_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/rpf/rpf_{{ version }}.tar.gz
  sha256: e4bb090a810ec4e70a23547f95e1e07ce0229e38fbbbbe22abfad98e9b33f796

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: testthat, roxygen2, ggplot2, reshape2, gridExtra, numDeriv, knitr, mirt, markdown
requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}make
    - {{ posix }}sed               # [win]
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-rcpp >=1.0.2
    - r-rcppeigen
    - r-lifecycle
    - r-mvtnorm

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-rcpp >=1.0.2
    - r-rcppeigen
    - r-lifecycle
    - r-mvtnorm

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('rpf')"           # [not win]
    - "\"%R%\" -e \"library('rpf')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/jpritikin/rpf
  license: GPL-3
  summary: Factor out logic and math common to Item Factor Analysis fitting, diagnostics, and
    analysis. It is envisioned as core support code suitable for more specialized IRT
    packages to build upon. Complete access to optimized C functions are made available
    with R_RegisterCCallable(). This software is described in Pritikin & Falk (2020)
    <doi:10.1177/0146621620929431>.
  license_family: GPL3
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-3'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Type: Package
# Package: rpf
# Title: Response Probability Functions
# Version: 1.0.14
# Date: 2023-08-21
# Authors@R: c(person(given = "Joshua", family = "Pritikin", role = c("cre", "aut"), email = "jpritikin@pobox.com"), person(given = "Jonathan", family = "Weeks", role = "ctb", email = "weeksjp@gmail.com"), person(given = "Li", family = "Cai", role = "ctb"), person(given = "Carrie", family = "Houts", role = "ctb"), person(given = "Phil", family = "Chalmers", role = "ctb", email = "rphilip.chalmers@gmail.com"), person(given = c("Michael", "D."), family = "Hunter", role = "ctb"), person(given = c("Carl", "F."), family = "Falk", role = "ctb", email = "falkcarl@msu.edu"))
# Maintainer: Joshua Pritikin <jpritikin@pobox.com>
# Description: Factor out logic and math common to Item Factor Analysis fitting, diagnostics, and analysis. It is envisioned as core support code suitable for more specialized IRT packages to build upon. Complete access to optimized C functions are made available with R_RegisterCCallable(). This software is described in Pritikin & Falk (2020) <doi:10.1177/0146621620929431>.
# License: GPL (>= 3)
# URL: https://github.com/jpritikin/rpf
# Depends: methods, parallel, R (>= 2.14.0)
# Imports: Rcpp (>= 1.0.2), mvtnorm, lifecycle
# Suggests: testthat, roxygen2, ggplot2, reshape2, gridExtra, numDeriv, knitr, mirt, markdown
# LinkingTo: Rcpp, RcppEigen
# VignetteBuilder: knitr
# RdMacros: lifecycle
# Encoding: UTF-8
# LazyData: yes
# LazyDataCompression: xz
# RoxygenNote: 7.2.3
# SystemRequirements: GNU make
# Collate: 'init.R' 'classes.R' 'fit.R' 'drm.R' 'nrm.R' 'mcm.R' 'grm.R' 'LSAT.R' 'sample.R' 'dataframe.R' 'diagnose.R' 'science.R' 'kct.R' 'openmx.R' 'flexmirt.R' 'util.R' 'lmp.R' 'grmp.R' 'gpcmp.R' 'RcppExports.R'
# NeedsCompilation: yes
# Packaged: 2023-08-21 18:49:00 UTC; joshua
# Author: Joshua Pritikin [cre, aut], Jonathan Weeks [ctb], Li Cai [ctb], Carrie Houts [ctb], Phil Chalmers [ctb], Michael D. Hunter [ctb], Carl F. Falk [ctb]
# Repository: CRAN
# Date/Publication: 2023-08-21 23:20:02 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
