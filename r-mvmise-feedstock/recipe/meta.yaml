{% set version = '1.0' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-mvmise
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/mvMISE_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/mvMISE/mvMISE_{{ version }}.tar.gz
  sha256: ac78c6c200128007e9c1678c2894187fe0edbb5ae822483ddfac503dc72bcc52

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-mass
    - r-lme4

  run:
    - r-base
    - r-mass
    - r-lme4

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('mvMISE')"           # [not win]
    - "\"%R%\" -e \"library('mvMISE')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/randel/mvMISE
  license: GPL-3
  summary: 'Offers a general framework of multivariate mixed-effects models for the joint analysis
    of multiple correlated outcomes with clustered data structures and potential missingness
    proposed by Wang et al. (2018) <doi:10.1093/biostatistics/kxy022>. The missingness
    of outcome values may depend on the values themselves (missing not at random and
    non-ignorable), or may depend on only the covariates (missing at random and ignorable),
    or both. This package provides functions for two models: 1) mvMISE_b() allows correlated
    outcome-specific random intercepts with a factor-analytic structure, and 2) mvMISE_e()
    allows the correlated outcome-specific error terms with a graphical lasso penalty
    on the error precision matrix. Both functions are motivated by the multivariate
    data analysis on data with clustered structures from labelling-based quantitative
    proteomic studies. These models and functions can also be applied to univariate
    and multivariate analyses of clustered data with balanced or unbalanced design and
    no missingness.'
  license_family: GPL3
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-3'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: mvMISE
# Title: A General Framework of Multivariate Mixed-Effects Selection Models
# Version: 1.0
# Date: 2018-06-04
# Author: Jiebiao Wang and Lin S. Chen
# Maintainer: Jiebiao Wang <randel.wang@gmail.com>
# Description: Offers a general framework of multivariate mixed-effects models for the joint analysis of multiple correlated outcomes with clustered data structures and potential missingness proposed by Wang et al. (2018) <doi:10.1093/biostatistics/kxy022>. The missingness of outcome values may depend on the values themselves (missing not at random and non-ignorable), or may depend on only the covariates (missing at random and ignorable), or both. This package provides functions for two models: 1) mvMISE_b() allows correlated outcome-specific random intercepts with a factor-analytic structure, and 2) mvMISE_e() allows the correlated outcome-specific error terms with a graphical lasso penalty on the error precision matrix. Both functions are motivated by the multivariate data analysis on data with clustered structures from labelling-based quantitative proteomic studies. These models and functions can also be applied to univariate and multivariate analyses of clustered data with balanced or unbalanced design and no missingness.
# License: GPL
# Depends: lme4, MASS
# URL: https://github.com/randel/mvMISE
# BugReports: https://github.com/randel/mvMISE/issues
# RoxygenNote: 6.0.1
# NeedsCompilation: no
# Packaged: 2018-06-04 17:54:46 UTC; rande
# Repository: CRAN
# Date/Publication: 2018-06-10 16:47:54 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
