{% set version = '0.2.1' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-nvennr
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/nVennR_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/nVennR/nVennR_{{ version }}.tar.gz
  sha256: 02c2921a8ca23bfcda52f4b43481df7a4fbf89202a8efe3d8ec7384551e31387

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: knitr, rmarkdown, rsvg, grImport2
requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{posix}}filesystem        # [win]
    - {{posix}}make
    - {{posix}}sed               # [win]
    - {{posix}}coreutils         # [win]
    - {{posix}}zip               # [win]

  host:
    - r-base
    - r-rcpp

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-rcpp

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('nVennR')"           # [not win]
    - "\"%R%\" -e \"library('nVennR')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=nVennR
  license: MIT
  summary: Provides an interface for the nVenn algorithm (Perez-Silva et al. 2018) <DOI:10.1093/bioinformatics/bty109>.
    This algorithm works for any number of sets,  and usually yields pleasing and informative
    Venn diagrams with proportionality information.  However, representing more than
    six sets takes a long time and is hard to interpret, unless many of the  regions
    are empty. If you cannot make sense of the result, you may want to consider 'UpSetR'
    <https://cran.r-project.org/package=UpSetR/README.html>.
  license_family: MIT
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/MIT'
    - LICENSE

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: nVennR
# Type: Package
# Title: Create n-Dimensional, Quasi-Proportional Venn Diagrams
# Version: 0.2.1
# Authors@R: person("Victor", "Quesada", email = "quesadavictor@uniovi.es", role=c("aut", "cre", "cph"))
# Author: Victor Quesada [aut, cre, cph]
# Maintainer: Victor Quesada <quesadavictor@uniovi.es>
# Description: Provides an interface for the nVenn algorithm (Perez-Silva et al. 2018) <DOI:10.1093/bioinformatics/bty109>. This algorithm works for any number of sets,  and usually yields pleasing and informative Venn diagrams with proportionality information.  However, representing more than six sets takes a long time and is hard to interpret, unless many of the  regions are empty. If you cannot make sense of the result, you may want to consider 'UpSetR' <https://cran.r-project.org/package=UpSetR/README.html>.
# License: MIT + file LICENSE
# Encoding: UTF-8
# LazyData: true
# RoxygenNote: 6.0.1
# Depends: R (>= 2.10)
# LinkingTo: Rcpp
# Imports: Rcpp
# Suggests: knitr, rmarkdown, rsvg, grImport2
# VignetteBuilder: knitr
# NeedsCompilation: yes
# Packaged: 2018-05-11 12:10:25 UTC; vqf
# Repository: CRAN
# Date/Publication: 2018-05-11 12:34:33 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
