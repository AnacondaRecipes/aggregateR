{% set version = '1.3.6' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-discretefdr
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/DiscreteFDR_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/DiscreteFDR/DiscreteFDR_{{ version }}.tar.gz
  sha256: efb1b2948c8fc1a921a8cdf253854452e8c55382d60dca9add5df2f13abce91b

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: R.rsp, knitr, rmarkdown, discreteMTP
requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}make
    - {{ posix }}sed               # [win]
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-rcpp >=1.0.1

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-rcpp >=1.0.1

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('DiscreteFDR')"           # [not win]
    - "\"%R%\" -e \"library('DiscreteFDR')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/DISOhda/DiscreteFDR
  license: GPL-3
  summary: "Multiple testing procedures described in the paper D\xF6hler, Durand and Roquain
    (2018) \"New FDR bounds for discrete and heterogeneous tests\" <doi:10.1214/18-EJS1441>.
    The main procedures of the paper (HSU and HSD), their adaptive counterparts (AHSU
    and AHSD), and the HBR variant are available and are coded to take as input a set
    of observed p-values and their discrete support under the null. A function to compute
    such p-values and supports for Fisher's exact tests is also provided, along with
    a wrapper allowing to apply discrete procedures directly from contingency tables."
  license_family: GPL3
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-3'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: DiscreteFDR
# Type: Package
# Title: Multiple Testing Procedures with Adaptation for Discrete Tests
# Version: 1.3.6
# Date: 2021-09-01
# Authors@R: c(person("Sebastian", "Dohler", role = "ctb"), person("Guillermo", "Durand", role = c("aut", "ctb")), person("Florian", "Junge", role = c("aut", "cre"), email = "florian.junge@h-da.de"), person("Etienne", "Roquain", role = "ctb"))
# Description: Multiple testing procedures described in the paper Dohler, Durand and Roquain (2018) "New FDR bounds for discrete and heterogeneous tests" <doi:10.1214/18-EJS1441>. The main procedures of the paper (HSU and HSD), their adaptive counterparts (AHSU and AHSD), and the HBR variant are available and are coded to take as input a set of observed p-values and their discrete support under the null. A function to compute such p-values and supports for Fisher's exact tests is also provided, along with a wrapper allowing to apply discrete procedures directly from contingency tables.
# License: GPL-3
# Encoding: UTF-8
# Depends: R (>= 3.00)
# LazyData: true
# RoxygenNote: 7.1.1
# Suggests: R.rsp, knitr, rmarkdown, discreteMTP
# VignetteBuilder: R.rsp, knitr
# Imports: Rcpp (>= 1.0.1), methods
# LinkingTo: Rcpp
# URL: https://github.com/DISOhda/DiscreteFDR
# BugReports: https://github.com/DISOhda/DiscreteFDR/issues
# NeedsCompilation: yes
# Packaged: 2021-09-03 07:58:20 UTC; Florian Junge
# Author: Sebastian Dohler [ctb], Guillermo Durand [aut, ctb], Florian Junge [aut, cre], Etienne Roquain [ctb]
# Maintainer: Florian Junge <florian.junge@h-da.de>
# Repository: CRAN
# Date/Publication: 2021-09-03 10:30:06 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
