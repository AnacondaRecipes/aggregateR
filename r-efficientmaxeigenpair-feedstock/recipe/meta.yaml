{% set version = '0.1.4' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-efficientmaxeigenpair
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/EfficientMaxEigenpair_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/EfficientMaxEigenpair/EfficientMaxEigenpair_{{ version }}.tar.gz
  sha256: 1c90fb78ee27ec20eddbe249bfb2960c86c4a7937feba65e71e489b9854a11e8

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: knitr, rmarkdown
requirements:
  build:
    - {{ posix }}zip               # [win]

  host:
    - r-base

  run:
    - r-base

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('EfficientMaxEigenpair')"           # [not win]
    - "\"%R%\" -e \"library('EfficientMaxEigenpair')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: http://github.com/mxjki/EfficientMaxEigenpair
  license: MIT
  summary: 'An implementation for using efficient initials to compute the maximal eigenpair in
    R. It provides three algorithms to find the efficient initials under two cases:
    the tridiagonal matrix case and the general matrix case. Besides, it also provides
    two algorithms for the next to the maximal eigenpair under these two cases.'
  license_family: MIT
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/MIT'
    - LICENSE

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: EfficientMaxEigenpair
# Type: Package
# Title: Efficient Initials for Computing the Maximal Eigenpair
# Version: 0.1.4
# Date: 2017-10-17
# Author: Mu-Fa Chen <mfchen@bnu.edu.cn>
# Maintainer: Xiao-Jun Mao <maoxj.ki@gmail.com>
# Description: An implementation for using efficient initials to compute the maximal eigenpair in R. It provides three algorithms to find the efficient initials under two cases: the tridiagonal matrix case and the general matrix case. Besides, it also provides two algorithms for the next to the maximal eigenpair under these two cases.
# License: MIT + file LICENSE
# URL: http://github.com/mxjki/EfficientMaxEigenpair
# BugReports: http://github.com/mxjki/EfficientMaxEigenpair/issues
# Depends: R (>= 3.3.2), stats
# Encoding: UTF-8
# RoxygenNote: 6.0.1
# Suggests: knitr, rmarkdown
# VignetteBuilder: knitr
# NeedsCompilation: no
# Packaged: 2017-10-23 11:42:20 UTC; xiaojunmao
# Repository: CRAN
# Date/Publication: 2017-10-23 12:00:48 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
