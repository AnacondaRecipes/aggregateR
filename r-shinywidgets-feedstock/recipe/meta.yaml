{% set version = '0.7.0' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-shinywidgets
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/shinyWidgets_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/shinyWidgets/shinyWidgets_{{ version }}.tar.gz
  sha256: d4cb8ab7a96861a819128f9deeb293e8178f90fcd51f0e84467161ca7cd36711

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: shinydashboard, testthat, covr, shinydashboardPlus (>= 2.0.0), bs4Dash, argonR, argonDash, tablerDash, ggplot2, DT, scales
requirements:
  build:
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-bslib
    - r-htmltools >=0.5.1
    - r-jsonlite
    - r-rlang
    - r-sass
    - r-shiny >=1.6.0

  run:
    - r-base
    - r-bslib
    - r-htmltools >=0.5.1
    - r-jsonlite
    - r-rlang
    - r-sass
    - r-shiny >=1.6.0

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('shinyWidgets')"           # [not win]
    - "\"%R%\" -e \"library('shinyWidgets')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/dreamRs/shinyWidgets, https://dreamrs.github.io/shinyWidgets/
  license: GPL-3
  summary: Collection of custom input controls and user interface components for 'Shiny' applications.
    Give your applications a unique and colorful style !
  license_family: GPL3
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-3'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: shinyWidgets
# Title: Custom Inputs Widgets for Shiny
# Version: 0.7.0
# Authors@R: c( person("Victor", "Perrier", email = "victor.perrier@dreamrs.fr", role = c("aut", "cre", "cph")), person("Fanny", "Meyer", role = "aut"), person("David", "Granjon", role = "aut"), person("Ian", "Fellows", role = "ctb", comment = "Methods for mutating vertical tabs & updateMultiInput"), person("Wil", "Davis", role = "ctb", comment = "numericRangeInput function"), person("Spencer", "Matthews", role = "ctb", comment = "autoNumeric methods"), person(family = "JavaScript and CSS libraries authors", role = c("ctb", "cph"), comment = "All authors are listed in LICENSE.md") )
# Description: Collection of custom input controls and user interface components for 'Shiny' applications. Give your applications a unique and colorful style !
# URL: https://github.com/dreamRs/shinyWidgets, https://dreamrs.github.io/shinyWidgets/
# BugReports: https://github.com/dreamRs/shinyWidgets/issues
# License: GPL-3
# Encoding: UTF-8
# LazyData: true
# RoxygenNote: 7.1.2
# Depends: R (>= 3.1.0)
# Imports: bslib, sass, shiny (>= 1.6.0), htmltools (>= 0.5.1), jsonlite, grDevices, rlang
# Suggests: shinydashboard, testthat, covr, shinydashboardPlus (>= 2.0.0), bs4Dash, argonR, argonDash, tablerDash, ggplot2, DT, scales
# NeedsCompilation: no
# Packaged: 2022-05-11 09:12:25 UTC; victorp
# Author: Victor Perrier [aut, cre, cph], Fanny Meyer [aut], David Granjon [aut], Ian Fellows [ctb] (Methods for mutating vertical tabs & updateMultiInput), Wil Davis [ctb] (numericRangeInput function), Spencer Matthews [ctb] (autoNumeric methods), JavaScript and CSS libraries authors [ctb, cph] (All authors are listed in LICENSE.md)
# Maintainer: Victor Perrier <victor.perrier@dreamrs.fr>
# Repository: CRAN
# Date/Publication: 2022-05-11 09:40:02 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
