{% set version = '0.3.7' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-nanotime
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/nanotime_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/nanotime/nanotime_{{ version }}.tar.gz
  sha256: a771782653aef62a071682907fd7bd611f7f98fc80beda227d619aae166ccb15

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: tinytest, data.table, xts
requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}make
    - {{ posix }}sed               # [win]
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-rcpp
    - r-rcppcctz >=0.2.9
    - r-rcppdate
    - r-bit64
    - r-zoo

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-rcpp
    - r-rcppcctz >=0.2.9
    - r-rcppdate
    - r-bit64
    - r-zoo

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('nanotime')"           # [not win]
    - "\"%R%\" -e \"library('nanotime')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/eddelbuettel/nanotime, https://eddelbuettel.github.io/nanotime/,
    https://dirk.eddelbuettel.com/code/nanotime.html
  license: GPL-2
  summary: Full 64-bit resolution date and time functionality with nanosecond granularity is
    provided, with easy transition to and from the standard 'POSIXct' type. Three additional
    classes offer interval, period and duration functionality for nanosecond-resolution
    timestamps.
  license_family: GPL2
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

# The original CRAN metadata for this package was:

# Package: nanotime
# Type: Package
# Title: Nanosecond-Resolution Time Support for R
# Version: 0.3.7
# Date: 2022-10-23
# Author: Dirk Eddelbuettel and Leonardo Silvestri
# Maintainer: Dirk Eddelbuettel <edd@debian.org>
# Description: Full 64-bit resolution date and time functionality with nanosecond granularity is provided, with easy transition to and from the standard 'POSIXct' type. Three additional classes offer interval, period and duration functionality for nanosecond-resolution timestamps.
# Imports: methods, bit64, RcppCCTZ (>= 0.2.9), zoo
# Suggests: tinytest, data.table, xts
# LinkingTo: Rcpp, RcppCCTZ, RcppDate
# License: GPL (>= 2)
# URL: https://github.com/eddelbuettel/nanotime, https://eddelbuettel.github.io/nanotime/, https://dirk.eddelbuettel.com/code/nanotime.html
# BugReports: https://github.com/eddelbuettel/nanotime/issues
# RoxygenNote: 7.1.2
# Collate: 'nanotime.R' 'nanoival.R' 'nanoduration.R' 'nanoperiod.R' 'RcppExports.R'
# Encoding: UTF-8
# NeedsCompilation: yes
# Packaged: 2022-10-24 00:26:28 UTC; edd
# Repository: CRAN
# Date/Publication: 2022-10-24 07:02:51 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
