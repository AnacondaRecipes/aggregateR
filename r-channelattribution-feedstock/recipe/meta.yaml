{% set version = '2.0.7' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-channelattribution
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/ChannelAttribution_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/ChannelAttribution/ChannelAttribution_{{ version }}.tar.gz
  sha256: 47e78e830d5a8ae47f0e133eaa5c36a0dda235bdf8bdbf8a9b6e829468d1672a

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}make
    - {{ posix }}sed               # [win]
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-rcpp
    - r-rcpparmadillo

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-rcpp
    - r-rcpparmadillo

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('ChannelAttribution')"           # [not win]
    - "\"%R%\" -e \"library('ChannelAttribution')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://channelattribution.io
  license: GPL-3
  summary: Advertisers use a variety of online marketing channels to reach consumers and they
    want to know the degree each channel contributes to their marketing success. This
    is called online multi-channel attribution problem. This package contains a probabilistic
    algorithm for the attribution problem. The model uses a k-order Markov representation
    to identify structural correlations in the customer journey data. The package also
    contains three heuristic algorithms (first-touch, last-touch and linear-touch approach)
    for the same problem. The algorithms are implemented in C++.
  license_family: GPL3
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-3'
    - LICENSE

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: ChannelAttribution
# Type: Package
# Title: Markov Model for Online Multi-Channel Attribution
# Version: 2.0.7
# Date: 2023-05-17
# Authors@R: c( person("Davide", "Altomare", email = "info@channelattribution.io", role = c("cre", "aut")), person("David", "Loris", email = "david@channelattribution.io", role = "aut") )
# Maintainer: Davide Altomare <info@channelattribution.io>
# Description: Advertisers use a variety of online marketing channels to reach consumers and they want to know the degree each channel contributes to their marketing success. This is called online multi-channel attribution problem. This package contains a probabilistic algorithm for the attribution problem. The model uses a k-order Markov representation to identify structural correlations in the customer journey data. The package also contains three heuristic algorithms (first-touch, last-touch and linear-touch approach) for the same problem. The algorithms are implemented in C++.
# License: GPL-3 | file LICENSE
# URL: https://channelattribution.io
# LinkingTo: Rcpp, RcppArmadillo
# Imports: Rcpp
# NeedsCompilation: yes
# Packaged: 2023-05-17 18:54:06 UTC; davide
# Author: Davide Altomare [cre, aut], David Loris [aut]
# Repository: CRAN
# Date/Publication: 2023-05-17 19:20:02 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
