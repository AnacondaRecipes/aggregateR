From 8f3da914121cd11c891a42625dc346fdaf66a1b7 Mon Sep 17 00:00:00 2001
From: Ray Donnelly <mingw.android@gmail.com>
Date: Mon, 31 Oct 2016 18:25:35 -0400
Subject: [PATCH 31/47] Conda: LD_LIBRARY_PATH considered harmful

(and DYLD_FALLBACK_LIBRARY_PATH useless due to SIP)
---
 src/cpp/core/r_util/REnvironmentPosix.cpp |  2 ++
 src/cpp/session/CMakeLists.txt            | 15 +++++++++++++++
 2 files changed, 17 insertions(+)

diff --git a/src/cpp/core/r_util/REnvironmentPosix.cpp b/src/cpp/core/r_util/REnvironmentPosix.cpp
index bd1c4070cc..9850d0cd04 100644
--- a/src/cpp/core/r_util/REnvironmentPosix.cpp
+++ b/src/cpp/core/r_util/REnvironmentPosix.cpp
@@ -663,6 +663,7 @@ bool detectREnvironment(const FilePath& whichRScript,
                                    resolveRPath(rHomePath,
                                                 scriptVars["R_DOC_DIR"])));
 
+#if !defined(CONDA_BUILD) // This breaks everything on Linux (LD_LIBRARY_PATH ends up without /usr/lib64 etc).
    // determine library path (existing + r lib dir + r extra lib dirs)
    std::string libraryPath = rLibraryPath(rHomePath,
                                           rLibPath,
@@ -670,6 +671,7 @@ bool detectREnvironment(const FilePath& whichRScript,
                                           ldLibraryPath);
    
    pVars->push_back(std::make_pair(kLibraryPathEnvVariable, libraryPath));
+#endif
 
    // set R_ARCH on the mac if we are running against CRAN R
 #ifdef __APPLE__
diff --git a/src/cpp/session/CMakeLists.txt b/src/cpp/session/CMakeLists.txt
index 4cebb3c4f3..0ce55fb9e5 100644
--- a/src/cpp/session/CMakeLists.txt
+++ b/src/cpp/session/CMakeLists.txt
@@ -361,6 +361,21 @@ if(WIN32)
    endif()
 endif()
 
+if(DEFINED ENV{CONDA_BUILD})
+   # use, i.e. don't skip the full RPATH for the build tree
+   set(CMAKE_SKIP_BUILD_RPATH FALSE)
+
+   # when building, don't use the install RPATH already
+   # (but later on when installing)
+   set(CMAKE_BUILD_WITH_INSTALL_RPATH FALSE)
+
+   set(CMAKE_INSTALL_RPATH "${CMAKE_INSTALL_PREFIX}/lib")
+
+   # add the automatically determined parts of the RPATH
+   # which point to directories outside the build tree to the install RPATH
+   set(CMAKE_INSTALL_RPATH_USE_LINK_PATH TRUE)
+endif()
+
 # define executable
 add_executable(rsession ${SESSION_SOURCE_FILES} ${SESSION_HEADER_FILES})
 
-- 
2.17.0.windows.1

