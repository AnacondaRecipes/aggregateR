{% set version = '0.2-4' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-physicalactivity
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/PhysicalActivity_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/PhysicalActivity/PhysicalActivity_{{ version }}.tar.gz
  sha256: 8030f23c0ff6b9d42e049614690fbb2b329d3463a378f09d12dbf4b167be472c

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: RSQLite, DBI, data.table, e1071, keras, randomForest, reticulate, rms
requirements:
  build:
    - {{ posix }}zip               # [win]

  host:
    - r-base

  run:
    - r-base

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('PhysicalActivity')"           # [not win]
    - "\"%R%\" -e \"library('PhysicalActivity')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=PhysicalActivity
  license: GPL-3
  summary: It provides a function "wearingMarking" for classification of monitor wear and nonwear
    time intervals in accelerometer data collected to assess physical activity. The
    package also contains functions for making plot for accelerometer data and obtaining
    the summary of various information including daily monitor wear time and the mean
    monitor wear time during valid days. "deliveryPred" and "markDelivery" can classify
    days for ActiGraph delivery by mail; "deliveryPreprocess" can process accelerometry
    data for analysis by zeropadding incomplete days and removing low activity days;
    "markPAI" can categorize physical activity intensity level based on user-defined
    cut-points of accelerometer counts. It also supports importing ActiGraph AGD files
    with "readActigraph" and "queryActigraph" functions.
  license_family: GPL3
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-3'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: PhysicalActivity
# Version: 0.2-4
# Date: 2020-12-29
# Title: Process Accelerometer Data for Physical Activity Measurement
# Authors@R: c(person(given = "Leena", family = "Choi", role = c("aut", "cre"), email = "leena.choi@Vanderbilt.Edu", comment = c(ORCID = "0000-0002-2544-7090")), person(given = "Cole", family = "Beck", role = "aut", email = "cole.beck@vumc.org", comment = c(ORCID = "0000-0002-6849-6255")), person(given = "Zhouwen", family = "Liu", role = "aut"), person(given = "Ryan", family = "Moore", role = "aut", email = "ryan.moore@vumc.org"), person(given = "Charles E.", family = "Matthews", role = "aut"), person(given = "Maciej S.", family = "Buchowski", role = "aut"))
# Description: It provides a function "wearingMarking" for classification of monitor wear and nonwear time intervals in accelerometer data collected to assess physical activity. The package also contains functions for making plot for accelerometer data and obtaining the summary of various information including daily monitor wear time and the mean monitor wear time during valid days. "deliveryPred" and "markDelivery" can classify days for ActiGraph delivery by mail; "deliveryPreprocess" can process accelerometry data for analysis by zeropadding incomplete days and removing low activity days; "markPAI" can categorize physical activity intensity level based on user-defined cut-points of accelerometer counts. It also supports importing ActiGraph AGD files with "readActigraph" and "queryActigraph" functions.
# License: GPL (>= 3)
# Depends: R (>= 2.10)
# Suggests: RSQLite, DBI, data.table, e1071, keras, randomForest, reticulate, rms
# RoxygenNote: 7.1.1
# NeedsCompilation: no
# Packaged: 2021-01-22 17:38:24 UTC; leenachoi
# Author: Leena Choi [aut, cre] (<https://orcid.org/0000-0002-2544-7090>), Cole Beck [aut] (<https://orcid.org/0000-0002-6849-6255>), Zhouwen Liu [aut], Ryan Moore [aut], Charles E. Matthews [aut], Maciej S. Buchowski [aut]
# Maintainer: Leena Choi <leena.choi@Vanderbilt.Edu>
# Repository: CRAN
# Date/Publication: 2021-01-22 22:30:02 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
