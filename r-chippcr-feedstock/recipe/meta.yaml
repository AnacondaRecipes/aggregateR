{% set version = '1.0-2' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-chippcr
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/chipPCR_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/chipPCR/chipPCR_{{ version }}.tar.gz
  sha256: 3d6071a894958bd6447043fee502756d791191595ef4dcefc2fbc6b52db36060

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: drc, knitr, markdown, qpcR, RDML, rmarkdown, spelling, testthat, tinytex, xtable
requirements:
  build:
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-mass
    - r-rfit
    - r-lmtest
    - r-outliers
    - r-ptw
    - r-quantreg
    - r-robustbase
    - r-shiny
    - r-signal

  run:
    - r-base
    - r-mass
    - r-rfit
    - r-lmtest
    - r-outliers
    - r-ptw
    - r-quantreg
    - r-robustbase
    - r-shiny
    - r-signal

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('chipPCR')"           # [not win]
    - "\"%R%\" -e \"library('chipPCR')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/PCRuniversum/chipPCR
  license: GPL-3
  summary: 'A collection of functions to pre-process amplification curve data from polymerase
    chain reaction (PCR) or isothermal amplification reactions. Contains functions to
    normalize and baseline amplification curves, to detect both the start and end of
    an amplification reaction, several smoothers (e.g., LOWESS, moving average, cubic
    splines, Savitzky-Golay), a function to detect false positive amplification reactions
    and a function to determine the amplification efficiency. Quantification point (Cq)
    methods include the first (FDM) and second approximate derivative maximum (SDM)
    methods (calculated by a 5-point-stencil) and the cycle threshold method. Data sets
    of experimental nucleic acid amplification systems (''VideoScan HCU'', capillary
    convective PCR (ccPCR)) and commercial systems are included. Amplification curves
    were generated by helicase dependent amplification (HDA), ccPCR or PCR. As detection
    system intercalating dyes (EvaGreen, SYBR Green) and hydrolysis probes (TaqMan)
    were used. For more information see: Roediger et al. (2015) <doi:10.1093/bioinformatics/btv205>.'
  license_family: GPL3
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-3'

# The original CRAN metadata for this package was:

# Package: chipPCR
# Type: Package
# Title: Toolkit of Helper Functions to Pre-Process Amplification Data
# Version: 1.0-2
# LazyData: true
# Date: 2021-03-02
# Authors@R: c( person("Stefan", "Roediger", email = "stefan.roediger@b-tu.de", comment = c(ORCID = "0000-0002-1441-6512"), role = c("cre", "aut")), person("Michal", "Burdukiewicz", email = "michalburdukiewicz@gmail.com", comment = c(ORCID = "0000-0001-8926-582X"), role = "aut"), person("Konstantin A.", "Blagodatskikh", email = "k.blag@yandex.ru", role = "ctb"), person("Andrej-Nikolai", "Spiess", email = "a.spiess@uke.de", role = c("ctb"), comment = c(ORCID = "0000-0002-9630-4724")))
# Description: A collection of functions to pre-process amplification curve data from polymerase chain reaction (PCR) or isothermal amplification reactions. Contains functions to normalize and baseline amplification curves, to detect both the start and end of an amplification reaction, several smoothers (e.g., LOWESS, moving average, cubic splines, Savitzky-Golay), a function to detect false positive amplification reactions and a function to determine the amplification efficiency. Quantification point (Cq) methods include the first (FDM) and second approximate derivative maximum (SDM) methods (calculated by a 5-point-stencil) and the cycle threshold method. Data sets of experimental nucleic acid amplification systems ('VideoScan HCU', capillary convective PCR (ccPCR)) and commercial systems are included. Amplification curves were generated by helicase dependent amplification (HDA), ccPCR or PCR. As detection system intercalating dyes (EvaGreen, SYBR Green) and hydrolysis probes (TaqMan) were used. For more information see: Roediger et al. (2015) <doi:10.1093/bioinformatics/btv205>.
# License: GPL-3
# URL: https://github.com/PCRuniversum/chipPCR
# BugReports: https://github.com/PCRuniversum/chipPCR/issues
# Depends: R (>= 3.0.0), methods
# Suggests: drc, knitr, markdown, qpcR, RDML, rmarkdown, spelling, testthat, tinytex, xtable
# VignetteBuilder: knitr, rmarkdown
# Imports: lmtest, MASS, outliers, ptw, quantreg, Rfit, robustbase, shiny, signal
# NeedsCompilation: no
# Repository: CRAN
# Language: en-US
# RoxygenNote: 7.1.1
# Packaged: 2021-03-04 14:36:42 UTC; tux
# Author: Stefan Roediger [cre, aut] (<https://orcid.org/0000-0002-1441-6512>), Michal Burdukiewicz [aut] (<https://orcid.org/0000-0001-8926-582X>), Konstantin A. Blagodatskikh [ctb], Andrej-Nikolai Spiess [ctb] (<https://orcid.org/0000-0002-9630-4724>)
# Maintainer: Stefan Roediger <stefan.roediger@b-tu.de>
# Date/Publication: 2021-03-05 07:50:03 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
