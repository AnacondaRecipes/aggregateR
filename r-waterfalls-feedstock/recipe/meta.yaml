{% set version = '1.0.0' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-waterfalls
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/waterfalls_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/waterfalls/waterfalls_{{ version }}.tar.gz
  sha256: 0dc8b94edc37239c0991cc5f435322f1ccf85df9f0b321f9f003ba0023e541f2

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-ggplot2 >=2.0.0

  run:
    - r-base
    - r-ggplot2 >=2.0.0

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('waterfalls')"           # [not win]
    - "\"%R%\" -e \"library('waterfalls')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/hughparsonage/waterfalls
  license: MIT
  summary: A not uncommon task for quants is to create 'waterfall charts'. There seems to be
    no simple way to do this in 'ggplot2' currently. This package contains a single
    function (waterfall) that simply draws a waterfall chart in a 'ggplot2' object.
    Some flexibility is provided, though often the object created will need to be modified
    through a theme.
  license_family: MIT
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/MIT'
    - LICENSE

# The original CRAN metadata for this package was:

# Package: waterfalls
# Type: Package
# Title: Create Waterfall Charts using 'ggplot2' Simply
# Version: 1.0.0
# Author: Hugh Parsonage
# Maintainer: Hugh Parsonage <hugh.parsonage+waterfall@gmail.com>
# Description: A not uncommon task for quants is to create 'waterfall charts'. There seems to be no simple way to do this in 'ggplot2' currently. This package contains a single function (waterfall) that simply draws a waterfall chart in a 'ggplot2' object. Some flexibility is provided, though often the object created will need to be modified through a theme.
# License: MIT + file LICENSE
# URL: https://github.com/hughparsonage/waterfalls
# Encoding: UTF-8
# Imports: ggplot2 (>= 2.0.0), grDevices
# RoxygenNote: 7.2.0
# NeedsCompilation: no
# Packaged: 2022-11-20 12:14:06 UTC; hughp
# Repository: CRAN
# Date/Publication: 2022-11-20 12:20:02 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
