{% set version = '3.0-6' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-spatstat
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/spatstat_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/spatstat/spatstat_{{ version }}.tar.gz
  sha256: e7143d919c4c81a9b4d3e041f54907722d9d7b8cc5e0d91f3d4297155451976e

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests:
requirements:
  build:
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-spatstat.data >=3.0_1
    - r-spatstat.explore >=3.2_1
    - r-spatstat.geom >=3.2_1
    - r-spatstat.linnet >=3.1_1
    - r-spatstat.model >=3.2_4
    - r-spatstat.random >=3.1_5
    - r-spatstat.utils >=3.0_3

  run:
    - r-base
    - r-spatstat.data >=3.0_1
    - r-spatstat.explore >=3.2_1
    - r-spatstat.geom >=3.2_1
    - r-spatstat.linnet >=3.1_1
    - r-spatstat.model >=3.2_4
    - r-spatstat.random >=3.1_5
    - r-spatstat.utils >=3.0_3

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('spatstat')"           # [not win]
    - "\"%R%\" -e \"library('spatstat')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: http://spatstat.org/
  license: GPL-2
  summary: Comprehensive open-source toolbox for analysing Spatial Point Patterns. Focused mainly
    on two-dimensional point patterns, including multitype/marked points, in any spatial
    region. Also supports three-dimensional point patterns, space-time point patterns
    in any number of dimensions, point patterns on a linear network, and patterns of
    other geometrical objects. Supports spatial covariate data such as pixel images.
    Contains over 2000 functions for plotting spatial data, exploratory data analysis,
    model-fitting, simulation, spatial sampling, model diagnostics, and formal inference.
    Data types include point patterns, line segment patterns, spatial windows, pixel
    images, tessellations, and linear networks. Exploratory methods include quadrat
    counts, K-functions and their simulation envelopes, nearest neighbour distance and
    empty space statistics, Fry plots, pair correlation function, kernel smoothed intensity,
    relative risk estimation with cross-validated bandwidth selection, mark correlation
    functions, segregation indices, mark dependence diagnostics, and kernel estimates
    of covariate effects. Formal hypothesis tests of random pattern (chi-squared, Kolmogorov-Smirnov,
    Monte Carlo, Diggle-Cressie-Loosmore-Ford, Dao-Genton, two-stage Monte Carlo) and
    tests for covariate effects (Cox-Berman-Waller-Lawson, Kolmogorov-Smirnov, ANOVA)
    are also supported. Parametric models can be fitted to point pattern data using
    the functions ppm(), kppm(), slrm(), dppm() similar to glm(). Types of models include
    Poisson, Gibbs and Cox point processes, Neyman-Scott cluster processes, and determinantal
    point processes. Models may involve dependence on covariates, inter-point interaction,
    cluster formation and dependence on marks. Models are fitted by maximum likelihood,
    logistic regression, minimum contrast, and composite likelihood methods. A model
    can be fitted to a list of point patterns (replicated point pattern data) using
    the function mppm(). The model can include random effects and fixed effects depending
    on the experimental design, in addition to all the features listed above. Fitted
    point process models can be simulated, automatically. Formal hypothesis tests of
    a fitted model are supported (likelihood ratio test, analysis of deviance, Monte
    Carlo tests) along with basic tools for model selection (stepwise(), AIC()) and
    variable selection (sdr). Tools for validating the fitted model include simulation
    envelopes, residuals, residual plots and Q-Q plots, leverage and influence diagnostics,
    partial residuals, and added variable plots.
  license_family: GPL2
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

# The original CRAN metadata for this package was:

# Package: spatstat
# Version: 3.0-6
# Date: 2023-05-17
# Title: Spatial Point Pattern Analysis, Model-Fitting, Simulation, Tests
# Authors@R: c(person("Adrian", "Baddeley", role = c("aut", "cre"), email = "Adrian.Baddeley@curtin.edu.au", comment = c(ORCID="0000-0001-9499-8382")), person("Rolf", "Turner", role = "aut", email="r.turner@auckland.ac.nz", comment=c(ORCID="0000-0001-5521-5218")), person("Ege",   "Rubak", role = "aut", email = "rubak@math.aau.dk", comment=c(ORCID="0000-0002-6675-533X")))
# Maintainer: Adrian Baddeley <Adrian.Baddeley@curtin.edu.au>
# Depends: R (>= 3.5.0), spatstat.data (>= 3.0-1), spatstat.geom (>= 3.2-1), spatstat.random (>= 3.1-5), spatstat.explore (>= 3.2-1), spatstat.model (>= 3.2-4), spatstat.linnet (>= 3.1-1), utils
# Imports: spatstat.utils (>= 3.0-3)
# Suggests:
# Description: Comprehensive open-source toolbox for analysing Spatial Point Patterns. Focused mainly on two-dimensional point patterns, including multitype/marked points, in any spatial region. Also supports three-dimensional point patterns, space-time point patterns in any number of dimensions, point patterns on a linear network, and patterns of other geometrical objects. Supports spatial covariate data such as pixel images. Contains over 2000 functions for plotting spatial data, exploratory data analysis, model-fitting, simulation, spatial sampling, model diagnostics, and formal inference. Data types include point patterns, line segment patterns, spatial windows, pixel images, tessellations, and linear networks. Exploratory methods include quadrat counts, K-functions and their simulation envelopes, nearest neighbour distance and empty space statistics, Fry plots, pair correlation function, kernel smoothed intensity, relative risk estimation with cross-validated bandwidth selection, mark correlation functions, segregation indices, mark dependence diagnostics, and kernel estimates of covariate effects. Formal hypothesis tests of random pattern (chi-squared, Kolmogorov-Smirnov, Monte Carlo, Diggle-Cressie-Loosmore-Ford, Dao-Genton, two-stage Monte Carlo) and tests for covariate effects (Cox-Berman-Waller-Lawson, Kolmogorov-Smirnov, ANOVA) are also supported. Parametric models can be fitted to point pattern data using the functions ppm(), kppm(), slrm(), dppm() similar to glm(). Types of models include Poisson, Gibbs and Cox point processes, Neyman-Scott cluster processes, and determinantal point processes. Models may involve dependence on covariates, inter-point interaction, cluster formation and dependence on marks. Models are fitted by maximum likelihood, logistic regression, minimum contrast, and composite likelihood methods. A model can be fitted to a list of point patterns (replicated point pattern data) using the function mppm(). The model can include random effects and fixed effects depending on the experimental design, in addition to all the features listed above. Fitted point process models can be simulated, automatically. Formal hypothesis tests of a fitted model are supported (likelihood ratio test, analysis of deviance, Monte Carlo tests) along with basic tools for model selection (stepwise(), AIC()) and variable selection (sdr). Tools for validating the fitted model include simulation envelopes, residuals, residual plots and Q-Q plots, leverage and influence diagnostics, partial residuals, and added variable plots.
# License: GPL (>= 2)
# URL: http://spatstat.org/
# NeedsCompilation: yes
# ByteCompile: true
# BugReports: https://github.com/spatstat/spatstat/issues
# Packaged: 2023-05-17 01:19:33 UTC; adrian
# Author: Adrian Baddeley [aut, cre] (<https://orcid.org/0000-0001-9499-8382>), Rolf Turner [aut] (<https://orcid.org/0000-0001-5521-5218>), Ege Rubak [aut] (<https://orcid.org/0000-0002-6675-533X>)
# Repository: CRAN
# Date/Publication: 2023-05-17 07:40:02 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
