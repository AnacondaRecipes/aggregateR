{% set version = '2.6.2' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-noctua
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/noctua_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/noctua/noctua_{{ version }}.tar.gz
  sha256: bdeeafe2a9bbca83d9aa9b90f5b59fc119e9255b9eff70a26fad5d15379bf1c8

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: arrow, bit64, dplyr (>= 0.8.0), dbplyr (>= 1.4.3), testthat, tibble, vroom (>= 1.2.0), covr, knitr, rmarkdown, jsonify, jsonlite
requirements:
  build:
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-dbi >=0.7
    - r-data.table >=1.12.4
    - r-paws >=0.2.0
    - r-uuid >=0.1_4

  run:
    - r-base
    - r-dbi >=0.7
    - r-data.table >=1.12.4
    - r-paws >=0.2.0
    - r-uuid >=0.1_4

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('noctua')"           # [not win]
    - "\"%R%\" -e \"library('noctua')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/DyfanJones/noctua
  license: MIT
  summary: Designed to be compatible with the 'R' package 'DBI' (Database Interface) when connecting
    to Amazon Web Service ('AWS') Athena <https://aws.amazon.com/athena/>. To do this
    the 'R' 'AWS' Software Development Kit ('SDK') 'paws' <https://github.com/paws-r/paws>
    is used as a driver.
  license_family: MIT
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/MIT'
    - LICENSE

# The original CRAN metadata for this package was:

# Package: noctua
# Type: Package
# Title: Connect to 'AWS Athena' using R 'AWS SDK' 'paws' ('DBI' Interface)
# Version: 2.6.2
# Authors@R: person("Dyfan", "Jones", email="dyfan.r.jones@gmail.com", role= c("aut", "cre"))
# Description: Designed to be compatible with the 'R' package 'DBI' (Database Interface) when connecting to Amazon Web Service ('AWS') Athena <https://aws.amazon.com/athena/>. To do this the 'R' 'AWS' Software Development Kit ('SDK') 'paws' <https://github.com/paws-r/paws> is used as a driver.
# Imports: data.table (>= 1.12.4), DBI (>= 0.7), methods, paws (>= 0.2.0), stats, utils, uuid (>= 0.1-4)
# Suggests: arrow, bit64, dplyr (>= 0.8.0), dbplyr (>= 1.4.3), testthat, tibble, vroom (>= 1.2.0), covr, knitr, rmarkdown, jsonify, jsonlite
# VignetteBuilder: knitr
# Depends: R (>= 3.2.0)
# License: MIT + file LICENSE
# Encoding: UTF-8
# RoxygenNote: 7.2.3
# URL: https://github.com/DyfanJones/noctua
# BugReports: https://github.com/DyfanJones/noctua/issues
# Collate: 'utils.R' 'dplyr_integration.R' 'noctua.R' 'Driver.R' 'Connection.R' 'DataTypes.R' 'File_Parser.R' 'Options.R' 'fetch_utils.R' 'Result.R' 'Table.R' 'View.R' 'athena_low_api.R' 'column_parser.R' 'sql_translate_utils.R' 'sql_translate_env.R' 'zzz.R'
# NeedsCompilation: no
# Packaged: 2023-08-08 17:37:19 UTC; dyfanjones
# Author: Dyfan Jones [aut, cre]
# Maintainer: Dyfan Jones <dyfan.r.jones@gmail.com>
# Repository: CRAN
# Date/Publication: 2023-08-08 18:00:02 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
