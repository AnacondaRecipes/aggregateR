{% set version = '1.0' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-teraplusb
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/TERAplusB_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/TERAplusB/TERAplusB_{{ version }}.tar.gz
  sha256: ec5d3e23c5d8927f1e41e498e3863ad6dff79fe0afa651b3128e715582e95057

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{posix}}zip               # [win]

  host:
    - r-base

  run:
    - r-base

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('TERAplusB')"           # [not win]
    - "\"%R%\" -e \"library('TERAplusB')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=TERAplusB
  license: LGPL-2.1
  summary: This package is for the comparison of various types of A+B escalation rules for dose
    finding trials.
  license_family: LGPL
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/LGPL-2.1'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: TERAplusB
# Title: Test for A+B Traditional Escalation Rule
# Version: 1.0
# Date: 2011-05-24
# Author: Eun-Kyung Lee
# Maintainer: Eun-Kyung Lee <lee.eunk@ewha.ac.kr>
# Description: This package is for the comparison of various types of A+B escalation rules for dose finding trials.
# License: LGPL-2.1
# LazyLoad: yes
# Packaged: 2012-10-29 08:57:44 UTC; ripley
# Repository: CRAN
# Date/Publication: 2012-10-29 08:57:44
# NeedsCompilation: no

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
