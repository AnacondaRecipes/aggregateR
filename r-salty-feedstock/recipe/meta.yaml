{% set version = '0.1.0' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-salty
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/salty_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/salty/salty_{{ version }}.tar.gz
  sha256: 26c33587971e498b17ec9acaed23b7d5447618d503d004bc3381ec99bd30b8b7

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: charlatan, testthat (>= 2.0.0), tibble, covr
requirements:
  build:
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-assertthat
    - r-purrr
    - r-stringr

  run:
    - r-base
    - r-assertthat
    - r-purrr
    - r-stringr

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('salty')"           # [not win]
    - "\"%R%\" -e \"library('salty')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/mdlincoln/salty
  license: MIT
  summary: Take real or simulated data and salt it with errors commonly found in the wild, such
    as pseudo-OCR errors, Unicode problems, numeric fields with nonsensical punctuation,
    bad dates, etc.
  license_family: MIT
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/MIT'
    - LICENSE

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Type: Package
# Package: salty
# Title: Turn Clean Data into Messy Data
# Version: 0.1.0
# Authors@R: c( person("Matthew Lincoln", email = "matthew.d.lincoln@gmail.com", role = c("aut", "cre"), comment = c(ORCID = "0000-0002-4387-3384")))
# Description: Take real or simulated data and salt it with errors commonly found in the wild, such as pseudo-OCR errors, Unicode problems, numeric fields with nonsensical punctuation, bad dates, etc.
# License: MIT + file LICENSE
# Depends: R (>= 2.10)
# Imports: assertthat, purrr, stringr
# Suggests: charlatan, testthat (>= 2.0.0), tibble, covr
# Encoding: UTF-8
# LazyData: true
# RoxygenNote: 6.1.0
# URL: https://github.com/mdlincoln/salty
# BugReports: https://github.com/mdlincoln/salty/issues
# NeedsCompilation: no
# Packaged: 2018-09-10 11:49:31 UTC; mlincoln
# Author: Matthew Lincoln [aut, cre] (<https://orcid.org/0000-0002-4387-3384>)
# Maintainer: Matthew Lincoln <matthew.d.lincoln@gmail.com>
# Repository: CRAN
# Date/Publication: 2018-09-17 11:40:03 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
