{% set version = '1.2.3' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-ggvenndiagram
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/ggVennDiagram_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/ggVennDiagram/ggVennDiagram_{{ version }}.tar.gz
  sha256: f26c4977d868cef80a3ce80ea418130415ac4106336d4172c5638cd130c87820

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: testthat (>= 2.1.0), knitr, rmarkdown, tidyr, venn, RColorBrewer
requirements:
  build:
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-rvenn
    - r-dplyr
    - r-ggplot2
    - r-magrittr
    - r-plotly
    - r-purrr
    - r-sf
    - r-tibble
    - r-yulab.utils

  run:
    - r-base
    - r-rvenn
    - r-dplyr
    - r-ggplot2
    - r-magrittr
    - r-plotly
    - r-purrr
    - r-sf
    - r-tibble
    - r-yulab.utils

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('ggVennDiagram')"           # [not win]
    - "\"%R%\" -e \"library('ggVennDiagram')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/gaospecial/ggVennDiagram
  license: GPL-3
  summary: 'Easy-to-use functions to generate 2-7 sets Venn plot in publication quality. ''ggVennDiagram''
    plot Venn using well-defined geometry dataset and ''ggplot2''. The shapes of 2-4
    sets Venn use circles and ellipses, while the shapes of 4-7 sets Venn use irregular
    polygons (4 has both forms), which are developed and imported from another package
    ''venn'', authored by Adrian Dusa. We provided internal functions to integrate shape
    data with user provided sets data, and calculated the geometry of every regions/intersections
    of them, then separately plot Venn in three components: set edges, set labels, and
    regions. From version 1.0, it is possible to customize these components as you demand
    in ordinary ''ggplot2'' grammar.'
  license_family: GPL3
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-3'

# The original CRAN metadata for this package was:

# Package: ggVennDiagram
# Type: Package
# Title: A 'ggplot2' Implement of Venn Diagram
# Version: 1.2.3
# Authors@R: c( person("Chun-Hui","Gao",email="gaospecial@gmail.com",role=c("aut","cre"), comment=c(ORCID = "0000-0002-1445-7939")), person("Guangchuang", "Yu", email = "guangchuangyu@gmail.com", role = c("ctb"), comment = c(ORCID = "0000-0002-6485-8781")), person("Adrian", "Dusa", role = c("ctb"),  email = "dusa.adrian@unibuc.ro") )
# Maintainer: Chun-Hui Gao <gaospecial@gmail.com>
# Description: Easy-to-use functions to generate 2-7 sets Venn plot in publication quality. 'ggVennDiagram' plot Venn using well-defined geometry dataset and 'ggplot2'. The shapes of 2-4 sets Venn use circles and ellipses, while the shapes of 4-7 sets Venn use irregular polygons (4 has both forms), which are developed and imported from another package 'venn', authored by Adrian Dusa. We provided internal functions to integrate shape data with user provided sets data, and calculated the geometry of every regions/intersections of them, then separately plot Venn in three components: set edges, set labels, and regions. From version 1.0, it is possible to customize these components as you demand in ordinary 'ggplot2' grammar.
# Depends: R (>= 3.5.0)
# Imports: sf, ggplot2, dplyr, magrittr, methods, purrr, tibble, plotly, RVenn, yulab.utils
# URL: https://github.com/gaospecial/ggVennDiagram
# License: GPL-3
# Encoding: UTF-8
# RoxygenNote: 7.2.3
# Suggests: testthat (>= 2.1.0), knitr, rmarkdown, tidyr, venn, RColorBrewer
# VignetteBuilder: knitr
# NeedsCompilation: no
# Packaged: 2023-08-14 10:42:56 UTC; gaoch
# Author: Chun-Hui Gao [aut, cre] (<https://orcid.org/0000-0002-1445-7939>), Guangchuang Yu [ctb] (<https://orcid.org/0000-0002-6485-8781>), Adrian Dusa [ctb]
# Repository: CRAN
# Date/Publication: 2023-08-14 11:20:13 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
