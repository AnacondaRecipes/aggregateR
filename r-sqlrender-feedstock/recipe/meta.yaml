{% set version = '1.16.1' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-sqlrender
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/SqlRender_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/SqlRender/SqlRender_{{ version }}.tar.gz
  sha256: 7bbada5b4a3792be21ca8e29708fbf2c2282178b88086336f80d7e218ca9285d

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: testthat, knitr, rmarkdown, shiny, shinydashboard
requirements:
  build:
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-checkmate
    - r-rjava
    - r-rlang
    - openjdk  # [linux]

  run:
    - r-base
    - r-checkmate
    - r-rjava
    - r-rlang

test:
  requires:
    - openjdk  # [linux]
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('SqlRender')"           # [not win]
    - "\"%R%\" -e \"library('SqlRender')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://ohdsi.github.io/SqlRender/, https://github.com/OHDSI/SqlRender
  license: Apache License 2.0
  summary: A rendering tool for parameterized SQL that also translates into different SQL dialects.  These
    dialects include 'Microsoft SQL Server', 'Oracle', 'PostgreSql', 'Amazon RedShift',
    'Apache Impala', 'IBM Netezza', 'Google BigQuery', 'Microsoft PDW', 'Snowflake',
    'Azure Synapse Analytics Dedicated', 'Apache Spark', and 'SQLite'.
  license_family: APACHE

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: SqlRender
# Type: Package
# Title: Rendering Parameterized SQL and Translation to Dialects
# Version: 1.16.1
# Date: 2023-10-07
# Authors@R: c( person("Martijn", "Schuemie", , "schuemie@ohdsi.org", role = c("aut", "cre")), person("Marc", "Suchard", role = c("aut")) )
# Maintainer: Martijn Schuemie <schuemie@ohdsi.org>
# Description: A rendering tool for parameterized SQL that also translates into different SQL dialects.  These dialects include 'Microsoft SQL Server', 'Oracle', 'PostgreSql', 'Amazon RedShift', 'Apache Impala', 'IBM Netezza', 'Google BigQuery', 'Microsoft PDW', 'Snowflake', 'Azure Synapse Analytics Dedicated', 'Apache Spark', and 'SQLite'.
# SystemRequirements: Java (>= 8)
# License: Apache License 2.0
# VignetteBuilder: knitr
# URL: https://ohdsi.github.io/SqlRender/, https://github.com/OHDSI/SqlRender
# BugReports: https://github.com/OHDSI/SqlRender/issues
# Imports: rJava, rlang, checkmate
# Suggests: testthat, knitr, rmarkdown, shiny, shinydashboard
# RoxygenNote: 7.2.3
# Encoding: UTF-8
# NeedsCompilation: no
# Packaged: 2023-10-07 06:36:13 UTC; MSCHUEMI
# Author: Martijn Schuemie [aut, cre], Marc Suchard [aut]
# Repository: CRAN
# Date/Publication: 2023-10-07 07:10:02 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
