{% set version = '1.3.0' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-jqr
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/jqr_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/jqr/jqr_{{ version }}.tar.gz
  sha256: 30c7aad2d9e3210bd548a0cb2c8a3e88621eff5731c95913a9d5a9e8c40ada3f

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: jsonlite, testthat
requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}sed               # [win]
    - {{ posix }}grep              # [win]
    - {{ posix }}autoconf
    - {{ posix }}automake          # [not win]
    - {{ posix }}automake-wrapper  # [win]
    - {{ posix }}pkg-config
    - {{ posix }}make
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-lazyeval
    - r-magrittr
    - jq

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-lazyeval
    - r-magrittr
    - jq

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('jqr')"           # [not win]
    - "\"%R%\" -e \"library('jqr')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://docs.ropensci.org/jqr/ (docs), https://github.com/ropensci/jqr (devel)
  license: MIT
  summary: 'Client for ''jq'', a ''JSON'' processor (<https://jqlang.github.io/jq/>), written
    in C. ''jq'' allows the following with ''JSON'' data: index into, parse, do calculations,
    cut up and filter, change key names and values, perform conditionals and comparisons,
    and more.'
  license_family: MIT
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/MIT'
    - LICENSE

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: jqr
# Title: Client for 'jq', a 'JSON' Processor
# Description: Client for 'jq', a 'JSON' processor (<https://jqlang.github.io/jq/>), written in C. 'jq' allows the following with 'JSON' data: index into, parse, do calculations, cut up and filter, change key names and values, perform conditionals and comparisons, and more.
# Version: 1.3.0
# Depends: R (>= 3.1.2)
# License: MIT + file LICENSE
# Encoding: UTF-8
# Language: en-US
# LazyData: true
# Authors@R: c(person("Rich", "FitzJohn", role = "aut", email = "rich.fitzjohn@gmail.com"), person("Jeroen", "Ooms", role = c("aut", "cre"), email = "jeroen@berkeley.edu"), person("Scott", "Chamberlain", role = "aut", email = "myrmecocystus@gmail.com"), person("Stefan Milton Bache", role = "aut", email = "stefan@stefanbache.dk"))
# URL: https://docs.ropensci.org/jqr/ (docs), https://github.com/ropensci/jqr (devel)
# BugReports: https://github.com/ropensci/jqr/issues
# SystemRequirements: libjq: jq-devel (rpm) or libjq-dev (deb)
# Imports: magrittr, lazyeval
# Suggests: jsonlite, testthat
# RoxygenNote: 7.2.3
# NeedsCompilation: yes
# Packaged: 2023-09-20 16:25:54 UTC; jeroen
# Author: Rich FitzJohn [aut], Jeroen Ooms [aut, cre], Scott Chamberlain [aut], Stefan Milton Bache [aut]
# Maintainer: Jeroen Ooms <jeroen@berkeley.edu>
# Repository: CRAN
# Date/Publication: 2023-09-20 18:30:02 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
