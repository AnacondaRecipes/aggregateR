{% set version = '1.0.2' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-waffle
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/waffle_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/waffle/waffle_{{ version }}.tar.gz
  sha256: e650803b4ec3c6a0aca02b1d9430d23d603d86f9782d90b96f698a6b692de09f

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: knitr, rmarkdown, dplyr, ggthemes
requirements:
  build:
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-dt
    - r-rcolorbrewer
    - r-curl
    - r-extrafont
    - r-ggplot2 >=3.1.0
    - r-gridextra
    - r-gtable
    - r-htmlwidgets
    - r-plyr
    - r-rlang
    - r-stringr

  run:
    - r-base
    - r-dt
    - r-rcolorbrewer
    - r-curl
    - r-extrafont
    - r-ggplot2 >=3.1.0
    - r-gridextra
    - r-gtable
    - r-htmlwidgets
    - r-plyr
    - r-rlang
    - r-stringr

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('waffle')"           # [not win]
    - "\"%R%\" -e \"library('waffle')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=waffle
  license: GPL-2
  summary: Square pie charts (a.k.a. waffle charts) can be used to communicate parts of a whole
    for categorical quantities. To emulate the percentage view of a pie chart, a 10x10
    grid should be used with each square representing 1% of the total. Modern uses of
    waffle charts do not necessarily adhere to this rule and can be created with a grid
    of any rectangular shape. Best practices suggest keeping the number of categories
    small, just as should be done when creating pie charts. Tools are provided to create
    waffle charts as well as stitch them together, and to use glyphs for making isotype
    pictograms.
  license_family: GPL2
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

# The original CRAN metadata for this package was:

# Package: waffle
# Type: Package
# Title: Create Waffle Chart Visualizations
# Version: 1.0.2
# Date: 2023-09-30
# Authors@R: c( person("Bob", "Rudis", email = "bob@rud.is", role = c("aut", "cre"), comment = c(ORCID = "0000-0001-5670-2640")), person("Dave", "Gandy", role = "aut", comment = "Font Awesome"), person("Andrew", "Breza", email = "andrew.breza@gmail.com", role = "ctb"), person("Matthias", "Jutte", role = "ctb"), person("Paul", "Campbell", email = "pacampbell91@gmail.com", role = "ctb", comment = "geom_bar flip") )
# Maintainer: Bob Rudis <bob@rud.is>
# Description: Square pie charts (a.k.a. waffle charts) can be used to communicate parts of a whole for categorical quantities. To emulate the percentage view of a pie chart, a 10x10 grid should be used with each square representing 1% of the total. Modern uses of waffle charts do not necessarily adhere to this rule and can be created with a grid of any rectangular shape. Best practices suggest keeping the number of categories small, just as should be done when creating pie charts. Tools are provided to create waffle charts as well as stitch them together, and to use glyphs for making isotype pictograms.
# Encoding: UTF-8
# Copyright: file inst/COPYRIGHTS
# Suggests: knitr, rmarkdown, dplyr, ggthemes
# Depends: R (>= 3.5.0), ggplot2 (>= 3.1.0)
# License: GPL (>= 2)
# Imports: RColorBrewer, grid, gridExtra, gtable, extrafont, curl, stringr, stats, htmlwidgets, DT, plyr, rlang, utils
# RoxygenNote: 7.2.3
# NeedsCompilation: no
# Packaged: 2023-09-30 20:08:27 UTC; hrbrmstr
# Author: Bob Rudis [aut, cre] (<https://orcid.org/0000-0001-5670-2640>), Dave Gandy [aut] (Font Awesome), Andrew Breza [ctb], Matthias Jutte [ctb], Paul Campbell [ctb] (geom_bar flip)
# Repository: CRAN
# Date/Publication: 2023-09-30 20:30:02 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
