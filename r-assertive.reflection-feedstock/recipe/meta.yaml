{% set version = '0.0-4' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-assertive.reflection
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/assertive.reflection_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/assertive.reflection/assertive.reflection_{{ version }}.tar.gz
  sha256: 123672e1a99fc79e7e9e91566ee21bba1fb45fd13e353e41c52e3300ecd2f5a7

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: testthat
requirements:
  build:
    - {{posix}}zip               # [win]

  host:
    - r-base
    - r-assertive.base >=0.0_7

  run:
    - r-base
    - r-assertive.base >=0.0_7

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('assertive.reflection')"           # [not win]
    - "\"%R%\" -e \"library('assertive.reflection')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://bitbucket.org/richierocks/assertive.reflection
  license: GPL (>= 3)
  summary: A set of predicates and assertions for checking the state and capabilities of R, the
    operating system it is running on, and the IDE being used.  This is mainly for use
    by other package developers who want to include run-time testing features in their
    own packages. End-users will usually want to use assertive directly.
  license_family: GPL3
  license_file: '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-3'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: assertive.reflection
# Type: Package
# Title: Assertions for Checking the State of R
# Version: 0.0-4
# Date: 2016-12-30
# Author: Richard Cotton [aut, cre]
# Maintainer: Richard Cotton <richierocks@gmail.com>
# Authors@R: person("Richard", "Cotton", role = c("aut", "cre"), email = "richierocks@gmail.com")
# Description: A set of predicates and assertions for checking the state and capabilities of R, the operating system it is running on, and the IDE being used.  This is mainly for use by other package developers who want to include run-time testing features in their own packages. End-users will usually want to use assertive directly.
# URL: https://bitbucket.org/richierocks/assertive.reflection
# BugReports: https://bitbucket.org/richierocks/assertive.reflection/issues
# Depends: R (>= 3.0.0)
# Imports: assertive.base (>= 0.0-7), utils
# Suggests: testthat
# License: GPL (>= 3)
# LazyLoad: yes
# LazyData: yes
# Acknowledgments: Development of this package was partially funded by the Proteomics Core at Weill Cornell Medical College in Qatar <http://qatar-weill.cornell.edu>.  The Core is supported by 'Biomedical Research Program' funds, a program funded by Qatar Foundation.
# Collate: 'imports.R' 'assert-is-32-64-bit.R' 'assert-is-current.R' 'assert-is-decimal-point.R' 'assert-is-ide.R' 'assert-is-on-os-path.R' 'assert-is-os.R' 'assert-is-r-mode.R' 'assert-is-r-version.R' 'assert-r-has-capability.R' 'is-32-64-bit.R' 'is-current.R' 'is-decimal-point.R' 'is-ide.R' 'is-on-os-path.R' 'is-os.R' 'is-r-mode.R' 'is-r-version.R' 'locale.R' 'r-has-capability.R'
# RoxygenNote: 5.0.1
# NeedsCompilation: no
# Packaged: 2016-12-30 17:53:49 UTC; richierocks
# Repository: CRAN
# Date/Publication: 2016-12-30 19:35:52

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
