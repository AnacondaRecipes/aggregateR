{% set version = '1.0-0' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-dotcall64
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/dotCall64_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/dotCall64/dotCall64_{{ version }}.tar.gz
  sha256: 69318dc6b8aecc54d4f789c8105e672198363b395f1a764ebaeb54c0473d17ad

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: microbenchmark, OpenMPController, RColorBrewer, roxygen2, spam, testthat,
requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('fortran') }}        # [not win]
    - {{ compiler('m2w64_fortran') }}  # [win]
    - {{posix}}filesystem        # [win]
    - {{posix}}make
    - {{posix}}sed               # [win]
    - {{posix}}coreutils         # [win]
    - {{posix}}zip               # [win]

  host:
    - r-base

  run:
    - r-base
    - {{native}}gcc-libs         # [win]

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('dotCall64')"           # [not win]
    - "\"%R%\" -e \"library('dotCall64')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://git.math.uzh.ch/reinhard.furrer/dotCall64
  license: GPL-2
  summary: Provides .C64(), which is an enhanced version of .C() and .Fortran() from the foreign
    function interface. .C64() supports long vectors, arguments of type 64-bit integer,
    and provides a mechanism to avoid unnecessary copies of read-only and write-only
    arguments. This makes it a convenient and fast interface to C/C++ and Fortran code.
  license_family: GPL2
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: dotCall64
# Type: Package
# Title: Enhanced Foreign Function Interface Supporting Long Vectors
# Version: 1.0-0
# Date: 2018-07-30
# Authors@R: c(person("Kaspar", "Moesinger", role = c("aut"), email = "kaspar.moesinger@gmail.com"), person("Florian", "Gerber", role = c("cre", "ctb"), email = "florian.gerber@math.uzh.ch"), person("Reinhard", "Furrer", role = "ctb", email = "reinhard.furrer@math.uzh.ch"))
# Description: Provides .C64(), which is an enhanced version of .C() and .Fortran() from the foreign function interface. .C64() supports long vectors, arguments of type 64-bit integer, and provides a mechanism to avoid unnecessary copies of read-only and write-only arguments. This makes it a convenient and fast interface to C/C++ and Fortran code.
# License: GPL (>= 2)
# URL: https://git.math.uzh.ch/reinhard.furrer/dotCall64
# BugReports: https://git.math.uzh.ch/reinhard.furrer/dotCall64/issues
# Depends: R (>= 3.1)
# Suggests: microbenchmark, OpenMPController, RColorBrewer, roxygen2, spam, testthat,
# Collate: 'vector_dc.R' 'dotCall64.R' 'zzz.R'
# RoxygenNote: 6.0.1
# NeedsCompilation: yes
# Packaged: 2018-07-30 17:08:56 UTC; floger
# Author: Kaspar Moesinger [aut], Florian Gerber [cre, ctb], Reinhard Furrer [ctb]
# Maintainer: Florian Gerber <florian.gerber@math.uzh.ch>
# Repository: CRAN
# Date/Publication: 2018-07-30 17:30:14 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
