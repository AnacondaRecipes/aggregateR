From a6ba7daad9fd5be92db1c4b5fa42e1f694680f84 Mon Sep 17 00:00:00 2001
From: Ray Donnelly <mingw.android@gmail.com>
Date: Sat, 31 Mar 2018 11:19:43 +0100
Subject: [PATCH 43/46] macOS: Fix Xcode link failure

Undefined symbols for architecture x86_64:
  _objc_readClassPair, referenced from:
      __ARCLite__load() in libarclite_macosx.a(arclite.o)
ld: symbol(s) not found for architecture x86_64
clang: error: linker command failed with exit code 1 (use -v to see invocation)

Note, this needs to be done for every executable (rsession, rpostback etc) so instead
we set LDFLAGS in build.sh when doing an Xcode build. Keeping this around as reference
meterial though.
---
 src/cpp/desktop/CMakeLists.txt | 10 ++++++++++
 1 file changed, 10 insertions(+)

diff --git a/src/cpp/desktop/CMakeLists.txt b/src/cpp/desktop/CMakeLists.txt
index db5665cdfb..e9a8860251 100644
--- a/src/cpp/desktop/CMakeLists.txt
+++ b/src/cpp/desktop/CMakeLists.txt
@@ -454,6 +454,16 @@ else()
   install(TARGETS ${RSTUDIO_EXE_NAME} DESTINATION ${RSTUDIO_INSTALL_BIN})
 endif()
 
+# https://stackoverflow.com/q/15761583
+# https://forums.developer.apple.com/thread/17757
+# If this does not work then we may be able to add "-Xlinker -U -Xlinker _objc_readClassPair" to the
+# linker flags.
+if(APPLE)
+   if(CMAKE_GENERATOR STREQUAL Xcode)
+      set_target_properties(${RSTUDIO_EXE_NAME} PROPERTIES XCODE_ATTRIBUTE_CLANG_LINK_OBJC_RUNTIME "NO")
+   endif()
+endif()
+
 # bundle qt dependencies if this is a package build
 if(RSTUDIO_BUNDLE_QT)
    # set lib suffix for windows
-- 
2.16.1

