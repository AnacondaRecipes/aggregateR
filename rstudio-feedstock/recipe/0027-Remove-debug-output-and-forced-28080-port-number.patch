From c86c803b6b9af75a1148359b57f88ce886b1a913 Mon Sep 17 00:00:00 2001
From: Ray Donnelly <mingw.android@gmail.com>
Date: Tue, 8 Nov 2016 14:05:19 +0000
Subject: [PATCH 27/35] Remove debug output and forced 28080 port number

---
 src/cpp/desktop-mac/SessionLauncher.mm                         | 10 ++--------
 src/cpp/desktop/DesktopBrowserWindow.cpp                       |  2 --
 src/cpp/desktop/DesktopOptions.cpp                             |  1 -
 src/cpp/desktop/DesktopSessionLauncher.cpp                     |  6 ------
 src/cpp/session/SessionMain.cpp                                |  6 ------
 src/cpp/session/SessionOptions.cpp                             |  7 -------
 src/gwt/src/org/rstudio/core/client/jsonrpc/RpcRequest.java    |  4 +---
 .../org/rstudio/studio/client/server/remote/RemoteServer.java  |  1 -
 8 files changed, 3 insertions(+), 34 deletions(-)

diff --git a/src/cpp/desktop-mac/SessionLauncher.mm b/src/cpp/desktop-mac/SessionLauncher.mm
index fd0f826565..7dcd33679e 100644
--- a/src/cpp/desktop-mac/SessionLauncher.mm
+++ b/src/cpp/desktop-mac/SessionLauncher.mm
@@ -385,20 +385,14 @@ void logEnvVar(const std::string& name)
    
    boost::function<void(const core::system::ProcessResult&)> onCompleted =
                   boost::bind(&SessionLauncher::onRSessionExited, this, _1);
-   std::cerr << sessionPath_.absolutePath() << std::endl;
+   
    error = launchProcess(sessionPath_.absolutePath(), args, onCompleted);
    if (error)
       return error;
    
    // session process is active
    sessionProcessActive_ = true;
-
-   std::cerr << "waitWithTimeout" << std::endl;
-   for(std::vector<std::string>::iterator it = args.begin(); it != args.end(); ++it)
-   {
-      std::cerr << "arg=" << *it << std::endl;
-   }
-
+   
    // wait for process to be available
    return waitWithTimeout(boost::bind(serverReady, host, port), 50, 25, 10);
 }
diff --git a/src/cpp/desktop/DesktopBrowserWindow.cpp b/src/cpp/desktop/DesktopBrowserWindow.cpp
index 9a22d20e40..6ed75e3863 100644
--- a/src/cpp/desktop/DesktopBrowserWindow.cpp
+++ b/src/cpp/desktop/DesktopBrowserWindow.cpp
@@ -37,8 +37,6 @@ BrowserWindow::BrowserWindow(bool showToolbar,
    adjustTitle_ = adjustTitle;
    progress_ = 0;
 
-   qDebug() << "BrowserWindow::BrowserWindow: name:" << name << " baseUrl: " << baseUrl.toString() << " allowExternalNavigate: " << allowExternalNavigate;
-
    pView_ = new WebView(baseUrl, this, allowExternalNavigate);
    connect(pView_, SIGNAL(titleChanged(QString)), SLOT(adjustTitle()));
    connect(pView_, SIGNAL(loadProgress(int)), SLOT(setProgress(int)));
diff --git a/src/cpp/desktop/DesktopOptions.cpp b/src/cpp/desktop/DesktopOptions.cpp
index 4fc679acf3..b0808b3681 100644
--- a/src/cpp/desktop/DesktopOptions.cpp
+++ b/src/cpp/desktop/DesktopOptions.cpp
@@ -89,7 +89,6 @@ QString Options::portNumber() const
       // instances of rdesktop-launched rsessions
       int base = std::abs(core::random::uniformRandomInteger<int>());
       portNumber_ = QString::number((base % 40000) + 8080);
-      portNumber_ = QString::number(28080);
 
       // recalculate the local peer and set RS_LOCAL_PEER so that
       // rsession and it's children can use it
diff --git a/src/cpp/desktop/DesktopSessionLauncher.cpp b/src/cpp/desktop/DesktopSessionLauncher.cpp
index 426dc4f15e..f7b494b145 100644
--- a/src/cpp/desktop/DesktopSessionLauncher.cpp
+++ b/src/cpp/desktop/DesktopSessionLauncher.cpp
@@ -107,7 +107,6 @@ Error SessionLauncher::launchFirstSession()
    logEnvVar("PATH");
    logEnvVar("HOME");
    logEnvVar("R_USER");
-    RUN_DIAGNOSTICS_LOG("\nSessionLauncher::launchFirstSession ..\n");
 
    // launch the process
    Error error = launchSession(argList, &pRSessionProcess_);
@@ -330,9 +329,6 @@ Error SessionLauncher::launchSession(const QStringList& argList,
    if (error)
       LOG_ERROR(error);
 
-   RUN_DIAGNOSTICS_LOG("\nSessionLauncher::launch: " + sessionPath_.absolutePath() + "\n");
-
-
    return  parent_process_monitor::wrapFork(
          boost::bind(launchProcess,
                      sessionPath_.absolutePath(),
@@ -420,8 +416,6 @@ void SessionLauncher::buildLaunchContext(QString* pHost,
    *pUrl = QUrl(QString::fromUtf8("http://") + *pHost +
                 QString::fromUtf8(":") + *pPort + QString::fromUtf8("/"));
 
-   qDebug() << "SessionLauncher::buildLaunchContext: pUrl->toString(): " << pUrl->toString() << " pHost: " << *pHost << " pPort: " << *pPort;
-
    if (!confPath_.empty())
    {
       *pArgList << QString::fromUtf8("--config-file") <<
diff --git a/src/cpp/session/SessionMain.cpp b/src/cpp/session/SessionMain.cpp
index c82dbe4157..a3cb3b851b 100644
--- a/src/cpp/session/SessionMain.cpp
+++ b/src/cpp/session/SessionMain.cpp
@@ -28,8 +28,6 @@
 #include <csignal>
 #include <limits>
 
-#include <iostream>
-
 #include <boost/shared_ptr.hpp>
 #include <boost/function.hpp>
 #include <boost/lexical_cast.hpp>
@@ -191,9 +189,6 @@
 
 #include <tests/TestRunner.hpp>
 
-#include <iostream>
-#include <fstream>
-
 using namespace rstudio;
 using namespace rstudio::core;
 
@@ -1540,7 +1535,6 @@ bool ensureUtf8Charset()
 // run session
 int main (int argc, char * const argv[]) 
 {
-   std::ofstream tmp_log; tmp_log.open("C:/Users/ray/rstudio-log.txt", std::ios::app); tmp_log << "Hello from main():" << std::endl; tmp_log.close();
    try
    {
       // initialize log so we capture all errors including ones which occur
diff --git a/src/cpp/session/SessionOptions.cpp b/src/cpp/session/SessionOptions.cpp
index a59527f5e0..72ea319d0e 100644
--- a/src/cpp/session/SessionOptions.cpp
+++ b/src/cpp/session/SessionOptions.cpp
@@ -41,9 +41,6 @@
 #include <session/SessionScopes.hpp>
 #include <session/projects/SessionProjectSharing.hpp>
 
-#include <iostream>
-#include <fstream>
-
 #include "session-config.h"
 
 using namespace rstudio::core ;
@@ -137,8 +134,6 @@ core::ProgramStatus Options::read(int argc, char * const argv[], std::ostream& o
       return ProgramStatus::exitFailure();
    }
 
-   std::ofstream tmp_log; tmp_log.open("C:/Users/ray/rstudio-log.txt", std::ios::app); tmp_log << "resourcePath_: " << resourcePath_.absolutePath() << std::endl; tmp_log.close();
-
    // detect running in OSX bundle and tweak resource path
 #if defined(__APPLE__) && !defined(CONDA_BUILD)
    if (resourcePath_.complete("Info.plist").exists())
@@ -768,7 +763,6 @@ void Options::bundleOrCondaResolvePath(const FilePath& resourcePath,
    {
       resolvePath(resourcePath, pPath);
    }
-   std::ofstream tmp_log; tmp_log.open("C:/Users/ray/rstudio-log.txt", std::ios::app); tmp_log << "default: " << defaultPath << " .. resolved: " << *pPath << std::endl; tmp_log.close();
 }
 
 void Options::resolveIDEPath(const std::string& cppRelativeLocation,
@@ -808,7 +802,6 @@ void Options::resolveIDEPath(const std::string& cppRelativeLocation,
       if (it->exists())
       {
          *pPath = it->absolutePath();
-          std::ofstream tmp_log; tmp_log.open("C:/Users/ray/rstudio-log.txt", std::ios::app); tmp_log << "resolveIDEPath: exeName: " << *pPath << std::endl; tmp_log.close();
          return;
       }
    }
diff --git a/src/gwt/src/org/rstudio/core/client/jsonrpc/RpcRequest.java b/src/gwt/src/org/rstudio/core/client/jsonrpc/RpcRequest.java
index 5e1db4eda5..6ff19caad0 100644
--- a/src/gwt/src/org/rstudio/core/client/jsonrpc/RpcRequest.java
+++ b/src/gwt/src/org/rstudio/core/client/jsonrpc/RpcRequest.java
@@ -29,7 +29,7 @@ import org.rstudio.core.client.jsonrpc.RequestLogEntry.ResponseType;
 // for retries after network or authentication errors)
 public class RpcRequest 
 {
-   public static final boolean TRACE = true ;
+   public static final boolean TRACE = false ;
    
    public RpcRequest(String url, 
                      String method, 
@@ -92,8 +92,6 @@ public class RpcRequest
       try
       {
          String requestString = request.toString();
-         if (TRACE)
-            Debug.log("RpcRequest url_: " + url_) ;
          if (TRACE)
             Debug.log("Request: " + requestString) ;
 
diff --git a/src/gwt/src/org/rstudio/studio/client/server/remote/RemoteServer.java b/src/gwt/src/org/rstudio/studio/client/server/remote/RemoteServer.java
index 71228c63f6..c32b75897d 100644
--- a/src/gwt/src/org/rstudio/studio/client/server/remote/RemoteServer.java
+++ b/src/gwt/src/org/rstudio/studio/client/server/remote/RemoteServer.java
@@ -433,7 +433,6 @@ public class RemoteServer implements Server
       ensureListeningForEvents();
       
       // return the url
-      Debug.log("GWT.getHostPageBaseURL(): " + GWT.getHostPageBaseURL() + "StringUtil.trailingSlashSlashToSlash(GWT.getHostPageBaseURL())" + StringUtil.trailingSlashSlashToSlash(GWT.getHostPageBaseURL())) ;
       return StringUtil.trailingSlashSlashToSlash(GWT.getHostPageBaseURL()) + pathName;
    }
    
-- 
2.14.3 (Apple Git-98)

