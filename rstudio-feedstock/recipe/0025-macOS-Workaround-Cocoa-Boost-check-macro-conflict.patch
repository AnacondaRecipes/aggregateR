From e898c42613560f1c6985423b6233cd12f2bb7203 Mon Sep 17 00:00:00 2001
From: Ray Donnelly <mingw.android@gmail.com>
Date: Wed, 18 Oct 2017 13:09:27 +0000
Subject: [PATCH 25/41] macOS: Workaround Cocoa/Boost 'check' macro conflict

Apple have a macro in Cocoa somewhere called check()
which conflicts with the Boost assert macros.

See: https://github.com/facebook/osquery/pull/3613/files
and: https://svn.boost.org/trac10/ticket/6219
---
 CMakeGlobals.txt       | 3 +++
 src/cpp/CMakeLists.txt | 5 +++++
 2 files changed, 8 insertions(+)

diff --git a/CMakeGlobals.txt b/CMakeGlobals.txt
index 23136cb6dd..f6296770b8 100644
--- a/CMakeGlobals.txt
+++ b/CMakeGlobals.txt
@@ -57,6 +57,9 @@ if (CMAKE_BUILD_TYPE STREQUAL "Debug" AND NOT RSTUDIO_UNIT_TESTS_DISABLED)
   add_definitions(-DRSTUDIO_UNIT_TESTS_ENABLED)
 endif()
 
+# Boost 1.65 / macOS fix: https://stackoverflow.com/q/31665095
+add_definitions(-D__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES=0)
+
 # platform specific default for targets
 if(NOT RSTUDIO_TARGET)
    set(RSTUDIO_TARGET "Development")
diff --git a/src/cpp/CMakeLists.txt b/src/cpp/CMakeLists.txt
index 3dc311db10..fc5a88bc3a 100644
--- a/src/cpp/CMakeLists.txt
+++ b/src/cpp/CMakeLists.txt
@@ -129,6 +129,11 @@ if(UNIX)
          add_definitions(-Wrestrict)
          add_definitions(-Wnull-dereference)
       endif()
+      # Apple have a macro in Cocoa somewhere called check()
+      # which conflicts with the Boost assert macros.
+      # See: https://github.com/facebook/osquery/pull/3613/files
+      # and: https://svn.boost.org/trac10/ticket/6219
+      add_definitions(-D__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES=0)
    endif()
 
 # Win32 specific global directives
-- 
2.20.1

