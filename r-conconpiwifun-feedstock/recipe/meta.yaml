{% set version = '0.4.6.1' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-conconpiwifun
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/ConConPiWiFun_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/ConConPiWiFun/ConConPiWiFun_{{ version }}.tar.gz
  sha256: 08f4ab60ded46eaaa5872f4618ba11887a885497fda4a3e23c49f4450d313efe

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}make
    - {{ posix }}sed               # [win]
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-rcpp >=0.10.3

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-rcpp >=0.10.3

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('ConConPiWiFun')"           # [not win]
    - "\"%R%\" -e \"library('ConConPiWiFun')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=ConConPiWiFun
  license: GPL-2
  summary: Continuous convex piecewise linear (ccpl) resp. quadratic (ccpq) functions can be
    implemented with sorted breakpoints and slopes. This includes functions that are
    ccpl (resp. ccpq) on a convex set (i.e. an interval or a point) and infinite out
    of the domain. These functions can be very useful for a large class of optimisation
    problems. Efficient manipulation (such as log(N) insertion) of such data structure
    is obtained with map standard template library of C++ (that hides balanced trees).
    This package is a wrapper on such a class based on Rcpp modules.
  license_family: GPL2
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: ConConPiWiFun
# Type: Package
# Title: Optimisation with Continuous Convex Piecewise (Linear and Quadratic) Functions
# Version: 0.4.6.1
# Date: 2013-06-05
# Author: Robin Girard
# Maintainer: Robin Girard <robin.girard@mines-paristech.fr>
# Description: Continuous convex piecewise linear (ccpl) resp. quadratic (ccpq) functions can be implemented with sorted breakpoints and slopes. This includes functions that are ccpl (resp. ccpq) on a convex set (i.e. an interval or a point) and infinite out of the domain. These functions can be very useful for a large class of optimisation problems. Efficient manipulation (such as log(N) insertion) of such data structure is obtained with map standard template library of C++ (that hides balanced trees). This package is a wrapper on such a class based on Rcpp modules.
# License: GPL (>= 2)
# Depends: methods, graphics, Rcpp (>= 0.10.3)
# LinkingTo: Rcpp
# RcppModules: mod_cplfunction,mod_cpqfunction
# NeedsCompilation: yes
# Packaged: 2020-10-14 15:33:51 UTC; hornik
# Repository: CRAN
# Date/Publication: 2020-10-14 16:34:23 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
