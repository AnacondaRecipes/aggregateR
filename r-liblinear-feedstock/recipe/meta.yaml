{% set version = '2.10-8' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-liblinear
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/LiblineaR_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/LiblineaR/LiblineaR_{{ version }}.tar.gz
  sha256: 0f81a93bb954d71fc65c6487da581423b7053722e97544fb1260c7c3d457d39f

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: SparseM
requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{posix}}filesystem        # [win]
    - {{posix}}make
    - {{posix}}sed               # [win]
    - {{posix}}coreutils         # [win]
    - {{posix}}zip               # [win]

  host:
    - r-base

  run:
    - r-base
    - {{native}}gcc-libs         # [win]

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('LiblineaR')"           # [not win]
    - "\"%R%\" -e \"library('LiblineaR')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: http://dnalytics.com/liblinear/
  license: GPL-2
  summary: A wrapper around the 'LIBLINEAR' C/C++ library for machine learning (available at
    <http://www.csie.ntu.edu.tw/~cjlin/liblinear>). 'LIBLINEAR' is a simple library
    for solving large-scale regularized linear classification and regression. It currently
    supports L2-regularized classification (such as logistic regression, L2-loss linear
    SVM and L1-loss linear SVM) as well as L1-regularized classification (such as L2-loss
    linear SVM and logistic regression) and L2-regularized support vector regression
    (with L1- or L2-loss). The main features of LiblineaR include multi-class classification
    (one-vs-the rest, and Crammer & Singer method), cross validation for model selection,
    probability estimates (logistic regression only) or weights for unbalanced data.
    The estimation of the models is particularly fast as compared to other libraries.
  license_family: GPL2
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Encoding: UTF-8
# Package: LiblineaR
# Title: Linear Predictive Models Based on the 'LIBLINEAR' C/C++ Library
# Version: 2.10-8
# Date: 2017-02-13
# Author: Thibault Helleputte <thibault.helleputte@dnalytics.com>; Pierre Gramme <pierre.gramme@dnalytics.com>; Jerome Paul <jerome.paul@dnalytics.com>
# Maintainer: Thibault Helleputte <thibault.helleputte@dnalytics.com>
# Description: A wrapper around the 'LIBLINEAR' C/C++ library for machine learning (available at <http://www.csie.ntu.edu.tw/~cjlin/liblinear>). 'LIBLINEAR' is a simple library for solving large-scale regularized linear classification and regression. It currently supports L2-regularized classification (such as logistic regression, L2-loss linear SVM and L1-loss linear SVM) as well as L1-regularized classification (such as L2-loss linear SVM and logistic regression) and L2-regularized support vector regression (with L1- or L2-loss). The main features of LiblineaR include multi-class classification (one-vs-the rest, and Crammer & Singer method), cross validation for model selection, probability estimates (logistic regression only) or weights for unbalanced data. The estimation of the models is particularly fast as compared to other libraries.
# License: GPL-2
# LazyLoad: yes
# Suggests: SparseM
# URL: http://dnalytics.com/liblinear/
# RoxygenNote: 5.0.1
# NeedsCompilation: yes
# Packaged: 2017-02-13 09:17:41 UTC; jey
# Repository: CRAN
# Date/Publication: 2017-02-13 12:58:40

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
