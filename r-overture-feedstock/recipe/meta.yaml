{% set version = '0.4-0' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-overture
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/overture_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/overture/overture_{{ version }}.tar.gz
  sha256: 9f0dde6e18e42c7f2c0ed91b5b7c10a60fbeb1661fc3e30207eb2a6067e926e8

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: testthat, mockery, covr
requirements:
  build:
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-bigmemory

  run:
    - r-base
    - r-bigmemory

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('overture')"           # [not win]
    - "\"%R%\" -e \"library('overture')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/kurtis-s/overture
  license: LGPL-3
  summary: 'Simplifies MCMC setup by automatically looping through sampling functions and saving
    the results.  Reduces the memory footprint of running MCMC and saves samples to
    disk as the chain runs.  Allows samples from the chain to be analyzed while the
    MCMC is still running.  Provides functions for commonly performed operations such
    as calculating Metropolis acceptance ratios and creating adaptive Metropolis samplers.  References:
    Roberts and Rosenthal (2009) <doi:10.1198/jcgs.2009.06134>.'
  license_family: LGPL
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/LGPL-3'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: overture
# Type: Package
# Title: Tools for Writing MCMC
# Version: 0.4-0
# Authors@R: person("Kurtis", "Shuler", role=c("aut", "cre"), email="kurtis.s.1122+CRAN@gmail.com")
# Description: Simplifies MCMC setup by automatically looping through sampling functions and saving the results.  Reduces the memory footprint of running MCMC and saves samples to disk as the chain runs.  Allows samples from the chain to be analyzed while the MCMC is still running.  Provides functions for commonly performed operations such as calculating Metropolis acceptance ratios and creating adaptive Metropolis samplers.  References: Roberts and Rosenthal (2009) <doi:10.1198/jcgs.2009.06134>.
# License: LGPL-3
# URL: https://github.com/kurtis-s/overture
# BugReports: https://github.com/kurtis-s/overture/issues
# Encoding: UTF-8
# LazyData: true
# RoxygenNote: 6.1.0
# Suggests: testthat, mockery, covr
# Imports: bigmemory
# NeedsCompilation: no
# Packaged: 2019-08-10 04:39:48 UTC; kws
# Author: Kurtis Shuler [aut, cre]
# Maintainer: Kurtis Shuler <kurtis.s.1122+CRAN@gmail.com>
# Repository: CRAN
# Date/Publication: 2019-08-10 22:30:02 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
