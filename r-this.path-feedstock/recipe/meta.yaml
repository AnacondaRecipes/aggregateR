{% set version = '2.2.0' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-this.path
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/this.path_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/this.path/this.path_{{ version }}.tar.gz
  sha256: 166e881d0612802406aa239e83187ca55badc124d95af0a3fa89dc38efb7b5b6

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: utils, microbenchmark
requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}sed               # [win]
    - {{ posix }}grep              # [win]
    - {{ posix }}autoconf
    - {{ posix }}automake          # [not win]
    - {{ posix }}automake-wrapper  # [win]
    - {{ posix }}pkg-config
    - {{ posix }}make
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]

  host:
    - r-base

  run:
    - r-base
    - {{native}}gcc-libs         # [win]

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('this.path')"           # [not win]
    - "\"%R%\" -e \"library('this.path')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/ArcadeAntics/this.path
  license: MIT
  summary: 'Determine the path of the executing script. Compatible with a few popular GUIs: ''Rgui'',
    ''RStudio'', ''VSCode'', ''Jupyter'', and ''Rscript'' (shell). Compatible with several
    functions and packages: ''source()'', ''sys.source()'', ''debugSource()'' in ''RStudio'',
    ''compiler::loadcmp()'', ''box::use()'', ''knitr::knit()'', ''plumber::plumb()'',
    ''shiny::runApp()'', ''package:targets'', and ''testthat::source_file()''.'
  license_family: MIT
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/MIT'
    - LICENSE

# The original CRAN metadata for this package was:

# Package: this.path
# Version: 2.2.0
# Date: 2023-10-29
# License: MIT + file LICENSE
# Title: Get Executing Script's Path
# Description: Determine the path of the executing script. Compatible with a few popular GUIs: 'Rgui', 'RStudio', 'VSCode', 'Jupyter', and 'Rscript' (shell). Compatible with several functions and packages: 'source()', 'sys.source()', 'debugSource()' in 'RStudio', 'compiler::loadcmp()', 'box::use()', 'knitr::knit()', 'plumber::plumb()', 'shiny::runApp()', 'package:targets', and 'testthat::source_file()'.
# Author: Iris Simmons
# Maintainer: Iris Simmons <ikwsimmo@gmail.com>
# Suggests: utils, microbenchmark
# Enhances: compiler, box, IRkernel, jsonlite, knitr, plumber, rprojroot, rstudioapi, shiny, targets, testthat
# URL: https://github.com/ArcadeAntics/this.path
# BugReports: https://github.com/ArcadeAntics/this.path/issues
# ByteCompile: TRUE
# Biarch: TRUE
# Type: Package
# NeedsCompilation: yes
# Packaged: 2023-10-29 04:22:26 UTC; andre
# Repository: CRAN
# Date/Publication: 2023-10-29 05:10:02 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
