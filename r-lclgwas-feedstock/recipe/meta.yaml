{% set version = '1.0.3' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-lclgwas
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/lclGWAS_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/lclGWAS/lclGWAS_{{ version }}.tar.gz
  sha256: b8eee0bbd18357d14858ac86420aae14ff0f1c7158b7c1a0493b47bfb18c660d

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: knitr
requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{posix}}filesystem        # [win]
    - {{posix}}make
    - {{posix}}sed               # [win]
    - {{posix}}coreutils         # [win]
    - {{posix}}zip               # [win]

  host:
    - r-base
    - r-bh
    - r-rcpp >=0.12.4

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-bh
    - r-rcpp >=0.12.4

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('lclGWAS')"           # [not win]
    - "\"%R%\" -e \"library('lclGWAS')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=lclGWAS
  license: GPL-2
  summary: 'The core of this ''Rcpp'' based package is several functions to estimate the baseline
    hazard, frailty variance, and fixed effect parameter for a discrete-time shared
    frailty model with random effects. The functions are designed to analyze grouped
    time-to-event data accounting for family structure of related individuals (i.e.,
    trios). The core functions include two processes: (1) evaluate the multivariable
    integration to compute the exact proportional hazards model based likelihood and
    (2) estimate the desired parameters using maximum likelihood estimation. The integration
    is evaluated by the ''Cuhre'' algorithm from the ''Cuba'' library (Hahn, T., Cuba-a
    library for multidimensional numerical integration, Comput. Phys. Commun. 168, 2005,
    78-95 <doi:10.1016/j.cpc.2005.01.010>), and the source files of the ''Cuhre'' function
    are included in this package. The maximization process is carried out using Brent''s
    algorithm, with the ''C++'' code file from John Burkardt and John Denker (Brent,
    R.,Algorithms for Minimization without Derivatives, Dover, 2002, ISBN 0-486-41998-3).'

  license_family: GPL2
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: lclGWAS
# Type: Package
# Title: Efficient Estimation of Discrete-Time Multivariate Frailty Model Using Exact Likelihood Function for Grouped Survival Data
# Version: 1.0.3
# Date: 2017-02-20
# Author: Jiaxing Lin, Alexander Sibley, Tracy Truong, Nancy Cox, Eileen Dolan, Yu Jiang, Janice McCarthy, Andrew Allen, Kouros Owzar, Zhiguo Li
# Maintainer: Jiaxing Lin <jiaxing.lin@duke.edu>
# Description: The core of this 'Rcpp' based package is several functions to estimate the baseline hazard, frailty variance, and fixed effect parameter for a discrete-time shared frailty model with random effects. The functions are designed to analyze grouped time-to-event data accounting for family structure of related individuals (i.e., trios). The core functions include two processes: (1) evaluate the multivariable integration to compute the exact proportional hazards model based likelihood and (2) estimate the desired parameters using maximum likelihood estimation. The integration is evaluated by the 'Cuhre' algorithm from the 'Cuba' library (Hahn, T., Cuba-a library for multidimensional numerical integration, Comput. Phys. Commun. 168, 2005, 78-95 <doi:10.1016/j.cpc.2005.01.010>), and the source files of the 'Cuhre' function are included in this package. The maximization process is carried out using Brent's algorithm, with the 'C++' code file from John Burkardt and John Denker (Brent, R.,Algorithms for Minimization without Derivatives, Dover, 2002, ISBN 0-486-41998-3).
# License: GPL (>= 2)
# Imports: Rcpp (>= 0.12.4)
# LinkingTo: Rcpp, BH
# Suggests: knitr
# VignetteBuilder: knitr
# BuildVignettes: yes
# NeedsCompilation: yes
# Packaged: 2017-02-20 21:11:45 UTC; jl354
# Repository: CRAN
# Date/Publication: 2017-02-21 00:03:26

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
