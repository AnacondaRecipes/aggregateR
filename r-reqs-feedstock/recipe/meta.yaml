{% set version = '0.8-12' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-reqs
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/REQS_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/REQS/REQS_{{ version }}.tar.gz
  sha256: 6aa2972559d030e0576c67d4fba26e272470b61449d65904710f41c420a62f11

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{posix}}zip               # [win]

  host:
    - r-base
    - r-gtools

  run:
    - r-base
    - r-gtools

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('REQS')"           # [not win]
    - "\"%R%\" -e \"library('REQS')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: http://www.mvsoft.com
  license: GPL-3
  summary: 'This package contains the function run.eqs() which calls an EQS script file, executes
    the EQS estimation, and, finally, imports the results as R objects. These two steps
    can be performed separately: call.eqs() calls and executes EQS, whereas read.eqs()
    imports existing EQS outputs as objects into R. It requires EQS 6.2 (build 98 or
    higher).'

  license_family: GPL3
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-3'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: REQS
# Type: Package
# Title: R/EQS Interface
# Version: 0.8-12
# Date: 2011-04-05
# Author: Patrick Mair, Eric Wu
# Maintainer: Eric Wu <ericwu@mvsoft.com>
# Description: This package contains the function run.eqs() which calls an EQS script file, executes the EQS estimation, and, finally, imports the results as R objects. These two steps can be performed separately: call.eqs() calls and executes EQS, whereas read.eqs() imports existing EQS outputs as objects into R. It requires EQS 6.2 (build 98 or higher).
# License: GPL
# URL: http://www.mvsoft.com
# LazyLoad: yes
# Depends: gtools
# Repository: CRAN
# Date/Publication: 2012-10-29 08:57:30
# Packaged: 2012-10-29 08:57:30 UTC; ripley
# NeedsCompilation: no

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
