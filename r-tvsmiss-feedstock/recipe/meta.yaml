{% set version = '0.1.1' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-tvsmiss
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/TVsMiss_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/TVsMiss/TVsMiss_{{ version }}.tar.gz
  sha256: 1354ea25b152f5f155390f7d250d0e0fe232cbf3f545081c73555caf07e67ad3

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{posix}}filesystem        # [win]
    - {{posix}}make
    - {{posix}}sed               # [win]
    - {{posix}}coreutils         # [win]
    - {{posix}}zip               # [win]

  host:
    - r-base
    - r-rcpp
    - r-glmnet

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-rcpp
    - r-glmnet

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('TVsMiss')"           # [not win]
    - "\"%R%\" -e \"library('TVsMiss')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/yang0117/TVsMiss
  license: GPL-2
  summary: Use a regularization likelihood method to achieve variable selection purpose. Likelihood
    can be worked with penalty lasso, smoothly clipped absolute deviations (SCAD), and
    minimax concave penalty (MCP).  Tuning parameter selection techniques include cross
    validation (CV), Bayesian information criterion (BIC) (low and high), stability
    of variable selection (sVS), stability of BIC (sBIC), and stability of estimation
    (sEST). More details see Jiwei Zhao, Yang Yang, and Yang Ning (2018) <arXiv:1703.06379>
    "Penalized pairwise pseudo likelihood for variable selection with nonignorable missing
    data." Statistica Sinica.
  license_family: GPL2
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: TVsMiss
# Type: Package
# Title: Variable Selection for Missing Data
# Version: 0.1.1
# Date: 2018-04-05
# Author: Jiwei Zhao, Yang Yang, and Ning Yang
# Maintainer: Yang Yang <yyang39@buffalo.edu>
# Description: Use a regularization likelihood method to achieve variable selection purpose. Likelihood can be worked with penalty lasso, smoothly clipped absolute deviations (SCAD), and minimax concave penalty (MCP).  Tuning parameter selection techniques include cross validation (CV), Bayesian information criterion (BIC) (low and high), stability of variable selection (sVS), stability of BIC (sBIC), and stability of estimation (sEST). More details see Jiwei Zhao, Yang Yang, and Yang Ning (2018) <arXiv:1703.06379> "Penalized pairwise pseudo likelihood for variable selection with nonignorable missing data." Statistica Sinica.
# License: GPL (>= 2)
# Imports: glmnet, Rcpp
# NeedsCompilation: yes
# Encoding: UTF-8
# LazyData: true
# RoxygenNote: 6.0.1
# LinkingTo: Rcpp
# URL: https://github.com/yang0117/TVsMiss
# BugReports: https://github.com/yang0117/TVsMiss/issues
# Packaged: 2018-04-05 04:37:15 UTC; yangyang
# Repository: CRAN
# Date/Publication: 2018-04-05 05:16:08 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
