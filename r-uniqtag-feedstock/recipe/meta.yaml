{% set version = '1.0.1' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-uniqtag
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/uniqtag_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/uniqtag/uniqtag_{{ version }}.tar.gz
  sha256: 25ba0731ff61857ea4c1d06c99018ed3b0d1121689b6269b79776371092fad6e

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: testthat
requirements:
  build:
    - {{ posix }}zip               # [win]

  host:
    - r-base

  run:
    - r-base

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('uniqtag')"           # [not win]
    - "\"%R%\" -e \"library('uniqtag')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/sjackman/uniqtag
  license: MIT
  summary: For each string in a set of strings, determine a unique tag that is a substring of
    fixed size k unique to that string, if it has one. If no such unique substring exists,
    the least frequent substring is used. If multiple unique substrings exist, the lexicographically
    smallest substring is used. This lexicographically smallest substring of size k
    is called the "UniqTag" of that string.
  license_family: MIT
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/MIT'
    - LICENSE

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Type: Package
# Package: uniqtag
# Title: Abbreviate Strings to Short, Unique Identifiers
# Version: 1.0.1
# Authors@R: person("Shaun", "Jackman", email = "sjackman@gmail.com", role = c("aut", "cph", "cre"))
# Description: For each string in a set of strings, determine a unique tag that is a substring of fixed size k unique to that string, if it has one. If no such unique substring exists, the least frequent substring is used. If multiple unique substrings exist, the lexicographically smallest substring is used. This lexicographically smallest substring of size k is called the "UniqTag" of that string.
# License: MIT + file LICENSE
# Encoding: UTF-8
# RoxygenNote: 7.1.2
# URL: https://github.com/sjackman/uniqtag
# BugReports: https://github.com/sjackman/uniqtag/issues
# Suggests: testthat
# NeedsCompilation: no
# Packaged: 2022-05-10 21:34:38 UTC; shaun.jackman
# Author: Shaun Jackman [aut, cph, cre]
# Maintainer: Shaun Jackman <sjackman@gmail.com>
# Repository: CRAN
# Date/Publication: 2022-06-10 06:10:02 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
