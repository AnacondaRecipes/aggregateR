{% set version = '0.1.0' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-hypercube
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/hypercube_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/hypercube/hypercube_{{ version }}.tar.gz
  sha256: ae623e1942a15db4ea3acd4e27202df301f7e31164ca2caa8cbc9a61b4636347

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{posix}}zip               # [win]

  host:
    - r-base
    - r-stringr

  run:
    - r-base
    - r-stringr

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('hypercube')"           # [not win]
    - "\"%R%\" -e \"library('hypercube')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=hypercube
  license: GPL-3
  summary: 'Provides methods for organizing data in a hypercube (i.e. a multi-dimensional cube).
    Cubes are generated from molten data frames. Each cube can be manipulated with five
    operations: rotation (changeDimensionOrder()), dicing and slicing (add.selection(),
    remove.selection()), drilling down (add.aggregation()), and rolling up (remove.aggregation()).'

  license_family: GPL3
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-3'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: hypercube
# Type: Package
# Title: Organizing Data in a Hypercube
# Version: 0.1.0
# Author: Michael Scholz
# Maintainer: Michael Scholz <michael.scholz@uni-passau.de>
# Description: Provides methods for organizing data in a hypercube (i.e. a multi-dimensional cube). Cubes are generated from molten data frames. Each cube can be manipulated with five operations: rotation (changeDimensionOrder()), dicing and slicing (add.selection(), remove.selection()), drilling down (add.aggregation()), and rolling up (remove.aggregation()).
# License: GPL-3
# Encoding: UTF-8
# Depends: R (>= 3.3.0), stats
# Imports: methods, stringr
# LazyData: TRUE
# RoxygenNote: 6.0.1
# NeedsCompilation: no
# Packaged: 2017-12-15 08:17:24 UTC; micha
# Repository: CRAN
# Date/Publication: 2017-12-15 09:58:18 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
