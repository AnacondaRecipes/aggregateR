{% set version = '0.3.6' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-rcppgsl
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/RcppGSL_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/RcppGSL/RcppGSL_{{ version }}.tar.gz
  sha256: 35e8a8e3c0837df58b7f710d7b4c38a9b63d2522cb3e35ca6a499c30f055ed9a

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: RUnit, inline, knitr, rmarkdown, pinp
requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{posix}}filesystem        # [win]
    - {{posix}}sed               # [win]
    - {{posix}}grep              # [win]
    - {{posix}}autoconf
    - {{posix}}automake          # [not win]
    - {{posix}}automake-wrapper  # [win]
    - {{posix}}pkg-config
    - {{posix}}make
    - {{posix}}coreutils         # [win]
    - {{posix}}zip               # [win]

  host:
    - r-base
    - r-rcpp >=0.11.0

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-rcpp >=0.11.0

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('RcppGSL')"           # [not win]
    - "\"%R%\" -e \"library('RcppGSL')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=RcppGSL
  license: GPL-2
  summary: '''Rcpp'' integration for ''GNU GSL'' vectors and matrices The ''GNU Scientific Library''
    (or ''GSL'') is a collection of numerical routines for scientific computing. It
    is particularly useful for C and C++ programs as it provides a standard C interface
    to a wide range of mathematical routines. There are over 1000 functions in total
    with an extensive test suite. The ''RcppGSL'' package provides an easy-to-use interface
    between ''GSL'' data structures and R using concepts from ''Rcpp'' which is itself
    a package that eases the interfaces between R and C++. This package also serves
    as a prime example of how to build a package that uses ''Rcpp'' to connect to another
    third-party library. The ''autoconf'' script, ''inline'' plugin and example package
    can all be used as a stanza to  write a similar package against another library.'

  license_family: GPL2
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: RcppGSL
# Type: Package
# Title: 'Rcpp' Integration for 'GNU GSL' Vectors and Matrices
# Version: 0.3.6
# Date: 2018-06-10
# Author: Dirk Eddelbuettel and Romain Francois
# Maintainer: Dirk Eddelbuettel <edd@debian.org>
# Description: 'Rcpp' integration for 'GNU GSL' vectors and matrices The 'GNU Scientific Library' (or 'GSL') is a collection of numerical routines for scientific computing. It is particularly useful for C and C++ programs as it provides a standard C interface to a wide range of mathematical routines. There are over 1000 functions in total with an extensive test suite. The 'RcppGSL' package provides an easy-to-use interface between 'GSL' data structures and R using concepts from 'Rcpp' which is itself a package that eases the interfaces between R and C++. This package also serves as a prime example of how to build a package that uses 'Rcpp' to connect to another third-party library. The 'autoconf' script, 'inline' plugin and example package can all be used as a stanza to  write a similar package against another library.
# License: GPL (>= 2)
# LazyLoad: yes
# LinkingTo: Rcpp
# Imports: Rcpp (>= 0.11.0), stats
# Suggests: RUnit, inline, knitr, rmarkdown, pinp
# SystemRequirements: GNU GSL
# VignetteBuilder: knitr
# NeedsCompilation: yes
# Packaged: 2018-06-10 15:52:16.031231 UTC; edd
# Repository: CRAN
# Date/Publication: 2018-06-10 16:43:08 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
