{% set version = '2.2.4' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-skat
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/SKAT_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/SKAT/SKAT_{{ version }}.tar.gz
  sha256: 2b349896560ad18c3428e245fc25b17e9c2946676044fa56025ddf9c87ff08bf

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}make
    - {{ posix }}sed               # [win]
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-matrix
    - r-rspectra
    - r-spatest

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-matrix
    - r-rspectra
    - r-spatest

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('SKAT')"           # [not win]
    - "\"%R%\" -e \"library('SKAT')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=SKAT
  license: GPL-2
  summary: Functions for kernel-regression-based association tests including Burden test, SKAT
    and SKAT-O. These methods aggregate individual SNP score statistics in a SNP set
    and efficiently compute SNP-set level p-values. Methods  available in this package
    include SKAT described in Micheal Wu, Seunggeun Lee et al. (2011) <doi:10.1016/j.ajhg.2011.05.029>,
    SKAT-O in Seunggeun Lee et al. (2012) <doi:10.1093/biostatistics/kxs014>, combined
    test of rare and common variants in Iuliana Ionita-Laza and Seunggeun Lee et al.
    (2013) <doi:10.1016/j.ajhg.2013.04.015>, efficient resampling for binary traits
    in Seunggeun Lee et al. (2016) <doi:10.1093/biostatistics/kxv033>, and robust test
    for binary traits in Zhangchen Zhao et al. (2020) <doi:10.1016/j.ajhg.2019.11.012>.
  license_family: GPL2
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: SKAT
# Type: Package
# Title: SNP-Set (Sequence) Kernel Association Test
# Version: 2.2.4
# Date: 2022-03-29
# Authors@R: c(person("Seunggeun (Shawn)", "Lee", role = c("aut", "cre", "cph"), email = "lee7801@snu.ac.kr"), person("Zhangchen", "Zhao", role = c("aut")), person("Larisa", "Miropolsky", role = c("aut")), person("Michael", "Wu", role = c("aut")))
# Maintainer: Seunggeun (Shawn) Lee <lee7801@snu.ac.kr>
# Description: Functions for kernel-regression-based association tests including Burden test, SKAT and SKAT-O. These methods aggregate individual SNP score statistics in a SNP set and efficiently compute SNP-set level p-values. Methods  available in this package include SKAT described in Micheal Wu, Seunggeun Lee et al. (2011) <doi:10.1016/j.ajhg.2011.05.029>, SKAT-O in Seunggeun Lee et al. (2012) <doi:10.1093/biostatistics/kxs014>, combined test of rare and common variants in Iuliana Ionita-Laza and Seunggeun Lee et al. (2013) <doi:10.1016/j.ajhg.2013.04.015>, efficient resampling for binary traits in Seunggeun Lee et al. (2016) <doi:10.1093/biostatistics/kxv033>, and robust test for binary traits in Zhangchen Zhao et al. (2020) <doi:10.1016/j.ajhg.2019.11.012>.
# License: GPL (>= 2)
# Depends: R (>= 2.13.0), Matrix, SPAtest, RSpectra
# LazyData: yes
# NeedsCompilation: yes
# Packaged: 2022-03-29 08:45:25 UTC; lee7801
# Author: Seunggeun (Shawn) Lee [aut, cre, cph], Zhangchen Zhao [aut], Larisa Miropolsky [aut], Michael Wu [aut]
# Repository: CRAN
# Date/Publication: 2022-03-29 12:50:07 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
