{% set version = '0.1' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-here
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/here_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/here/here_{{ version }}.tar.gz
  sha256: 5ba5e7d9002fc85bc633706b7ee486505c12b0bf5ecb177028bec6db706f65ed

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{posix}}zip               # [win]

  host:
    - r-base
    - r-rprojroot >=1.2

  run:
    - r-base
    - r-rprojroot >=1.2

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('here')"           # [not win]
    - "\"%R%\" -e \"library('here')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/krlmlr/here, http://krlmlr.github.io/here
  license: GPL-3
  summary: Constructs paths to your project's files. The 'here()' function uses a reasonable
    heuristics to find your project's files, based on the current working directory
    at the time when the package is loaded. Use it as a drop-in replacement for 'file.path()',
    it will always locate the files relative to your project root.
  license_family: GPL3
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-3'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: here
# Title: A Simpler Way to Find Your Files
# Version: 0.1
# Authors@R: person("Kirill", "Muller", role = c("aut", "cre"), email = "krlmlr+r@mailbox.org")
# Description: Constructs paths to your project's files. The 'here()' function uses a reasonable heuristics to find your project's files, based on the current working directory at the time when the package is loaded. Use it as a drop-in replacement for 'file.path()', it will always locate the files relative to your project root.
# Imports: rprojroot (>= 1.2)
# License: GPL-3
# Encoding: UTF-8
# LazyData: true
# Date: 2017-05-27
# URL: https://github.com/krlmlr/here, http://krlmlr.github.io/here
# BugReports: https://github.com/krlmlr/here/issues
# RoxygenNote: 6.0.1
# NeedsCompilation: no
# Packaged: 2017-05-27 20:53:11 UTC; muelleki
# Author: Kirill Muller [aut, cre]
# Maintainer: Kirill Muller <krlmlr+r@mailbox.org>
# Repository: CRAN
# Date/Publication: 2017-05-28 06:13:04 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
