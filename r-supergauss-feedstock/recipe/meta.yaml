{% set version = '1.0.1' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-supergauss
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/SuperGauss_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/SuperGauss/SuperGauss_{{ version }}.tar.gz
  sha256: 8b14b5deed7f89bdc1f83b459421ef0a2a68eeb3334265de41304ff89442735e

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: knitr, rmarkdown, testthat, mvtnorm, numDeriv
requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{posix}}filesystem        # [win]
    - {{posix}}sed               # [win]
    - {{posix}}grep              # [win]
    - {{posix}}autoconf
    - {{posix}}automake          # [not win]
    - {{posix}}automake-wrapper  # [win]
    - {{posix}}pkg-config
    - {{posix}}make
    - {{posix}}coreutils         # [win]
    - {{posix}}zip               # [win]

  host:
    - r-base
    - r-rcpp >=0.12.7
    - r-rcppeigen
    - r-fftw

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-rcpp >=0.12.7
    - r-rcppeigen
    - r-fftw

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('SuperGauss')"           # [not win]
    - "\"%R%\" -e \"library('SuperGauss')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=SuperGauss
  license: GPL-3
  summary: Likelihood evaluations for stationary Gaussian time series are typically obtained
    via the Durbin-Levinson algorithm, which scales as O(n^2) in the number of time
    series observations.  This package provides a "superfast" O(n log^2 n) algorithm
    written in C++, crossing over with Durbin-Levinson around n = 300.  Efficient implementations
    of the score and Hessian functions are also provided, leading to superfast versions
    of inference algorithms such as Newton-Raphson and Hamiltonian Monte Carlo.  The
    C++ code provides a Toeplitz matrix class packaged as a header-only library, to
    simplify low-level usage in other packages and outside of R.
  license_family: GPL3
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-3'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: SuperGauss
# Type: Package
# Title: Superfast Likelihood Inference for Stationary Gaussian Time Series
# Version: 1.0.1
# Date: 2019-03-12
# Authors@R: c(person("Yun", "Ling", role = "aut"), person("Martin", "Lysy", email = "mlysy@uwaterloo.ca", role = c("aut", "cre")))
# Description: Likelihood evaluations for stationary Gaussian time series are typically obtained via the Durbin-Levinson algorithm, which scales as O(n^2) in the number of time series observations.  This package provides a "superfast" O(n log^2 n) algorithm written in C++, crossing over with Durbin-Levinson around n = 300.  Efficient implementations of the score and Hessian functions are also provided, leading to superfast versions of inference algorithms such as Newton-Raphson and Hamiltonian Monte Carlo.  The C++ code provides a Toeplitz matrix class packaged as a header-only library, to simplify low-level usage in other packages and outside of R.
# License: GPL-3
# Depends: R (>= 3.0.0)
# Imports: stats, methods, Rcpp (>= 0.12.7), fftw
# LinkingTo: Rcpp, RcppEigen
# Suggests: knitr, rmarkdown, testthat, mvtnorm, numDeriv
# VignetteBuilder: knitr
# RoxygenNote: 6.1.1
# Encoding: UTF-8
# SystemRequirements: fftw3 (>= 3.1.2)
# NeedsCompilation: yes
# Packaged: 2019-03-12 18:18:10 UTC; mlysy
# Author: Yun Ling [aut], Martin Lysy [aut, cre]
# Maintainer: Martin Lysy <mlysy@uwaterloo.ca>
# Repository: CRAN
# Date/Publication: 2019-03-12 22:36:08 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
