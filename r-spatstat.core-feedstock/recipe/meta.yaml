{% set version = '2.4-4' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-spatstat.core
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/spatstat.core_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/spatstat.core/spatstat.core_{{ version }}.tar.gz
  sha256: e38c39efe8b14d6e8fdbee8dd870b90c52f78ea571ab7988fd3685f48347d13b

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: sm, maptools (>= 0.9-9), gsl, locfit, spatial, RandomFields (>= 3.1.24.1), RandomFieldsUtils(>= 0.3.3.1), fftwtools (>= 0.9-8), nleqslv, spatstat.linnet (>= 2.0-0), spatstat (>= 2.3-3)
requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}make
    - {{ posix }}sed               # [win]
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-matrix
    - r-abind
    - r-goftest >=1.2_2
    - r-mgcv
    - r-nlme
    - r-rpart
    - r-spatstat.data >=2.1_0
    - r-spatstat.geom >=2.4_0
    - r-spatstat.random >=2.2_0
    - r-spatstat.sparse >=2.0_0
    - r-spatstat.utils >=2.3_1
    - r-tensor

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-matrix
    - r-abind
    - r-goftest >=1.2_2
    - r-mgcv
    - r-nlme
    - r-rpart
    - r-spatstat.data >=2.1_0
    - r-spatstat.geom >=2.4_0
    - r-spatstat.random >=2.2_0
    - r-spatstat.sparse >=2.0_0
    - r-spatstat.utils >=2.3_1
    - r-tensor

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('spatstat.core')"           # [not win]
    - "\"%R%\" -e \"library('spatstat.core')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: http://spatstat.org/
  license: GPL-2
  summary: Functionality for data analysis and modelling of spatial data, mainly spatial point
    patterns, in the 'spatstat' family of packages. (Excludes analysis of spatial data
    on a linear network, which is covered by the separate package 'spatstat.linnet'.)
    Exploratory methods include quadrat counts, K-functions and their simulation envelopes,
    nearest neighbour distance and empty space statistics, Fry plots, pair correlation
    function, kernel smoothed intensity, relative risk estimation with cross-validated
    bandwidth selection, mark correlation functions, segregation indices, mark dependence
    diagnostics, and kernel estimates of covariate effects. Formal hypothesis tests
    of random pattern (chi-squared, Kolmogorov-Smirnov, Monte Carlo, Diggle-Cressie-Loosmore-Ford,
    Dao-Genton, two-stage Monte Carlo) and tests for covariate effects (Cox-Berman-Waller-Lawson,
    Kolmogorov-Smirnov, ANOVA) are also supported. Parametric models can be fitted to
    point pattern data using the functions ppm(), kppm(), slrm(), dppm() similar to
    glm(). Types of models include Poisson, Gibbs and Cox point processes, Neyman-Scott
    cluster processes, and determinantal point processes. Models may involve dependence
    on covariates, inter-point interaction, cluster formation and dependence on marks.
    Models are fitted by maximum likelihood, logistic regression, minimum contrast,
    and composite likelihood methods. A model can be fitted to a list of point patterns
    (replicated point pattern data) using the function mppm(). The model can include
    random effects and fixed effects depending on the experimental design, in addition
    to all the features listed above. Fitted point process models can be simulated,
    automatically. Formal hypothesis tests of a fitted model are supported (likelihood
    ratio test, analysis of deviance, Monte Carlo tests) along with basic tools for
    model selection (stepwise(), AIC()) and variable selection (sdr). Tools for validating
    the fitted model include simulation envelopes, residuals, residual plots and Q-Q
    plots, leverage and influence diagnostics, partial residuals, and added variable
    plots.
  license_family: GPL2
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

# The original CRAN metadata for this package was:

# Package: spatstat.core
# Version: 2.4-4
# Date: 2022-05-17
# Title: Core Functionality of the 'spatstat' Family
# Authors@R: c(person("Adrian", "Baddeley", role = c("aut", "cre"), email = "Adrian.Baddeley@curtin.edu.au", comment = c(ORCID="0000-0001-9499-8382")), person("Rolf", "Turner", role = "aut", email="r.turner@auckland.ac.nz", comment=c(ORCID="0000-0001-5521-5218")), person("Ege",   "Rubak", role = "aut", email = "rubak@math.aau.dk", comment=c(ORCID="0000-0002-6675-533X")), person("Kasper", "Klitgaard Berthelsen", role = "ctb"), person("Achmad", "Choiruddin", role = "ctb"), person("Jean-Francois", "Coeurjolly", role = "ctb"), person("Ottmar", "Cronie", role = "ctb"), person("Tilman", "Davies", role = "ctb"), person("Chiara", "Fend", role = "ctb"), person("Julian", "Gilbey", role = "ctb"), person("Yongtao", "Guan", role = "ctb"), person("Ute", "Hahn", role = "ctb"), person("Kassel", "Hingee", role = "ctb"), person("Abdollah", "Jalilian", role = "ctb"), person("Frederic", "Lavancier", role = "ctb"), person("Marie-Colette", "van Lieshout", role = "ctb"), person("Greg", "McSwiggan", role = "ctb"), person("Tuomas", "Rajala", role = "ctb"), person("Suman", "Rakshit", role = "ctb"), person("Dominic", "Schuhmacher", role = "ctb"), person("Rasmus", "Plenge Waagepetersen", role = "ctb"), person("Hangsheng", "Wang", role = "ctb"))
# Maintainer: Adrian Baddeley <Adrian.Baddeley@curtin.edu.au>
# Depends: R (>= 3.5.0), spatstat.data (>= 2.1-0), spatstat.geom (>= 2.4-0), spatstat.random (>= 2.2-0), stats, graphics, grDevices, utils, methods, nlme, rpart
# Imports: spatstat.utils (>= 2.3-1), spatstat.sparse (>= 2.0-0), mgcv, Matrix, abind, tensor, goftest (>= 1.2-2)
# Suggests: sm, maptools (>= 0.9-9), gsl, locfit, spatial, RandomFields (>= 3.1.24.1), RandomFieldsUtils(>= 0.3.3.1), fftwtools (>= 0.9-8), nleqslv, spatstat.linnet (>= 2.0-0), spatstat (>= 2.3-3)
# Description: Functionality for data analysis and modelling of spatial data, mainly spatial point patterns, in the 'spatstat' family of packages. (Excludes analysis of spatial data on a linear network, which is covered by the separate package 'spatstat.linnet'.) Exploratory methods include quadrat counts, K-functions and their simulation envelopes, nearest neighbour distance and empty space statistics, Fry plots, pair correlation function, kernel smoothed intensity, relative risk estimation with cross-validated bandwidth selection, mark correlation functions, segregation indices, mark dependence diagnostics, and kernel estimates of covariate effects. Formal hypothesis tests of random pattern (chi-squared, Kolmogorov-Smirnov, Monte Carlo, Diggle-Cressie-Loosmore-Ford, Dao-Genton, two-stage Monte Carlo) and tests for covariate effects (Cox-Berman-Waller-Lawson, Kolmogorov-Smirnov, ANOVA) are also supported. Parametric models can be fitted to point pattern data using the functions ppm(), kppm(), slrm(), dppm() similar to glm(). Types of models include Poisson, Gibbs and Cox point processes, Neyman-Scott cluster processes, and determinantal point processes. Models may involve dependence on covariates, inter-point interaction, cluster formation and dependence on marks. Models are fitted by maximum likelihood, logistic regression, minimum contrast, and composite likelihood methods. A model can be fitted to a list of point patterns (replicated point pattern data) using the function mppm(). The model can include random effects and fixed effects depending on the experimental design, in addition to all the features listed above. Fitted point process models can be simulated, automatically. Formal hypothesis tests of a fitted model are supported (likelihood ratio test, analysis of deviance, Monte Carlo tests) along with basic tools for model selection (stepwise(), AIC()) and variable selection (sdr). Tools for validating the fitted model include simulation envelopes, residuals, residual plots and Q-Q plots, leverage and influence diagnostics, partial residuals, and added variable plots.
# License: GPL (>= 2)
# URL: http://spatstat.org/
# NeedsCompilation: yes
# ByteCompile: true
# BugReports: https://github.com/spatstat/spatstat.core/issues
# Packaged: 2022-05-17 08:39:32 UTC; adrian
# Author: Adrian Baddeley [aut, cre] (<https://orcid.org/0000-0001-9499-8382>), Rolf Turner [aut] (<https://orcid.org/0000-0001-5521-5218>), Ege Rubak [aut] (<https://orcid.org/0000-0002-6675-533X>), Kasper Klitgaard Berthelsen [ctb], Achmad Choiruddin [ctb], Jean-Francois Coeurjolly [ctb], Ottmar Cronie [ctb], Tilman Davies [ctb], Chiara Fend [ctb], Julian Gilbey [ctb], Yongtao Guan [ctb], Ute Hahn [ctb], Kassel Hingee [ctb], Abdollah Jalilian [ctb], Frederic Lavancier [ctb], Marie-Colette van Lieshout [ctb], Greg McSwiggan [ctb], Tuomas Rajala [ctb], Suman Rakshit [ctb], Dominic Schuhmacher [ctb], Rasmus Plenge Waagepetersen [ctb], Hangsheng Wang [ctb]
# Repository: CRAN
# Date/Publication: 2022-05-18 07:30:02 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
