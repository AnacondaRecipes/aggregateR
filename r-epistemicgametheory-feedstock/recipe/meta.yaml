{% set version = '0.1.2' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-epistemicgametheory
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/EpistemicGameTheory_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/EpistemicGameTheory/EpistemicGameTheory_{{ version }}.tar.gz
  sha256: 15f9e50c81e62520562e32affdf830fcd052e41563c561362e886b0a77b64f2c

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: testthat
requirements:
  build:
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-lpsolve

  run:
    - r-base
    - r-lpsolve

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('EpistemicGameTheory')"           # [not win]
    - "\"%R%\" -e \"library('EpistemicGameTheory')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=EpistemicGameTheory
  license: GPL-3
  summary: Constructing an epistemic model such that, for every player i and for every choice
    c(i) which is optimal, there is one type that expresses common belief in rationality.
  license_family: GPL3
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-3'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: EpistemicGameTheory
# Type: Package
# Title: Constructing an Epistemic Model for the Games with Two Players
# Version: 0.1.2
# Author: Bilge Baser
# Maintainer: Bilge Baser <bilge.baser@msgsu.edu.tr>
# Imports: stats,utils
# Depends: lpSolve
# Description: Constructing an epistemic model such that, for every player i and for every choice c(i) which is optimal, there is one type that expresses common belief in rationality.
# License: GPL-3
# LazyData: TRUE
# RoxygenNote: 6.0.1
# Suggests: testthat
# NeedsCompilation: no
# Packaged: 2017-05-12 10:08:01 UTC; lenovo
# Repository: CRAN
# Date/Publication: 2017-05-12 11:13:59 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
