{% set version = '1.0' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-ivpanel
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/ivpanel_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/ivpanel/ivpanel_{{ version }}.tar.gz
  sha256: 1b0b26e328dd4e8a10b45f2dcd546a90c20841a643c8dda2d6a8593bf8ac3247

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{posix}}zip               # [win]

  host:
    - r-base
    - r-formula

  run:
    - r-base
    - r-formula

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('ivpanel')"           # [not win]
    - "\"%R%\" -e \"library('ivpanel')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=ivpanel
  license: GPL-3
  summary: 'Fit the instrumental panel data models: the fixed effects, random effects and between
    models.'

  license_family: GPL3
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-3'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: ivpanel
# Type: Package
# Title: Instrumental Panel Data Models
# Version: 1.0
# Date: 2015-02-08
# Author: Zaghdoudi Taha
# Maintainer: Zaghdoudi Taha <zedtaha@gmail.com>
# Description: Fit the instrumental panel data models: the fixed effects, random effects and between models.
# License: GPL-3
# Imports: Formula
# Packaged: 2015-02-08 16:27:05 UTC; Taha
# NeedsCompilation: no
# Repository: CRAN
# Date/Publication: 2015-02-09 01:20:56

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
