{% set version = '2.3.1' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-grf
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/grf_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/grf/grf_{{ version }}.tar.gz
  sha256: 151878724a99d516fe3824299274f194e6c67c4bacc6f4cba9adfd64bc5b1c7c

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: DiagrammeR, MASS, rdd, survival (>= 3.2-8), testthat (>= 3.0.4)
requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}make
    - {{ posix }}sed               # [win]
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-dicekriging
    - r-matrix
    - r-rcpp >=0.12.15
    - r-rcppeigen
    - r-lmtest
    - r-sandwich >=2.4_0

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-dicekriging
    - r-matrix
    - r-rcpp >=0.12.15
    - r-rcppeigen
    - r-lmtest
    - r-sandwich >=2.4_0

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('grf')"           # [not win]
    - "\"%R%\" -e \"library('grf')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/grf-labs/grf
  license: GPL-3
  summary: Forest-based statistical estimation and inference. GRF provides non-parametric methods
    for heterogeneous treatment effects estimation (optionally using right-censored
    outcomes, multiple treatment arms or outcomes, or instrumental variables), as well
    as least-squares regression, quantile regression, and survival regression, all with
    support for missing covariates.
  license_family: GPL3
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-3'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: grf
# Title: Generalized Random Forests
# Version: 2.3.1
# Authors@R: c( person("Julie", "Tibshirani", role = c("aut", "cre"), email = "jtibs@cs.stanford.edu"), person("Susan", "Athey", role = "aut"), person("Rina", "Friedberg", role = "ctb"), person("Vitor", "Hadad", role = "ctb"), person("David", "Hirshberg", role = "ctb"), person("Luke", "Miner", role = "ctb"), person("Erik", "Sverdrup", role = "aut"), person("Stefan", "Wager", role = "aut"), person("Marvin", "Wright", role = "ctb") )
# BugReports: https://github.com/grf-labs/grf/issues
# Description: Forest-based statistical estimation and inference. GRF provides non-parametric methods for heterogeneous treatment effects estimation (optionally using right-censored outcomes, multiple treatment arms or outcomes, or instrumental variables), as well as least-squares regression, quantile regression, and survival regression, all with support for missing covariates.
# Depends: R (>= 3.5.0)
# License: GPL-3
# LinkingTo: Rcpp, RcppEigen
# Imports: DiceKriging, lmtest, Matrix, methods, Rcpp (>= 0.12.15), sandwich (>= 2.4-0)
# RoxygenNote: 7.2.3
# Suggests: DiagrammeR, MASS, rdd, survival (>= 3.2-8), testthat (>= 3.0.4)
# SystemRequirements: GNU make
# URL: https://github.com/grf-labs/grf
# Encoding: UTF-8
# NeedsCompilation: yes
# Packaged: 2023-09-30 22:00:47 UTC; erikcs
# Author: Julie Tibshirani [aut, cre], Susan Athey [aut], Rina Friedberg [ctb], Vitor Hadad [ctb], David Hirshberg [ctb], Luke Miner [ctb], Erik Sverdrup [aut], Stefan Wager [aut], Marvin Wright [ctb]
# Maintainer: Julie Tibshirani <jtibs@cs.stanford.edu>
# Repository: CRAN
# Date/Publication: 2023-10-01 00:10:02 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
