{% set version = '1.3-10' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-party
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/party_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/party/party_{{ version }}.tar.gz
  sha256: e5892955f6ce662ade568e646d1d672c3ecbf5d4e74b4a887a353e6160f7b56a

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: TH.data (>= 1.0-3), mlbench, colorspace, MASS, vcd, ipred, varImp, randomForest
requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}make
    - {{ posix }}sed               # [win]
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-coin >=1.1_0
    - r-modeltools >=0.2_21
    - r-mvtnorm >=1.0_2
    - r-sandwich >=1.1_1
    - r-strucchange
    - r-survival >=2.37_7
    - r-zoo

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-coin >=1.1_0
    - r-modeltools >=0.2_21
    - r-mvtnorm >=1.0_2
    - r-sandwich >=1.1_1
    - r-strucchange
    - r-survival >=2.37_7
    - r-zoo

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('party')"           # [not win]
    - "\"%R%\" -e \"library('party')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: http://party.R-forge.R-project.org
  license: GPL-2
  summary: A computational toolbox for recursive partitioning. The core of the package is ctree(),
    an implementation of conditional inference trees which embed tree-structured regression
    models into a well defined theory of conditional inference procedures. This non-parametric
    class of regression trees is applicable to all kinds of regression problems, including
    nominal, ordinal, numeric, censored as well as multivariate response variables and
    arbitrary measurement scales of the covariates. Based on conditional inference trees,
    cforest() provides an implementation of Breiman's random forests. The function mob()
    implements an algorithm for recursive partitioning based on parametric models (e.g.
    linear models, GLMs or survival regression) employing parameter instability tests
    for split selection. Extensible functionality for visualizing tree-structured regression
    models is available. The methods are described in Hothorn et al. (2006) <doi:10.1198/106186006X133933>,
    Zeileis et al. (2008) <doi:10.1198/106186008X319331> and Strobl et al. (2007) <doi:10.1186/1471-2105-8-25>.
  license_family: GPL2
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: party
# Title: A Laboratory for Recursive Partytioning
# Date: 2022-04-25
# Version: 1.3-10
# Authors@R: c(person("Torsten", "Hothorn", role = c("aut", "cre"), email = "Torsten.Hothorn@R-project.org", comment = c(ORCID = "0000-0001-8301-0471")), person("Kurt", "Hornik", role = "aut"), person("Carolin", "Strobl", role = "aut"), person("Achim", "Zeileis", role = "aut", email = "Achim.Zeileis@R-project.org", comment = c(ORCID = "0000-0003-0918-3766")))
# Description: A computational toolbox for recursive partitioning. The core of the package is ctree(), an implementation of conditional inference trees which embed tree-structured regression models into a well defined theory of conditional inference procedures. This non-parametric class of regression trees is applicable to all kinds of regression problems, including nominal, ordinal, numeric, censored as well as multivariate response variables and arbitrary measurement scales of the covariates. Based on conditional inference trees, cforest() provides an implementation of Breiman's random forests. The function mob() implements an algorithm for recursive partitioning based on parametric models (e.g. linear models, GLMs or survival regression) employing parameter instability tests for split selection. Extensible functionality for visualizing tree-structured regression models is available. The methods are described in Hothorn et al. (2006) <doi:10.1198/106186006X133933>, Zeileis et al. (2008) <doi:10.1198/106186008X319331> and Strobl et al. (2007) <doi:10.1186/1471-2105-8-25>.
# Depends: R (>= 3.0.0), methods, grid, stats, mvtnorm (>= 1.0-2), modeltools (>= 0.2-21), strucchange
# LinkingTo: mvtnorm
# Imports: survival (>= 2.37-7), coin (>= 1.1-0), zoo, sandwich (>= 1.1-1)
# Suggests: TH.data (>= 1.0-3), mlbench, colorspace, MASS, vcd, ipred, varImp, randomForest
# LazyData: yes
# License: GPL-2
# URL: http://party.R-forge.R-project.org
# NeedsCompilation: yes
# Packaged: 2022-04-25 14:32:04 UTC; hothorn
# Author: Torsten Hothorn [aut, cre] (<https://orcid.org/0000-0001-8301-0471>), Kurt Hornik [aut], Carolin Strobl [aut], Achim Zeileis [aut] (<https://orcid.org/0000-0003-0918-3766>)
# Maintainer: Torsten Hothorn <Torsten.Hothorn@R-project.org>
# Repository: CRAN
# Date/Publication: 2022-04-26 04:52:27 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
