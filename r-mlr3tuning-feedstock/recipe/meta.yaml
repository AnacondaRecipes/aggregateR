{% set version = '0.19.0' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-mlr3tuning
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/mlr3tuning_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/mlr3tuning/mlr3tuning_{{ version }}.tar.gz
  sha256: 634c941c34dee5dd76ef8f3a201eae8dc4ab14c2bc805192aa32843eeb8fe7c7

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: adagio, GenSA, irace, knitr, mlr3learners (>= 0.5.5), mlr3pipelines, nloptr, rmarkdown, rpart, testthat (>= 3.0.0), xgboost
requirements:
  build:
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-r6
    - r-bbotk >=0.7.2
    - r-checkmate >=2.0.0
    - r-data.table
    - r-lgr
    - r-mlr3 >=0.14.1
    - r-mlr3misc >=0.11.0
    - r-paradox >=0.10.0

  run:
    - r-base
    - r-r6
    - r-bbotk >=0.7.2
    - r-checkmate >=2.0.0
    - r-data.table
    - r-lgr
    - r-mlr3 >=0.14.1
    - r-mlr3misc >=0.11.0
    - r-paradox >=0.10.0

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('mlr3tuning')"           # [not win]
    - "\"%R%\" -e \"library('mlr3tuning')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://mlr3tuning.mlr-org.com, https://github.com/mlr-org/mlr3tuning
  license: LGPL-3
  summary: Hyperparameter optimization package of the 'mlr3' ecosystem. It features highly configurable
    search spaces via the 'paradox' package and finds optimal hyperparameter configurations
    for any 'mlr3' learner. 'mlr3tuning' works with several optimization algorithms
    e.g. Random Search, Iterated Racing, Bayesian Optimization (in 'mlr3mbo') and Hyperband
    (in 'mlr3hyperband'). Moreover, it can automatically optimize learners and estimate
    the performance of optimized models with nested resampling.
  license_family: LGPL
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/LGPL-3'

# The original CRAN metadata for this package was:

# Package: mlr3tuning
# Title: Hyperparameter Optimization for 'mlr3'
# Version: 0.19.0
# Authors@R: c( person("Marc", "Becker", , "marcbecker@posteo.de", role = c("cre", "aut"), comment = c(ORCID = "0000-0002-8115-0400")), person("Michel", "Lang", , "michellang@gmail.com", role = "aut", comment = c(ORCID = "0000-0001-9754-0393")), person("Jakob", "Richter", , "jakob1richter@gmail.com", role = "aut", comment = c(ORCID = "0000-0003-4481-5554")), person("Bernd", "Bischl", , "bernd_bischl@gmx.net", role = "aut", comment = c(ORCID = "0000-0001-6002-6980")), person("Daniel", "Schalk", , "daniel.schalk@stat.uni-muenchen.de", role = "aut", comment = c(ORCID = "0000-0003-0950-1947")) )
# Description: Hyperparameter optimization package of the 'mlr3' ecosystem. It features highly configurable search spaces via the 'paradox' package and finds optimal hyperparameter configurations for any 'mlr3' learner. 'mlr3tuning' works with several optimization algorithms e.g. Random Search, Iterated Racing, Bayesian Optimization (in 'mlr3mbo') and Hyperband (in 'mlr3hyperband'). Moreover, it can automatically optimize learners and estimate the performance of optimized models with nested resampling.
# License: LGPL-3
# URL: https://mlr3tuning.mlr-org.com, https://github.com/mlr-org/mlr3tuning
# BugReports: https://github.com/mlr-org/mlr3tuning/issues
# Depends: mlr3 (>= 0.14.1), paradox (>= 0.10.0), R (>= 3.1.0)
# Imports: bbotk (>= 0.7.2), checkmate (>= 2.0.0), data.table, lgr, mlr3misc (>= 0.11.0), R6
# Suggests: adagio, GenSA, irace, knitr, mlr3learners (>= 0.5.5), mlr3pipelines, nloptr, rmarkdown, rpart, testthat (>= 3.0.0), xgboost
# Config/testthat/edition: 3
# Config/testthat/parallel: true
# Encoding: UTF-8
# NeedsCompilation: no
# RoxygenNote: 7.2.3
# Collate: 'ArchiveTuning.R' 'AutoTuner.R' 'CallbackTuning.R' 'ContextEval.R' 'ObjectiveTuning.R' 'mlr_tuners.R' 'Tuner.R' 'TunerCmaes.R' 'TunerDesignPoints.R' 'TunerFromOptimizer.R' 'TunerGenSA.R' 'TunerGridSearch.R' 'TunerIrace.R' 'TunerNLoptr.R' 'TunerRandomSearch.R' 'TuningInstanceSingleCrit.R' 'TuningInstanceMulticrit.R' 'as_search_space.R' 'assertions.R' 'auto_tuner.R' 'bibentries.R' 'extract_inner_tuning_archives.R' 'extract_inner_tuning_results.R' 'helper.R' 'mlr_callbacks.R' 'reexport.R' 'sugar.R' 'tune.R' 'tune_nested.R' 'zzz.R'
# VignetteBuilder: knitr
# Packaged: 2023-06-26 16:08:49 UTC; marc
# Author: Marc Becker [cre, aut] (<https://orcid.org/0000-0002-8115-0400>), Michel Lang [aut] (<https://orcid.org/0000-0001-9754-0393>), Jakob Richter [aut] (<https://orcid.org/0000-0003-4481-5554>), Bernd Bischl [aut] (<https://orcid.org/0000-0001-6002-6980>), Daniel Schalk [aut] (<https://orcid.org/0000-0003-0950-1947>)
# Maintainer: Marc Becker <marcbecker@posteo.de>
# Repository: CRAN
# Date/Publication: 2023-06-26 16:50:02 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
