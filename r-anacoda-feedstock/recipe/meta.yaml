{% set version = '0.1.3.0' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-anacoda
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/AnaCoDa_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/AnaCoDa/AnaCoDa_{{ version }}.tar.gz
  sha256: bbfd32f4c4b452e35927989f5ab393727eccb7c5af5e9f58e19b3401ad43faaa

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: knitr, Hmisc, VGAM, coda, testthat, lmodel2
requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{posix}}filesystem        # [win]
    - {{posix}}sed               # [win]
    - {{posix}}grep              # [win]
    - {{posix}}autoconf
    - {{posix}}automake          # [not win]
    - {{posix}}automake-wrapper  # [win]
    - {{posix}}pkg-config
    - {{posix}}make
    - {{posix}}coreutils         # [win]
    - {{posix}}zip               # [win]

  host:
    - r-base
    - r-rcpp >=0.11.3
    - r-mvtnorm

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-rcpp >=0.11.3
    - r-mvtnorm

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('AnaCoDa')"           # [not win]
    - "\"%R%\" -e \"library('AnaCoDa')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/clandere/AnaCoDa
  license: GPL (>= 2)
  summary: 'Is a collection of models to analyze genome scale codon data using a Bayesian framework.
    Provides visualization routines and checkpointing for model fittings. Currently
    published models to analyze gene data for selection on codon usage based on Ribosome
    Overhead Cost (ROC) are: ROC (Gilchrist et al. (2015) <doi:10.1093/gbe/evv087>),
    and ROC with phi (Wallace & Drummond (2013) <doi:10.1093/molbev/mst051>). In addition
    ''AnaCoDa'' contains three currently unpublished models. The FONSE (First order
    approximation On NonSense Error) model analyzes gene data for selection on codon
    usage against of nonsense error rates. The PA (PAusing time) and PANSE (PAusing
    time + NonSense Error) models use ribosome footprinting data to analyze estimate
    ribosome pausing times with and without nonsense error rate from ribosome footprinting
    data.'

  license_family: GPL3
  license_file: '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: AnaCoDa
# Type: Package
# Title: Analysis of Codon Data under Stationarity using a Bayesian Framework
# Version: 0.1.3.0
# Date: 2019-05-11
# Authors@R: c(person("Cedric", "Landerer", role = c("aut", "cre"), email = "cedric.landerer@gmail.com"), person("Gabriel", "Hanas", role = "ctb"), person("Jeremy", "Rogers", role = "ctb"), person("Alex", "Cope", role="ctb"), person("Denizhan", "Pak", role="ctb"))
# Maintainer: Cedric Landerer <cedric.landerer@gmail.com>
# URL: https://github.com/clandere/AnaCoDa
# VignetteBuilder: knitr
# NeedsCompilation: yes
# Depends: R (>= 3.3.0), Rcpp (>= 0.11.3), methods, mvtnorm
# Suggests: knitr, Hmisc, VGAM, coda, testthat, lmodel2
# RcppModules: Test_mod, Trace_mod, CovarianceMatrix_mod, MCMCAlgorithm_mod, Model_mod, Parameter_mod, Genome_mod, Gene_mod, SequenceSummary_mod
# Description: Is a collection of models to analyze genome scale codon data using a Bayesian framework. Provides visualization routines and checkpointing for model fittings. Currently published models to analyze gene data for selection on codon usage based on Ribosome Overhead Cost (ROC) are: ROC (Gilchrist et al. (2015) <doi:10.1093/gbe/evv087>), and ROC with phi (Wallace & Drummond (2013) <doi:10.1093/molbev/mst051>). In addition 'AnaCoDa' contains three currently unpublished models. The FONSE (First order approximation On NonSense Error) model analyzes gene data for selection on codon usage against of nonsense error rates. The PA (PAusing time) and PANSE (PAusing time + NonSense Error) models use ribosome footprinting data to analyze estimate ribosome pausing times with and without nonsense error rate from ribosome footprinting data.
# License: GPL (>= 2)
# Imports:
# LinkingTo: Rcpp
# LazyLoad: yes
# LazyData: yes
# RoxygenNote: 6.1.1
# Packaged: 2019-05-11 15:01:40 UTC; landerer
# Author: Cedric Landerer [aut, cre], Gabriel Hanas [ctb], Jeremy Rogers [ctb], Alex Cope [ctb], Denizhan Pak [ctb]
# Repository: CRAN
# Date/Publication: 2019-05-11 22:12:44 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
