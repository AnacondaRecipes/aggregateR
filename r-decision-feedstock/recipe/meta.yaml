{% set version = '0.1.0' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-decision
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/decision_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/decision/decision_{{ version }}.tar.gz
  sha256: cf7c7194bc8506f27352efd3ccd436f0baee9c6e81022a521ef6dc5f9ef7a08d

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{ posix }}zip               # [win]

  host:
    - r-base

  run:
    - r-base

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('decision')"           # [not win]
    - "\"%R%\" -e \"library('decision')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=decision
  license: GPL-2
  summary: Contains a function called dmur() which accepts four parameters like possible values,
    probabilities of the values, selling cost and preparation cost. The dmur() function
    generates various numeric decision parameters like MEMV (Maximum (optimum) expected
    monitory value), best choice, EPPI (Expected profit with perfect information), EVPI
    (Expected value of the perfect information), EOL (Expected opportunity loss), which
    facilitate effective decision-making.
  license_family: GPL2
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: decision
# Type: Package
# Title: Statistical Decision Analysis
# Version: 0.1.0
# Author: Partha Sarathi Bishnu <psbishnu@gmail.com>
# Maintainer: Partha Sarathi Bishnu <psbishnu@gmail.com>
# Description: Contains a function called dmur() which accepts four parameters like possible values, probabilities of the values, selling cost and preparation cost. The dmur() function generates various numeric decision parameters like MEMV (Maximum (optimum) expected monitory value), best choice, EPPI (Expected profit with perfect information), EVPI (Expected value of the perfect information), EOL (Expected opportunity loss), which facilitate effective decision-making.
# License: GPL (>= 2)
# LazyData: TRUE
# RoxygenNote: 5.0.1
# NeedsCompilation: no
# Packaged: 2016-04-05 10:51:37 UTC; student
# Repository: CRAN
# Date/Publication: 2016-04-05 17:40:28

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
