{% set version = '0.2.0' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-netchain
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/netchain_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/netchain/netchain_{{ version }}.tar.gz
  sha256: 139b9ab02130e4d213ffc2920d14de9e803975de865edcd994f504656c7077ea

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: knitr, rmarkdown, testthat, R.rsp
requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}make
    - {{ posix }}sed               # [win]
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-matrix
    - r-rcpp >=0.12.17
    - r-gtools
    - r-igraph
    - r-stringr

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-matrix
    - r-rcpp >=0.12.17
    - r-gtools
    - r-igraph
    - r-stringr

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('netchain')"           # [not win]
    - "\"%R%\" -e \"library('netchain')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=netchain
  license: GPL-3
  summary: In networks, treatments may spill over from the treated individual to his or her social
    contacts and outcomes may be contagious over time. Under this setting, causal inference
    on the collective outcome observed over all network is often of interest. We use
    chain graph models approximating the projection of the full longitudinal data onto
    the observed data to identify the causal effect of the intervention on the whole
    outcome. Justification of such approximation is demonstrated in Ogburn et al. (2018)
    <arXiv:1812.04990>.
  license_family: GPL3
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-3'
    - LICENSE

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: netchain
# Type: Package
# Title: Inferring Causal Effects on Collective Outcomes under Interference
# Version: 0.2.0
# Date: 2020-02-15
# Authors@R: c(person("Elizabeth", "Ogburn", role="aut", email="eogburn@jhu.edu"), person("Ilya", "Shpitser", role = "aut", email = "ilyas@cs.jhu.edu"), person("Youjin", "Lee", role = c("aut", "cre"), email = "youjin.lee@pennmedicine.upenn.edu"))
# Maintainer: Youjin Lee <youjin.lee@pennmedicine.upenn.edu>
# Description: In networks, treatments may spill over from the treated individual to his or her social contacts and outcomes may be contagious over time. Under this setting, causal inference on the collective outcome observed over all network is often of interest. We use chain graph models approximating the projection of the full longitudinal data onto the observed data to identify the causal effect of the intervention on the whole outcome. Justification of such approximation is demonstrated in Ogburn et al. (2018) <arXiv:1812.04990>.
# License: GPL (>= 3) | file LICENSE
# Imports: Rcpp (>= 0.12.17), Matrix, gtools, stringr, stats, igraph
# Suggests: knitr, rmarkdown, testthat, R.rsp
# LinkingTo: Rcpp
# VignetteBuilder: R.rsp
# RoxygenNote: 7.0.0
# Encoding: UTF-8
# NeedsCompilation: yes
# Packaged: 2020-02-15 23:03:09 UTC; Youjin
# Author: Elizabeth Ogburn [aut], Ilya Shpitser [aut], Youjin Lee [aut, cre]
# Repository: CRAN
# Date/Publication: 2020-02-16 22:10:06 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
