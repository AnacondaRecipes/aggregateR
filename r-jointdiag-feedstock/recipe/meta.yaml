{% set version = '0.4' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-jointdiag
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/jointDiag_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/jointDiag/jointDiag_{{ version }}.tar.gz
  sha256: 2e1b7c705bdd7b8598edb1b36e6e30b830ed9655545697cd65307dd855cfa6a3

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests:
requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}make
    - {{ posix }}sed               # [win]
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]

  host:
    - r-base

  run:
    - r-base
    - {{native}}gcc-libs         # [win]

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('jointDiag')"           # [not win]
    - "\"%R%\" -e \"library('jointDiag')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/gouypailler/jointDiag
  license: GPL-2
  summary: Different algorithms to perform approximate joint diagonalization of a finite set
    of square matrices. Depending on the algorithm, orthogonal or non-orthogonal diagonalizer
    is found. These algorithms are particularly useful in the context of blind source
    separation. Original publications of the algorithms can be found in Ziehe et al.
    (2004), Pham and Cardoso (2001) <doi:10.1109/78.942614>, Souloumiac (2009) <doi:10.1109/TSP.2009.2016997>,
    Vollgraff and Obermayer <doi:10.1109/TSP.2006.877673>. An example of application
    in the context of Brain-Computer Interfaces EEG denoising can be found in Gouy-Pailler
    et al (2010) <doi:10.1109/TBME.2009.2032162>.
  license_family: GPL2
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: jointDiag
# Version: 0.4
# Date: 2020-10-27
# Title: Joint Approximate Diagonalization of a Set of Square Matrices
# Author: Cedric Gouy-Pailler <cedric.gouypailler@gmail.com>
# Maintainer: Cedric Gouy-Pailler <cedric.gouypailler@gmail.com>
# Depends:
# Suggests:
# Description: Different algorithms to perform approximate joint diagonalization of a finite set of square matrices. Depending on the algorithm, orthogonal or non-orthogonal diagonalizer is found. These algorithms are particularly useful in the context of blind source separation. Original publications of the algorithms can be found in Ziehe et al. (2004), Pham and Cardoso (2001) <doi:10.1109/78.942614>, Souloumiac (2009) <doi:10.1109/TSP.2009.2016997>, Vollgraff and Obermayer <doi:10.1109/TSP.2006.877673>. An example of application in the context of Brain-Computer Interfaces EEG denoising can be found in Gouy-Pailler et al (2010) <doi:10.1109/TBME.2009.2032162>.
# License: GPL (>= 2)
# URL: https://github.com/gouypailler/jointDiag
# RoxygenNote: 6.0.1
# NeedsCompilation: yes
# Packaged: 2020-10-27 12:00:51 UTC; cg228481
# Repository: CRAN
# Date/Publication: 2020-10-27 14:10:03 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
