{% set version = '1.0-32' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-interp
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/interp_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/interp/interp_{{ version }}.tar.gz
  sha256: 4a735773f76019d5b173eb9a79d95ff78b655dcced3c545cab61789ebed78c81

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: sp, Deriv
requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{posix}}filesystem        # [win]
    - {{posix}}make
    - {{posix}}sed               # [win]
    - {{posix}}coreutils         # [win]
    - {{posix}}zip               # [win]

  host:
    - r-base
    - r-rcpp >=0.12.9
    - r-rcppeigen
    - r-deldir

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-rcpp >=0.12.9
    - r-rcppeigen
    - r-deldir

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('interp')"           # [not win]
    - "\"%R%\" -e \"library('interp')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=interp
  license: GPL-2
  summary: Bivariate data interpolation on regular and irregular grids, either linear or using
    splines are the main part of this package.  It is intended to provide FOSS replacement
    functions for the ACM licensed akima::interp and tripack::tri.mesh functions. Currently
    the piecewise linear interpolation part of akima::interp (and also akima::interpp)
    is implemented in interp::interp, this corresponds to the call akima::interp(...,
    linear=TRUE) which is the default setting and covers most of akima::interp use cases
    in depending packages.  A re-implementation of Akimas spline interpolation (akima::interp(...,
    linear=FALSE)) is currently under development and will complete this package in
    a later version. Estimators for partial derivatives are already available, these
    are a prerequisite for the spline interpolation.  The basic part is currently a
    GPLed triangulation algorithm (sweep hull algorithm by David Sinclair) providing
    the starting point for the piecewise linear interpolator. As side effect this algorithm
    is also used to provide replacements for the basic functions of the tripack package
    which also suffer from the ACM restrictions.  All functions are designed to be backward
    compatible with their akima / tripack counterparts.
  license_family: GPL2
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: interp
# Type: Package
# Title: Interpolation Methods
# Version: 1.0-32
# Date: 2019-05-03
# Authors@R: c(person("Albrecht", "Gebhardt", role = c("aut", "cre", "cph"), email = "albrecht.gebhardt@aau.at", comment = "..."), person("Roger", "Bivand", role = c("aut"), email = "Roger.Bivand@nhh.no"), person("David", "Sinclair", role = c("aut","cph"), email = "david@s-hull.org"))
# Maintainer: Albrecht Gebhardt <albrecht.gebhardt@aau.at>
# Description: Bivariate data interpolation on regular and irregular grids, either linear or using splines are the main part of this package.  It is intended to provide FOSS replacement functions for the ACM licensed akima::interp and tripack::tri.mesh functions. Currently the piecewise linear interpolation part of akima::interp (and also akima::interpp) is implemented in interp::interp, this corresponds to the call akima::interp(..., linear=TRUE) which is the default setting and covers most of akima::interp use cases in depending packages.  A re-implementation of Akimas spline interpolation (akima::interp(..., linear=FALSE)) is currently under development and will complete this package in a later version. Estimators for partial derivatives are already available, these are a prerequisite for the spline interpolation.  The basic part is currently a GPLed triangulation algorithm (sweep hull algorithm by David Sinclair) providing the starting point for the piecewise linear interpolator. As side effect this algorithm is also used to provide replacements for the basic functions of the tripack package which also suffer from the ACM restrictions.  All functions are designed to be backward compatible with their akima / tripack counterparts.
# License: GPL (>= 2)
# Imports: Rcpp (>= 0.12.9), deldir
# Suggests: sp, Deriv
# LinkingTo: Rcpp, RcppEigen
# NeedsCompilation: yes
# Packaged: 2019-05-03 20:47:43 UTC; alge
# Author: Albrecht Gebhardt [aut, cre, cph] (...), Roger Bivand [aut], David Sinclair [aut, cph]
# Repository: CRAN
# Date/Publication: 2019-05-04 07:20:12 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
