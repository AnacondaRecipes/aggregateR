{% set version = '1.1-2' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-interp
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/interp_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/interp/interp_{{ version }}.tar.gz
  sha256: 1900cfb84897ad427cd37a0cb2a4d4e99457ce4f6690a5fde7a86f35b73eb2d7

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: sp, Deriv
requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{ compiler('fortran') }}        # [not win]
    - {{ compiler('m2w64_fortran') }}  # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}make
    - {{ posix }}sed               # [win]
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-rcpp >=0.12.9
    - r-rcppeigen
    - r-deldir

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-rcpp >=0.12.9
    - r-rcppeigen
    - r-deldir

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('interp')"           # [not win]
    - "\"%R%\" -e \"library('interp')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=interp
  license: GPL-2
  summary: Bivariate data interpolation on regular and irregular grids, either linear or using
    splines are the main part of this package.  It is intended to provide FOSS replacement
    functions for the ACM licensed akima::interp and tripack::tri.mesh functions. Linear
    interpolation is implemented in interp::interp(..., method="linear"), this corresponds
    to the call akima::interp(..., linear=TRUE) which is the default setting and covers
    most of akima::interp use cases in depending packages. A re-implementation of Akimas
    irregular grid spline interpolation (akima::interp(..., linear=FALSE)) is now also
    available via interp::interp(..., method="akima"). Estimators for partial derivatives
    are now also available in interp::locpoly(), these are a prerequisite for the spline
    interpolation. The basic part is a GPLed triangulation algorithm (sweep hull algorithm
    by David Sinclair) providing the starting point for the irregular grid interpolator.
    As side effect this algorithm is also used to provide replacements for almost all
    functions of the tripack package which also suffers from the same ACM license restrictions.
    All functions are designed to be backward compatible with their akima / tripack
    counterparts.
  license_family: GPL2
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: interp
# Type: Package
# Title: Interpolation Methods
# Version: 1.1-2
# Date: 2022-05-09
# Authors@R: c(person("Albrecht", "Gebhardt", role = c("aut", "cre", "cph"), email = "albrecht.gebhardt@aau.at"), person("Roger", "Bivand", role = c("aut"), email = "Roger.Bivand@nhh.no"), person("David", "Sinclair", role = c("aut","cph"), email = "david@s-hull.org", comment = "author of the shull library"))
# Maintainer: Albrecht Gebhardt <albrecht.gebhardt@aau.at>
# Description: Bivariate data interpolation on regular and irregular grids, either linear or using splines are the main part of this package.  It is intended to provide FOSS replacement functions for the ACM licensed akima::interp and tripack::tri.mesh functions. Linear interpolation is implemented in interp::interp(..., method="linear"), this corresponds to the call akima::interp(..., linear=TRUE) which is the default setting and covers most of akima::interp use cases in depending packages. A re-implementation of Akimas irregular grid spline interpolation (akima::interp(..., linear=FALSE)) is now also available via interp::interp(..., method="akima"). Estimators for partial derivatives are now also available in interp::locpoly(), these are a prerequisite for the spline interpolation. The basic part is a GPLed triangulation algorithm (sweep hull algorithm by David Sinclair) providing the starting point for the irregular grid interpolator. As side effect this algorithm is also used to provide replacements for almost all functions of the tripack package which also suffers from the same ACM license restrictions. All functions are designed to be backward compatible with their akima / tripack counterparts.
# License: GPL (>= 2)
# Imports: Rcpp (>= 0.12.9), deldir
# Suggests: sp, Deriv
# Enhances: RcppEigen
# LinkingTo: Rcpp, RcppEigen
# Depends: R (>= 3.5.0)
# NeedsCompilation: yes
# Packaged: 2022-05-09 12:50:12 UTC; alge
# Author: Albrecht Gebhardt [aut, cre, cph], Roger Bivand [aut], David Sinclair [aut, cph] (author of the shull library)
# Repository: CRAN
# Date/Publication: 2022-05-10 12:50:04 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
