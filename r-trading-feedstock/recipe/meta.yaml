{% set version = '2.5' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-trading
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/Trading_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/Trading/Trading_{{ version }}.tar.gz
  sha256: 1aa73ac7a71ff66d64df93584c9de1d80ea7b67b6bc805fe9e816103ec45044c

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-performanceanalytics
    - r-data.table
    - r-reticulate

  run:
    - r-base
    - r-performanceanalytics
    - r-data.table
    - r-reticulate

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('Trading')"           # [not win]
    - "\"%R%\" -e \"library('Trading')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://openriskcalculator.com/
  license: GPL-3
  summary: Contains performance analysis metrics of track records including entropy-based correlation
    and dynamic beta based on the Kalman filter. The normalized sample entropy method
    has been implemented which produces accurate entropy estimation even on smaller
    datasets while for the dynamic beta calculation the Kalman filter methodology has
    been utilized. On a separate stream, trades from the five major assets classes and
    also functionality to use pricing curves, rating tables, CSAs and add-on tables.
    The implementation follows an object oriented logic whereby each trade inherits
    from more abstract classes while also the curves/tables are objects. Furthermore,
    odds calculators and P&L back-testing functionality has been implemented for the
    most widely used betting/trading strategies including martingale, DAlembert, Labouchere
    and Fibonacci. Some basic functionality about climate risk was also added in the
    latest version.
  license_family: GPL3
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-3'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: Trading
# Type: Package
# Title: CCR, Advanced Correlation & Beta Estimates, Betting Strategies
# Version: 2.5
# Date: 2022-08-26
# Author: Tasos Grivas
# Maintainer: Tasos Grivas <info@openriskcalculator.com>
# Description: Contains performance analysis metrics of track records including entropy-based correlation and dynamic beta based on the Kalman filter. The normalized sample entropy method has been implemented which produces accurate entropy estimation even on smaller datasets while for the dynamic beta calculation the Kalman filter methodology has been utilized. On a separate stream, trades from the five major assets classes and also functionality to use pricing curves, rating tables, CSAs and add-on tables. The implementation follows an object oriented logic whereby each trade inherits from more abstract classes while also the curves/tables are objects. Furthermore, odds calculators and P&L back-testing functionality has been implemented for the most widely used betting/trading strategies including martingale, DAlembert, Labouchere and Fibonacci. Some basic functionality about climate risk was also added in the latest version.
# Imports: methods, reticulate, PerformanceAnalytics, data.table
# URL: https://openriskcalculator.com/
# License: GPL-3
# Collate: 'AngularDistance.R' 'Future.R' 'Swap.R' 'Vol.R' 'Option.R' 'Trade.R' 'IRD.R' 'Bond.R' 'CSA.R' 'Chebyshev_distance.R' 'Collateral.R' 'Commodity.R' 'Credit.R' 'CrossSampleEntropy.R' 'Curve.R' 'DynamicBeta.R' 'Equity.R' 'FX.R' 'GetTradeDetails.R' 'HashTable.R' 'InformationAdjustedBeta.R' 'InformationAdjustedCorr.R' 'NormXASampEn.R' 'Other.R' 'ParseTrades.R' 'SampleEntropy.R' 'SelectDerivatives.R' 'VariationOfInformation.R' 'capped_fibonacci_seq.R' 'cf.R' 'ci.R' 'martingale_strategy_calculator.R' 'onLoad.R' 'roulette_pl_calculator_Labouchere.R' 'roulette_pl_calculator_dalembert.R' 'roulette_pl_calculator_fibonacci.R' 'roulette_pl_calculator_martingale.R' 'roulette_pl_calculator_specific_number.R' 'tce.R' 'waci.R'
# RoxygenNote: 7.1.1
# NeedsCompilation: no
# Repository: CRAN
# Repository/R-Forge/Project: ccr
# Repository/R-Forge/Revision: 64
# Repository/R-Forge/DateTimeStamp: 2022-08-26 15:30:53
# Date/Publication: 2022-08-26 19:44:38 UTC
# Packaged: 2022-08-26 15:52:07 UTC; rforge

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
