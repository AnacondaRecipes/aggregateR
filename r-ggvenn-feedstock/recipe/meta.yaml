{% set version = '0.1.10' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-ggvenn
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/ggvenn_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/ggvenn/ggvenn_{{ version }}.tar.gz
  sha256: cde116f117266cca27d8cd20205512e602c23514db6d97caaa950b9b21fa873e

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-dplyr
    - r-ggplot2

  run:
    - r-base
    - r-dplyr
    - r-ggplot2

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('ggvenn')"           # [not win]
    - "\"%R%\" -e \"library('ggvenn')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=ggvenn
  license: MIT
  summary: An easy-to-use way to draw pretty venn diagram by 'ggplot2'.
  license_family: MIT
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/MIT'
    - LICENSE

# The original CRAN metadata for this package was:

# Package: ggvenn
# Title: Draw Venn Diagram by 'ggplot2'
# Version: 0.1.10
# Authors@R: person(given = "Linlin", family = "Yan", role = c("aut", "cre"), email = "yanlinlin82@gmail.com", comment = c(ORCID = "0000-0002-4990-6239"))
# Author: Linlin Yan [aut, cre] (<https://orcid.org/0000-0002-4990-6239>)
# Maintainer: Linlin Yan <yanlinlin82@gmail.com>
# Description: An easy-to-use way to draw pretty venn diagram by 'ggplot2'.
# Depends: dplyr, grid, ggplot2
# License: MIT + file LICENSE
# Encoding: UTF-8
# RoxygenNote: 7.2.3
# NeedsCompilation: no
# Packaged: 2023-03-31 03:24:02 UTC; yanll
# Repository: CRAN
# Date/Publication: 2023-03-31 03:50:02 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
