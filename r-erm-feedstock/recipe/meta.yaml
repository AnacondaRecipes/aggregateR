{% set version = '1.0-0' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-erm
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/eRm_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/eRm/eRm_{{ version }}.tar.gz
  sha256: 9efebf2aa1dc456da72af5dbb9ffb8abb12d08018e8f11b18031e0ac8291e886

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('fortran') }}        # [not win]
    - {{ compiler('m2w64_fortran') }}  # [win]
    - {{posix}}filesystem        # [win]
    - {{posix}}make
    - {{posix}}sed               # [win]
    - {{posix}}coreutils         # [win]
    - {{posix}}zip               # [win]

  host:
    - r-base
    - r-mass
    - r-matrix
    - r-lattice

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-mass
    - r-matrix
    - r-lattice

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('eRm')"           # [not win]
    - "\"%R%\" -e \"library('eRm')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=eRm
  license: GPL-3
  summary: Fits Rasch models (RM), linear logistic test models (LLTM), rating scale model (RSM),
    linear rating scale models (LRSM), partial credit models (PCM), and linear partial
    credit models (LPCM).  Missing values are allowed in the data matrix.  Additional
    features are the ML estimation of the person parameters, Andersen's LR-test, item-specific
    Wald test, Martin-Loef-Test, nonparametric Monte-Carlo Tests, itemfit and personfit
    statistics including infit and outfit measures, ICC and other plots, automated stepwise
    item elimination, simulation module for various binary data matrices.
  license_family: GPL3
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-3'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: eRm
# Type: Package
# Title: Extended Rasch Modeling
# Version: 1.0-0
# Date: 2019-06-05
# Authors@R: c(person(given="Patrick", family="Mair", email="mair@fas.harvard.edu", role=c("cre","aut")), person(given="Reinhold", family="Hatzinger", role="aut"), person(given=c("Marco", "J."), family="Maier", email="marco.maier@wu.ac.at", role="aut"), person(given="Thomas", family="Rusch", email="thomas.rusch@wu.ac.at", role="ctb"), person(given="Rudolf", family="Debelak", email="rudolf.debelak@psychologie.uzh.ch", role="ctb"))
# Description: Fits Rasch models (RM), linear logistic test models (LLTM), rating scale model (RSM), linear rating scale models (LRSM), partial credit models (PCM), and linear partial credit models (LPCM).  Missing values are allowed in the data matrix.  Additional features are the ML estimation of the person parameters, Andersen's LR-test, item-specific Wald test, Martin-Loef-Test, nonparametric Monte-Carlo Tests, itemfit and personfit statistics including infit and outfit measures, ICC and other plots, automated stepwise item elimination, simulation module for various binary data matrices.
# License: GPL-3
# Imports: graphics, grDevices, stats, methods, MASS, splines, Matrix, lattice
# Depends: R (>= 3.5.0)
# Encoding: UTF-8
# LazyData: yes
# LazyLoad: yes
# ByteCompile: yes
# NeedsCompilation: yes
# Packaged: 2019-06-06 00:32:28 UTC; root
# Author: Patrick Mair [cre, aut], Reinhold Hatzinger [aut], Marco J. Maier [aut], Thomas Rusch [ctb], Rudolf Debelak [ctb]
# Maintainer: Patrick Mair <mair@fas.harvard.edu>
# Repository: CRAN
# Date/Publication: 2019-06-06 10:19:24 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
