{% set version = '1.3.8' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-sgloptim
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/sglOptim_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/sglOptim/sglOptim_{{ version }}.tar.gz
  sha256: 597aaff8912460eee3cf0b160182744039c1c643445f5eccd53bed74df9e7395

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: knitr, rmarkdown
requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}make
    - {{ posix }}sed               # [win]
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-bh
    - r-matrix
    - r-rcpp
    - r-rcpparmadillo
    - r-rcppprogress
    - r-doparallel
    - r-foreach

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-bh
    - r-matrix
    - r-rcpp
    - r-rcpparmadillo
    - r-rcppprogress
    - r-doparallel
    - r-foreach

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('sglOptim')"           # [not win]
    - "\"%R%\" -e \"library('sglOptim')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://dx.doi.org/10.1016/j.csda.2013.06.004, https://github.com/nielsrhansen/sglOptim
  license: GPL-2
  summary: Fast generic solver for sparse group lasso optimization problems. The loss (objective)
    function must be defined in a C++ module. The optimization problem is solved using
    a coordinate gradient descent algorithm. Convergence of the algorithm is established
    (see reference) and the algorithm is applicable to a broad class of loss functions.
    Use of parallel computing for cross validation and subsampling is supported through
    the 'foreach' and 'doParallel' packages. Development version is on GitHub, please
    report package issues on GitHub.
  license_family: GPL2
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: sglOptim
# Type: Package
# Title: Generic Sparse Group Lasso Solver
# Version: 1.3.8
# Date: 2019-05-07
# Authors@R: c( person("Martin", "Vincent", role = "aut"), person("Niels", "Richard Hansen", email = "niels.r.hansen@math.ku.dk", role = c("ctb", "cre")) )
# Description: Fast generic solver for sparse group lasso optimization problems. The loss (objective) function must be defined in a C++ module. The optimization problem is solved using a coordinate gradient descent algorithm. Convergence of the algorithm is established (see reference) and the algorithm is applicable to a broad class of loss functions. Use of parallel computing for cross validation and subsampling is supported through the 'foreach' and 'doParallel' packages. Development version is on GitHub, please report package issues on GitHub.
# URL: https://dx.doi.org/10.1016/j.csda.2013.06.004, https://github.com/nielsrhansen/sglOptim
# BugReports: https://github.com/nielsrhansen/sglOptim/issues
# License: GPL (>= 2)
# LazyLoad: yes
# Imports: methods, stats, tools, utils
# Depends: R (>= 3.2.4), Matrix, foreach, doParallel
# LinkingTo: Rcpp, RcppProgress, RcppArmadillo, BH
# Suggests: knitr, rmarkdown
# VignetteBuilder: knitr
# RoxygenNote: 6.1.1
# NeedsCompilation: yes
# Packaged: 2019-05-07 19:21:09 UTC; xqz683
# Author: Martin Vincent [aut], Niels Richard Hansen [ctb, cre]
# Maintainer: Niels Richard Hansen <niels.r.hansen@math.ku.dk>
# Repository: CRAN
# Date/Publication: 2019-05-07 22:10:03 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
