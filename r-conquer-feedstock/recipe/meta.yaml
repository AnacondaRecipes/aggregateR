{% set version = '1.3.3' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-conquer
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/conquer_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/conquer/conquer_{{ version }}.tar.gz
  sha256: a2c6155ed74af0e2a279145843ec5229ae2f3707aa25169ae030c520aa97deba

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}make
    - {{ posix }}sed               # [win]
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-matrix
    - r-rcpp >=1.0.3
    - r-rcpparmadillo >=0.9.850.1.0
    - r-matrixstats

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-matrix
    - r-rcpp >=1.0.3
    - r-rcpparmadillo >=0.9.850.1.0
    - r-matrixstats

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('conquer')"           # [not win]
    - "\"%R%\" -e \"library('conquer')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/XiaoouPan/conquer
  license: GPL-3
  summary: Estimation and inference for conditional linear quantile regression models using a
    convolution smoothed approach. In the low-dimensional setting, efficient gradient-based
    methods are employed for fitting both a single model and a regression process over
    a quantile range. Normal-based and (multiplier) bootstrap confidence intervals for
    all slope coefficients are constructed. In high dimensions, the conquer method is
    complemented with flexible types of penalties (Lasso, elastic-net, group lasso,
    sparse group lasso, scad and mcp) to deal with complex low-dimensional structures.
  license_family: GPL3
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-3'

# The original CRAN metadata for this package was:

# Package: conquer
# Type: Package
# Title: Convolution-Type Smoothed Quantile Regression
# Version: 1.3.3
# Date: 2023-03-05
# Authors@R: c(person("Xuming", "He", email = "xmhe@umich.edu", role = "aut"), person("Xiaoou", "Pan", email = "xip024@ucsd.edu", role = c("aut", "cre")), person("Kean Ming", "Tan", email = "keanming@umich.edu", role = "aut"), person("Wen-Xin", "Zhou", email = "wez243@ucsd.edu", role = "aut"))
# Description: Estimation and inference for conditional linear quantile regression models using a convolution smoothed approach. In the low-dimensional setting, efficient gradient-based methods are employed for fitting both a single model and a regression process over a quantile range. Normal-based and (multiplier) bootstrap confidence intervals for all slope coefficients are constructed. In high dimensions, the conquer method is complemented with flexible types of penalties (Lasso, elastic-net, group lasso, sparse group lasso, scad and mcp) to deal with complex low-dimensional structures.
# Depends: R (>= 3.5.0)
# License: GPL-3
# Encoding: UTF-8
# URL: https://github.com/XiaoouPan/conquer
# SystemRequirements: C++17
# Imports: Rcpp (>= 1.0.3), Matrix, matrixStats, stats
# LinkingTo: Rcpp, RcppArmadillo (>= 0.9.850.1.0)
# RoxygenNote: 7.2.1
# NeedsCompilation: yes
# Packaged: 2023-03-06 06:51:17 UTC; xopan
# Author: Xuming He [aut], Xiaoou Pan [aut, cre], Kean Ming Tan [aut], Wen-Xin Zhou [aut]
# Maintainer: Xiaoou Pan <xip024@ucsd.edu>
# Repository: CRAN
# Date/Publication: 2023-03-06 08:40:02 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
