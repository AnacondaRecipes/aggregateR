{% set version = '1.2.4' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-segmag
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/segmag_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/segmag/segmag_{{ version }}.tar.gz
  sha256: 152f3c0ef0c2e0700f3c6882ad674ff29fce93938ffbcfe72d439f1f5e3fe1c4

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: testthat
requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}make
    - {{ posix }}sed               # [win]
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-rcpp >=0.11.0
    - r-plyr

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-rcpp >=0.11.0
    - r-plyr

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('segmag')"           # [not win]
    - "\"%R%\" -e \"library('segmag')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=segmag
  license: GPL-3
  summary: Contains functions that help to determine event boundaries in event segmentation experiments
    by bootstrapping a critical segmentation magnitude under the null hypothesis that
    all key presses were randomly distributed across the experiment. Segmentation magnitude
    is defined as the sum of Gaussians centered at the times of the segmentation key
    presses performed by the participants. Within a participant, the maximum of the
    overlaid Gaussians is used to prevent an excessive influence of a single participant
    on the overall outcome (e.g. if a participant is pressing the key multiple times
    in succession). Further functions are included, such as plotting the results.
  license_family: GPL3
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-3'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: segmag
# Type: Package
# Version: 1.2.4
# Date: 2016-08-11
# Title: Determine Event Boundaries in Event Segmentation Experiments
# Maintainer: Frank Papenmeier <frank.papenmeier@uni-tuebingen.de>
# Author: Frank Papenmeier [aut, cre], Konstantin Sering [ctb]
# Authors@R: c(person("Frank","Papenmeier", role=c("aut","cre"), email="frank.papenmeier@uni-tuebingen.de"), person("Konstantin","Sering", role="ctb"))
# Description: Contains functions that help to determine event boundaries in event segmentation experiments by bootstrapping a critical segmentation magnitude under the null hypothesis that all key presses were randomly distributed across the experiment. Segmentation magnitude is defined as the sum of Gaussians centered at the times of the segmentation key presses performed by the participants. Within a participant, the maximum of the overlaid Gaussians is used to prevent an excessive influence of a single participant on the overall outcome (e.g. if a participant is pressing the key multiple times in succession). Further functions are included, such as plotting the results.
# License: GPL (>= 3)
# Suggests: testthat
# Imports: Rcpp (>= 0.11.0), utils, stats, grDevices, graphics, plyr
# LinkingTo: Rcpp
# RoxygenNote: 5.0.1
# NeedsCompilation: yes
# Packaged: 2016-08-11 14:05:47 UTC; fpapenmeier
# Repository: CRAN
# Date/Publication: 2016-08-11 18:40:42

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
