{% set version = '3.0.0' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-listviewer
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/listviewer_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/listviewer/listviewer_{{ version }}.tar.gz
  sha256: 197588374f1f4c12895e728edee96bdbdefa18b60622e3840183405464eb397e

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: jsonlite, miniUI, rstudioapi
requirements:
  build:
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-htmltools
    - r-htmlwidgets
    - r-shiny

  run:
    - r-base
    - r-htmltools
    - r-htmlwidgets
    - r-shiny

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('listviewer')"           # [not win]
    - "\"%R%\" -e \"library('listviewer')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/timelyportfolio/listviewer
  license: MIT
  summary: R lists, especially nested lists, can be very difficult to visualize or represent.
    Sometimes 'str()' is not enough, so this suite of htmlwidgets is designed to help
    see, understand, and maybe even modify your R lists.  The function 'reactjson()'
    requires a package 'reactR' that can be installed from CRAN or <https://github.com/timelyportfolio/reactR>.
  license_family: MIT
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/MIT'
    - LICENSE

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: listviewer
# Type: Package
# Title: 'htmlwidget' for Interactive Views of R Lists
# Version: 3.0.0
# Date: 2019-11-02
# Authors@R: c( person("Jos", "de Jong", role = c("aut", "cph"), comment = "jsoneditor.js library in htmlwidgets/jsoneditor, http://github.com/josdejong/jsoneditor/" ), person("Mac"," Gainer", role = c("aut", "cph"), comment = "react-json-view library in htmlwidgets/react-json, https://github.com/mac-s-g/react-json-view"), person("Kent","Russell", role = c("aut","cre"), comment = "R interface" , email = "kent.russell@timelyportfolio.com" ) )
# Description: R lists, especially nested lists, can be very difficult to visualize or represent. Sometimes 'str()' is not enough, so this suite of htmlwidgets is designed to help see, understand, and maybe even modify your R lists.  The function 'reactjson()' requires a package 'reactR' that can be installed from CRAN or <https://github.com/timelyportfolio/reactR>.
# License: MIT + file LICENSE
# LazyData: TRUE
# URL: https://github.com/timelyportfolio/listviewer
# BugReports: https://github.com/timelyportfolio/listviewer/issues
# Imports: htmltools, htmlwidgets, shiny
# Suggests: jsonlite, miniUI, rstudioapi
# Enhances: reactR
# RoxygenNote: 6.1.1
# NeedsCompilation: no
# Packaged: 2019-11-02 18:05:18 UTC; kentr
# Author: Jos de Jong [aut, cph] (jsoneditor.js library in htmlwidgets/jsoneditor, http://github.com/josdejong/jsoneditor/), Mac Gainer [aut, cph] (react-json-view library in htmlwidgets/react-json, https://github.com/mac-s-g/react-json-view), Kent Russell [aut, cre] (R interface)
# Maintainer: Kent Russell <kent.russell@timelyportfolio.com>
# Repository: CRAN
# Date/Publication: 2019-11-02 18:20:02 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
