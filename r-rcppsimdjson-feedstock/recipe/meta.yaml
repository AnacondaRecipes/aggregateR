{% set version = '0.1.10' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-rcppsimdjson
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/RcppSimdJson_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/RcppSimdJson/RcppSimdJson_{{ version }}.tar.gz
  sha256: 9445dd3541bba765f836d3a17409a6298fbe7045d3920c470168945029b1d0f1

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: bit64, tinytest
requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}make
    - {{ posix }}sed               # [win]
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-rcpp

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-rcpp

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('RcppSimdJson')"           # [not win]
    - "\"%R%\" -e \"library('RcppSimdJson')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/eddelbuettel/rcppsimdjson/
  license: GPL-2
  summary: The 'JSON' format is ubiquitous for data interchange, and the 'simdjson' library written
    by Daniel Lemire (and many contributors) provides a high-performance parser for
    these files which by relying on parallel 'SIMD' instruction manages to parse these
    files as faster than disk speed. See the <arXiv:1902.08318> paper for more details
    about 'simdjson'.  This package parses 'JSON' from string, file, or remote URLs
    under a variety of settings.
  license_family: GPL2
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

# The original CRAN metadata for this package was:

# Package: RcppSimdJson
# Type: Package
# Title: 'Rcpp' Bindings for the 'simdjson' Header-Only Library for 'JSON' Parsing
# Version: 0.1.10
# Date: 2023-05-14
# Author: Dirk Eddelbuettel, Brendan Knapp, Daniel Lemire
# Maintainer: Dirk Eddelbuettel <edd@debian.org>
# Description: The 'JSON' format is ubiquitous for data interchange, and the 'simdjson' library written by Daniel Lemire (and many contributors) provides a high-performance parser for these files which by relying on parallel 'SIMD' instruction manages to parse these files as faster than disk speed. See the <arXiv:1902.08318> paper for more details about 'simdjson'.  This package parses 'JSON' from string, file, or remote URLs under a variety of settings.
# License: GPL (>= 2)
# Imports: Rcpp, utils
# LinkingTo: Rcpp
# Suggests: bit64, tinytest
# SystemRequirements: A C++17 compiler is required
# URL: https://github.com/eddelbuettel/rcppsimdjson/
# BugReports: https://github.com/eddelbuettel/rcppsimdjson/issues
# RoxygenNote: 7.1.1
# Encoding: UTF-8
# NeedsCompilation: yes
# Packaged: 2023-05-14 22:51:24 UTC; edd
# Repository: CRAN
# Date/Publication: 2023-05-14 23:50:02 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
