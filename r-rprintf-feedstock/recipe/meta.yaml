{% set version = '0.2.1' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-rprintf
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/rprintf_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/rprintf/rprintf_{{ version }}.tar.gz
  sha256: 03928a9385085de9dc7cecc809eed26839a8073cd74bd34c25abbf082cbd9867

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: testthat, knitr
requirements:
  build:
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-stringi

  run:
    - r-base
    - r-stringi

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('rprintf')"           # [not win]
    - "\"%R%\" -e \"library('rprintf')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: http://renkun.me/rprintf, https://github.com/renkun-ken/rprintf
  license: MIT
  summary: 'Provides a set of functions to facilitate building formatted strings under various
    replacement rules: C-style formatting, variable-based formatting, and number-based
    formatting. C-style formatting is basically identical to built-in function ''sprintf''.
    Variable-based formatting allows users to put variable names in a formatted string
    which will be replaced by variable values. Number-based formatting allows users
    to use index numbers to represent the corresponding argument value to appear in
    the string.'
  license_family: MIT
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/MIT'
    - LICENSE

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: rprintf
# Type: Package
# Title: Adaptive Builder for Formatted Strings
# Version: 0.2.1
# Author: Kun Ren <ken@renkun.me>
# Maintainer: Kun Ren <ken@renkun.me>
# Description: Provides a set of functions to facilitate building formatted strings under various replacement rules: C-style formatting, variable-based formatting, and number-based formatting. C-style formatting is basically identical to built-in function 'sprintf'. Variable-based formatting allows users to put variable names in a formatted string which will be replaced by variable values. Number-based formatting allows users to use index numbers to represent the corresponding argument value to appear in the string.
# Depends: R (>= 2.15)
# Date: 2015-09-09
# Imports: stringi
# Suggests: testthat, knitr
# License: MIT + file LICENSE
# URL: http://renkun.me/rprintf, https://github.com/renkun-ken/rprintf
# BugReports: https://github.com/renkun-ken/rprintf/issues
# ByteCompile: TRUE
# NeedsCompilation: no
# Packaged: 2015-09-09 07:18:12 UTC; Kun
# Repository: CRAN
# Date/Publication: 2015-09-09 09:34:46

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
