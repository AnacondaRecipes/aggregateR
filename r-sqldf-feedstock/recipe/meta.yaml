{% set version = '0.4-11' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-sqldf
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/sqldf_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/sqldf/sqldf_{{ version }}.tar.gz
  sha256: cee979d4e8c67b4924655365d925a8d67104e62adf71741f645cdc5196de2260

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: RH2, RMySQL, RPostgreSQL, svUnit, tcltk, MASS
requirements:
  build:
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-dbi
    - r-rsqlite
    - r-chron
    - r-gsubfn >=0.6
    - r-proto

  run:
    - r-base
    - r-dbi
    - r-rsqlite
    - r-chron
    - r-gsubfn >=0.6
    - r-proto

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('sqldf')"           # [not win]
    - "\"%R%\" -e \"library('sqldf')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/ggrothendieck/sqldf, https://groups.google.com/group/sqldf
  license: GPL-2
  summary: The sqldf() function is typically passed a single argument which is an SQL select
    statement where the table names are ordinary R data frame names.  sqldf() transparently
    sets up a database, imports the data frames into that database, performs the SQL
    select or other statement and returns the result using a heuristic to determine
    which class to assign to each column of the returned data frame.  The sqldf() or
    read.csv.sql() functions can also be used to read filtered files into R even if
    the original files are larger than R itself can handle. 'RSQLite', 'RH2', 'RMySQL'
    and 'RPostgreSQL' backends are supported.
  license_family: GPL2
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

# The original CRAN metadata for this package was:

# Package: sqldf
# Version: 0.4-11
# Date: 2017-06-23
# Title: Manipulate R Data Frames Using SQL
# Author: G. Grothendieck <ggrothendieck@gmail.com>
# Maintainer: G. Grothendieck <ggrothendieck@gmail.com>
# Description: The sqldf() function is typically passed a single argument which is an SQL select statement where the table names are ordinary R data frame names.  sqldf() transparently sets up a database, imports the data frames into that database, performs the SQL select or other statement and returns the result using a heuristic to determine which class to assign to each column of the returned data frame.  The sqldf() or read.csv.sql() functions can also be used to read filtered files into R even if the original files are larger than R itself can handle. 'RSQLite', 'RH2', 'RMySQL' and 'RPostgreSQL' backends are supported.
# ByteCompile: true
# Depends: R (>= 3.1.0), gsubfn (>= 0.6), proto, RSQLite
# Suggests: RH2, RMySQL, RPostgreSQL, svUnit, tcltk, MASS
# Imports: DBI, chron
# License: GPL-2
# BugReports: https://github.com/ggrothendieck/sqldf/issues
# URL: https://github.com/ggrothendieck/sqldf, https://groups.google.com/group/sqldf
# NeedsCompilation: no
# Packaged: 2017-06-28 00:38:13 UTC; Louis
# Repository: CRAN
# Date/Publication: 2017-06-28 06:43:10 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
