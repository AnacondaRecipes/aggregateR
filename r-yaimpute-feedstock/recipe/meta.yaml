{% set version = '1.0-31' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-yaimpute
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/yaImpute_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/yaImpute/yaImpute_{{ version }}.tar.gz
  sha256: cedd86034391619b1bbd977cbb714065268a0504998570bb20abcf4b738a0801

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: vegan, ccaPP, randomForest, gam, fastICA, parallel, gower
requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{posix}}filesystem        # [win]
    - {{posix}}make
    - {{posix}}sed               # [win]
    - {{posix}}coreutils         # [win]
    - {{posix}}zip               # [win]

  host:
    - r-base

  run:
    - r-base
    - {{native}}gcc-libs         # [win]

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('yaImpute')"           # [not win]
    - "\"%R%\" -e \"library('yaImpute')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=yaImpute
  license: GPL-2
  summary: Performs nearest neighbor-based imputation using one or more alternative  approaches
    to processing multivariate data. These include methods based on canonical  correlation
    analysis, canonical correspondence analysis, and a multivariate adaptation  of the
    random forest classification and regression techniques of Leo Breiman and Adele  Cutler.
    Additional methods are also offered. The package includes functions for  comparing
    the results from running alternative techniques, detecting imputation targets  that
    are notably distant from reference observations, detecting and correcting  for bias,
    bootstrapping and building ensemble imputations, and mapping results.
  license_family: GPL2
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: yaImpute
# Version: 1.0-31
# Date: 2018-12-26
# Title: Nearest Neighbor Observation Imputation and Evaluation Tools
# Author: Nicholas L. Crookston, Andrew O. Finley, John Coulston (Sunil Arya and David Mount for ANN)
# Copyright: ANN library is copyright University of Maryland and Sunil Arya and David Mount. See file COPYRIGHTS for details.
# Maintainer: Nicholas L. Crookston <ncrookston.fs@gmail.com>
# Depends: R (>= 3.0.0)
# Imports: grDevices, graphics, stats, utils
# Suggests: vegan, ccaPP, randomForest, gam, fastICA, parallel, gower
# NeedsCompilation: yes
# Description: Performs nearest neighbor-based imputation using one or more alternative  approaches to processing multivariate data. These include methods based on canonical  correlation analysis, canonical correspondence analysis, and a multivariate adaptation  of the random forest classification and regression techniques of Leo Breiman and Adele  Cutler. Additional methods are also offered. The package includes functions for  comparing the results from running alternative techniques, detecting imputation targets  that are notably distant from reference observations, detecting and correcting  for bias, bootstrapping and building ensemble imputations, and mapping results.
# License: GPL (>= 2)
# Repository: CRAN
# Repository/R-Forge/Project: yaimpute
# Repository/R-Forge/Revision: 103
# Repository/R-Forge/DateTimeStamp: 2018-12-26 23:21:55
# Date/Publication: 2019-01-09 19:30:03 UTC
# Packaged: 2018-12-26 23:32:03 UTC; rforge

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
