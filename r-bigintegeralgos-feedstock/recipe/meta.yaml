{% set version = '0.1.2' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-bigintegeralgos
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/bigIntegerAlgos_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/bigIntegerAlgos/bigIntegerAlgos_{{ version }}.tar.gz
  sha256: c54b8b8196dc83dfc71b1ef9d4b22697046c0f7bee96947dac3a16b120ef6cb1

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/
  ignore_run_exports:
    - gmp
    - r_gmp

# Suggests: testthat, numbers (>= 0.6-6), RcppAlgos (>= 1.0.1)
requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{ compiler('fortran') }}        # [not win]
    - {{ compiler('m2w64_fortran') }}  # [win]
    - {{posix}}filesystem        # [win]
    - {{posix}}sed               # [win]
    - {{posix}}grep              # [win]
    - {{posix}}autoconf
    - {{posix}}automake          # [not win]
    - {{posix}}automake-wrapper  # [win]
    - {{posix}}pkg-config
    - {{posix}}make
    - {{posix}}coreutils         # [win]
    - {{posix}}zip               # [win]

  host:
    - r-base
    - r-gmp

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - libgcc                     # [linux]
    - libgfortran                # [osx]
    - r-gmp

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('bigIntegerAlgos')"           # [not win]
    - "\"%R%\" -e \"library('bigIntegerAlgos')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/jwood000/bigIntegerAlgos, http://mathworld.wolfram.com/QuadraticSieve.html
  license: GPL-2
  summary: Features the multiple polynomial quadratic sieve algorithm for factoring large integers
    and a vectorized factoring function that returns the complete factorization of an
    integer. Utilizes the C library GMP (GNU Multiple Precision Arithmetic) and classes
    created by Antoine Lucas et al. found in the 'gmp' package.
  license_family: GPL2
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: bigIntegerAlgos
# Type: Package
# Title: R Tool for Factoring Big Integers
# Version: 0.1.2
# Author: Joseph Wood
# Maintainer: Joseph Wood <jwood000@gmail.com>
# Description: Features the multiple polynomial quadratic sieve algorithm for factoring large integers and a vectorized factoring function that returns the complete factorization of an integer. Utilizes the C library GMP (GNU Multiple Precision Arithmetic) and classes created by Antoine Lucas et al. found in the 'gmp' package.
# License: GPL (>= 2)
# BuildResaveData: no
# Encoding: UTF-8
# SystemRequirements: gmp (>= 4.2.3)
# Suggests: testthat, numbers (>= 0.6-6), RcppAlgos (>= 1.0.1)
# Depends: gmp
# NeedsCompilation: yes
# URL: https://github.com/jwood000/bigIntegerAlgos, http://mathworld.wolfram.com/QuadraticSieve.html
# BugReports: https://github.com/jwood000/bigIntegerAlgos/issues
# RoxygenNote: 6.0.1
# Packaged: 2018-04-30 15:22:11 UTC; josephwood
# Repository: CRAN
# Date/Publication: 2018-04-30 17:09:30 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
