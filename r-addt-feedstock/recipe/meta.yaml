{% set version = '2.0' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-addt
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/ADDT_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/ADDT/ADDT_{{ version }}.tar.gz
  sha256: 37bbcf76a20597099ecca9b41491df125e3cc9a7f95084cbe41b55c165588b10

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-matrix
    - r-coneproj
    - r-nlme

  run:
    - r-base
    - r-matrix
    - r-coneproj
    - r-nlme

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('ADDT')"           # [not win]
    - "\"%R%\" -e \"library('ADDT')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=ADDT
  license: GPL-2
  summary: Accelerated destructive degradation tests (ADDT) are often used to collect necessary
    data for assessing the long-term properties of polymeric materials. Based on the
    collected data, a thermal index (TI) is estimated. The TI can be useful for material
    rating and comparison. This package implements the traditional method based on the
    least-squares method, the parametric method based on maximum likelihood estimation,
    and the semiparametric method based on spline methods, and the corresponding methods
    for estimating TI for polymeric materials. The traditional approach is a two-step
    approach that is currently used in industrial standards, while the parametric method
    is widely used in the statistical literature. The semiparametric method is newly
    developed. Both the parametric and semiparametric approaches allow one to do statistical
    inference such as quantifying uncertainties in estimation, hypothesis testing, and
    predictions. Publicly available datasets are provided illustrations. More details
    can be found in Jin et al. (2017).
  license_family: GPL2
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: ADDT
# Type: Package
# Title: Analysis of Accelerated Destructive Degradation Test Data
# Version: 2.0
# Date: 2016-10-08
# Author: Yili Hong, Yimeng Xie, Zhongnan Jin, and Caleb King
# Maintainer: Yili Hong <yilihong@vt.edu>
# Description: Accelerated destructive degradation tests (ADDT) are often used to collect necessary data for assessing the long-term properties of polymeric materials. Based on the collected data, a thermal index (TI) is estimated. The TI can be useful for material rating and comparison. This package implements the traditional method based on the least-squares method, the parametric method based on maximum likelihood estimation, and the semiparametric method based on spline methods, and the corresponding methods for estimating TI for polymeric materials. The traditional approach is a two-step approach that is currently used in industrial standards, while the parametric method is widely used in the statistical literature. The semiparametric method is newly developed. Both the parametric and semiparametric approaches allow one to do statistical inference such as quantifying uncertainties in estimation, hypothesis testing, and predictions. Publicly available datasets are provided illustrations. More details can be found in Jin et al. (2017).
# License: GPL-2
# Depends: nlme, Matrix, coneproj
# RoxygenNote: 5.0.1.9000
# NeedsCompilation: no
# Packaged: 2016-11-03 14:05:30 UTC; yilihong
# Repository: CRAN
# Date/Publication: 2016-11-03 20:12:52

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
