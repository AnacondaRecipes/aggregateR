{% set version = '1.0-7' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-rplotengine
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/rplotengine_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/rplotengine/rplotengine_{{ version }}.tar.gz
  sha256: fa3672c962947f5c60e9679a4dddd5593c63f6789851a9307906024a108e6cad

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{posix}}zip               # [win]

  host:
    - r-base
    - r-xtable

  run:
    - r-base
    - r-xtable

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('rplotengine')"           # [not win]
    - "\"%R%\" -e \"library('rplotengine')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: http://www.umh.es
  license: GPL-2
  summary: 'Generate basic charts either by custom applications, or from a small script launched
    from the system console, or within the R console. Two ASCII text files are necessary:
    (1) The graph parameters file, which name is passed to the function ''rplotengine()''.
    The user can specify the titles, choose the type of the graph, graph output formats
    (e.g. png, eps), proportion of the X-axis and Y-axis, position of the legend, whether
    to show or not a grid at the background, etc. (2) The data to be plotted, which
    name is specified as a parameter (''data_filename'') in the previous file. This
    data file has a tabulated format, with a single character (e.g. tab) between each
    column, and a headers line located in the first row. Optionally, the file could
    include data columns for showing confidence intervals.'

  license_family: GPL2
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: rplotengine
# Type: Package
# Version: 1.0-7
# Date: 2018-08-08
# Title: R as a Plotting Engine
# Authors@R: c(person(given="Pedro-Pablo", family="Garrido Abenza", role=c("aut","cre"), email="pgarrido@umh.es"))
# Depends: R (>= 2.6.2), xtable
# Description: Generate basic charts either by custom applications, or from a small script launched from the system console, or within the R console. Two ASCII text files are necessary: (1) The graph parameters file, which name is passed to the function 'rplotengine()'. The user can specify the titles, choose the type of the graph, graph output formats (e.g. png, eps), proportion of the X-axis and Y-axis, position of the legend, whether to show or not a grid at the background, etc. (2) The data to be plotted, which name is specified as a parameter ('data_filename') in the previous file. This data file has a tabulated format, with a single character (e.g. tab) between each column, and a headers line located in the first row. Optionally, the file could include data columns for showing confidence intervals.
# License: GPL (>= 2)
# URL: http://www.umh.es
# NeedsCompilation: no
# Packaged: 2018-08-07 22:25:47 UTC; pgarrido
# Author: Pedro-Pablo Garrido Abenza [aut, cre]
# Maintainer: Pedro-Pablo Garrido Abenza <pgarrido@umh.es>
# Repository: CRAN
# Date/Publication: 2018-08-07 22:40:03 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
