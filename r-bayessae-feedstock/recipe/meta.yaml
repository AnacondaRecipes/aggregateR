{% set version = '1.0-2' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-bayessae
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/BayesSAE_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/BayesSAE/BayesSAE_{{ version }}.tar.gz
  sha256: c5f1bedfd6c21a532821f66b59d712cda5004fc487baa031bb4f9122324c7df5

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{posix}}filesystem        # [win]
    - {{posix}}make
    - {{posix}}sed               # [win]
    - {{posix}}coreutils         # [win]
    - {{posix}}zip               # [win]

  host:
    - r-base
    - r-formula
    - r-coda
    - r-lattice

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-formula
    - r-coda
    - r-lattice

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('BayesSAE')"           # [not win]
    - "\"%R%\" -e \"library('BayesSAE')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=BayesSAE
  license: GPL-2
  summary: Provides a variety of methods from Rao (2003, ISBN:0-471-41374-7) and some other research
    articles to deal with several specific small area area- level models in Bayesian
    framework. Models provided range from the basic Fay-Herriot model to  its improvement
    such as You-Chapman models, unmatched models, spatial models and so on.  Different
    types of priors for specific parameters could be chosen to obtain MCMC posterior  draws.
    The main sampling function is written in C with GSL lab so as to facilitate the  computation.
    Model internal checking and model comparison criteria are also involved.
  license_family: GPL2
  license_file: '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: BayesSAE
# Type: Package
# Title: Bayesian Analysis of Small Area Estimation
# Version: 1.0-2
# Date: 2018-04-18
# Authors@R: c(person("Chengchun Shi", "Developer", role=c("aut", "cre"), email= "cshi4@ncsu.edu"))
# Description: Provides a variety of methods from Rao (2003, ISBN:0-471-41374-7) and some other research articles to deal with several specific small area area- level models in Bayesian framework. Models provided range from the basic Fay-Herriot model to  its improvement such as You-Chapman models, unmatched models, spatial models and so on.  Different types of priors for specific parameters could be chosen to obtain MCMC posterior  draws. The main sampling function is written in C with GSL lab so as to facilitate the  computation. Model internal checking and model comparison criteria are also involved.
# Depends: Formula, coda, lattice
# License: GPL-2
# Packaged: 2018-04-20 14:43:17 UTC; spring
# Author: Chengchun Shi Developer [aut, cre]
# Maintainer: Chengchun Shi Developer <cshi4@ncsu.edu>
# NeedsCompilation: yes
# Repository: CRAN
# Date/Publication: 2018-04-20 14:49:18 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
