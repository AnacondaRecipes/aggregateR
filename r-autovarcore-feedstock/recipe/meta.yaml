{% set version = '1.0-4' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-autovarcore
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/autovarCore_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/autovarCore/autovarCore_{{ version }}.tar.gz
  sha256: 3baec756177377304f3bfc8b7b7985d24d934a8380e0521003314ff141dfae44

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: testthat, roxygen2
requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{posix}}filesystem        # [win]
    - {{posix}}make
    - {{posix}}sed               # [win]
    - {{posix}}coreutils         # [win]
    - {{posix}}zip               # [win]

  host:
    - r-base
    - r-amelia
    - r-rcpp >=0.11.4
    - r-jsonlite
    - r-urca
    - r-vars

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-amelia
    - r-rcpp >=0.11.4
    - r-jsonlite
    - r-urca
    - r-vars

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('autovarCore')"           # [not win]
    - "\"%R%\" -e \"library('autovarCore')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=autovarCore
  license: MIT + file LICENSE
  summary: 'Automatically find the best vector autoregression models and networks for a given
    time series data set. ''AutovarCore'' evaluates eight kinds of models: models with
    and without log transforming the data, lag 1 and lag 2 models, and models with and
    without weekday dummy variables. For each of these 8 model configurations, ''AutovarCore''
    evaluates all possible combinations for including outlier dummies (at 2.5x the standard
    deviation of the residuals) and retains the best model. Model evaluation includes
    the Eigenvalue stability test and a configurable set of residual tests. These eight
    models are further reduced to four models because ''AutovarCore'' determines whether
    adding weekday dummies improves the model fit.'

  license_family: MIT

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: autovarCore
# Type: Package
# Title: Automated Vector Autoregression Models and Networks
# Version: 1.0-4
# Date: 2018-06-04
# Authors@R: c(person("Ando","Emerencia",role = c("aut","cre"), email = "ando.emerencia@gmail.com"))
# BugReports: https://github.com/roqua/autovarcore/issues
# Maintainer: Ando Emerencia <ando.emerencia@gmail.com>
# Description: Automatically find the best vector autoregression models and networks for a given time series data set. 'AutovarCore' evaluates eight kinds of models: models with and without log transforming the data, lag 1 and lag 2 models, and models with and without weekday dummy variables. For each of these 8 model configurations, 'AutovarCore' evaluates all possible combinations for including outlier dummies (at 2.5x the standard deviation of the residuals) and retains the best model. Model evaluation includes the Eigenvalue stability test and a configurable set of residual tests. These eight models are further reduced to four models because 'AutovarCore' determines whether adding weekday dummies improves the model fit.
# License: MIT + file LICENSE
# Suggests: testthat, roxygen2
# Imports: Rcpp (>= 0.11.4), Amelia, jsonlite, parallel, stats, urca, vars
# LinkingTo: Rcpp
# RoxygenNote: 6.0.1
# NeedsCompilation: yes
# Packaged: 2018-06-04 16:26:37 UTC; ando
# Author: Ando Emerencia [aut, cre]
# Repository: CRAN
# Date/Publication: 2018-06-04 17:43:35 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
