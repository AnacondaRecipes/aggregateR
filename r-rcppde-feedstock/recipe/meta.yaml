{% set version = '0.1.6' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-rcppde
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/RcppDE_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/RcppDE/RcppDE_{{ version }}.tar.gz
  sha256: c9386709f72cdc33505b3ac675c173013fe098434b7c21bc09eb625b529132c5

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: inline, DEoptim, lattice
requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{posix}}filesystem        # [win]
    - {{posix}}make
    - {{posix}}sed               # [win]
    - {{posix}}coreutils         # [win]
    - {{posix}}zip               # [win]
    - llvm-openmp >=4.0.1        # [osx]

  host:
    - r-base
    - r-rcpp
    - r-rcpparmadillo
    - llvm-openmp >=4.0.1        # [osx]

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-rcpp
    - r-rcpparmadillo
    - llvm-openmp >=4.0.1        # [osx]

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('RcppDE')"           # [not win]
    - "\"%R%\" -e \"library('RcppDE')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=RcppDE
  license: GPL-2
  summary: 'An efficient C++ based implementation of the ''DEoptim'' function which performs
    global optimization by differential evolution.   Its creation was motivated by trying
    to see if the old approximation "easier, shorter, faster: pick any two" could in
    fact be extended to achieving all three goals while moving the code from plain old
    C to modern C++.  The initial version did in fact do so, but a good part of the
    gain was due to  an implicit code review which eliminated a few inefficiencies which
    have since been eliminated in ''DEoptim''.'

  license_family: GPL2
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: RcppDE
# Version: 0.1.6
# Date: 2018-06-09
# Title: Global Optimization by Differential Evolution in C++
# Author: Dirk Eddelbuettel extending DEoptim (by David Ardia, Katharine Mullen, Brian Peterson, Joshua Ulrich) which itself is based on DE-Engine (by Rainer Storn)
# Maintainer: Dirk Eddelbuettel <edd@debian.org>
# Description: An efficient C++ based implementation of the 'DEoptim' function which performs global optimization by differential evolution.   Its creation was motivated by trying to see if the old approximation "easier, shorter, faster: pick any two" could in fact be extended to achieving all three goals while moving the code from plain old C to modern C++.  The initial version did in fact do so, but a good part of the gain was due to  an implicit code review which eliminated a few inefficiencies which have since been eliminated in 'DEoptim'.
# License: GPL (>= 2)
# Imports: Rcpp
# Suggests: inline, DEoptim, lattice
# LinkingTo: Rcpp, RcppArmadillo
# NeedsCompilation: yes
# Packaged: 2018-06-09 16:43:15.620183 UTC; edd
# Repository: CRAN
# Date/Publication: 2018-06-09 16:56:28 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
