{% set version = '0.1.2' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-ahocorasicktrie
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/AhoCorasickTrie_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/AhoCorasickTrie/AhoCorasickTrie_{{ version }}.tar.gz
  sha256: f8968a278178bc919f366d1f1c47eea1e124f9fe01644c8d5c1d54d464f1037e

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: Biostrings, microbenchmark, testthat
requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}make
    - {{ posix }}sed               # [win]
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-rcpp >=0.12.5

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-rcpp >=0.12.5

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('AhoCorasickTrie')"           # [not win]
    - "\"%R%\" -e \"library('AhoCorasickTrie')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/chambm/AhoCorasickTrie
  license: Apache License 2.0
  summary: Aho-Corasick is an optimal algorithm for finding many keywords in a text. It can locate
    all matches in a text in O(N+M) time; i.e., the time needed scales linearly with
    the number of keywords (N) and the size of the text (M). Compare this to the naive
    approach which takes O(N*M) time to loop through each pattern and scan for it in
    the text. This implementation builds the trie (the generic name of the data structure)
    and runs the search in a single function call. If you want to search multiple texts
    with the same trie, the function will take a list or vector of texts and return
    a list of matches to each text. By default, all 128 ASCII characters are allowed
    in both the keywords and the text. A more efficient trie is possible if the alphabet
    size can be reduced. For example, DNA sequences use at most 19 distinct characters
    and usually only 4; protein sequences use at most 26 distinct characters and usually
    only 20. UTF-8 (Unicode) matching is not currently supported.
  license_family: APACHE

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: AhoCorasickTrie
# Type: Package
# Title: Fast Searching for Multiple Keywords in Multiple Texts
# Version: 0.1.2
# Authors@R: c(person("Matt", "Chambers", email="matt.chambers42@gmail.com", role=c("aut", "cre")), person("Tomas", "Petricek", role=c("aut", "cph")), person("Vanderbilt University", role="cph"))
# Description: Aho-Corasick is an optimal algorithm for finding many keywords in a text. It can locate all matches in a text in O(N+M) time; i.e., the time needed scales linearly with the number of keywords (N) and the size of the text (M). Compare this to the naive approach which takes O(N*M) time to loop through each pattern and scan for it in the text. This implementation builds the trie (the generic name of the data structure) and runs the search in a single function call. If you want to search multiple texts with the same trie, the function will take a list or vector of texts and return a list of matches to each text. By default, all 128 ASCII characters are allowed in both the keywords and the text. A more efficient trie is possible if the alphabet size can be reduced. For example, DNA sequences use at most 19 distinct characters and usually only 4; protein sequences use at most 26 distinct characters and usually only 20. UTF-8 (Unicode) matching is not currently supported.
# License: Apache License 2.0
# URL: https://github.com/chambm/AhoCorasickTrie
# BugReports: https://github.com/chambm/AhoCorasickTrie/issues
# Encoding: UTF-8
# LazyData: true
# Imports: Rcpp (>= 0.12.5)
# LinkingTo: Rcpp
# Suggests: Biostrings, microbenchmark, testthat
# SystemRequirements: C++11
# RoxygenNote: 7.1.1
# NeedsCompilation: yes
# Packaged: 2020-09-29 14:29:43 UTC; Matthew
# Author: Matt Chambers [aut, cre], Tomas Petricek [aut, cph], Vanderbilt University [cph]
# Maintainer: Matt Chambers <matt.chambers42@gmail.com>
# Repository: CRAN
# Date/Publication: 2020-09-29 15:10:05 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
