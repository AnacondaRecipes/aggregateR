{% set version = '0.1.3' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-pragma
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/pragma_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/pragma/pragma_{{ version }}.tar.gz
  sha256: ddc92ba939a3c77b48d7b1758f549f905b67a8e8985c22196a04de6bc85060d8

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{posix}}zip               # [win]

  host:
    - r-base

  run:
    - r-base

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('pragma')"           # [not win]
    - "\"%R%\" -e \"library('pragma')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: http://www.decisionpatterns.com
  license: GPL-2
  summary: pragma allows for the use of pragma (also sometimes called directives or keywords.
    These allow assigning arbitrary functionality to a word without requiring the standard
    function call syntax i.e. with parens.
  license_family: GPL2
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: pragma
# Type: Package
# Title: Provides a pragma / directive / keyword syntax for R.
# Version: 0.1.3
# Date: 2011-08-21
# Author: Christopher Brown
# Maintainer: Christopher Brown <chris.brown@decisionpatterns.com>
# Depends: R (>= 2.13.0), utils, methods
# Description: pragma allows for the use of pragma (also sometimes called directives or keywords. These allow assigning arbitrary functionality to a word without requiring the standard function call syntax i.e. with parens.
# License: GPL (>= 2)
# URL: http://www.decisionpatterns.com
# LazyLoad: yes
# Packaged: 2012-10-29 08:59:30 UTC; ripley
# Repository: CRAN
# Date/Publication: 2012-10-29 08:59:30
# NeedsCompilation: no

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
