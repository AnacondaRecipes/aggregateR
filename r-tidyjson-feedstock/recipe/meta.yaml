{% set version = '0.3.2' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-tidyjson
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/tidyjson_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/tidyjson/tidyjson_{{ version }}.tar.gz
  sha256: e636cabc95babe12f0051b57404c2aa49f13b5d54a6904e84770ee3b412ad57e

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: covr, forcats, ggplot2, igraph, knitr, listviewer, lubridate, RColorBrewer, rmarkdown, rprojroot, testthat (>= 3.0.0), vctrs, viridis, wordcloud
requirements:
  build:
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-assertthat
    - r-dplyr >=1.0.0
    - r-jsonlite
    - r-magrittr
    - r-purrr
    - r-rlang
    - r-tibble
    - r-tidyr >=1.0.0

  run:
    - r-base
    - r-assertthat
    - r-dplyr >=1.0.0
    - r-jsonlite
    - r-magrittr
    - r-purrr
    - r-rlang
    - r-tibble
    - r-tidyr >=1.0.0

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('tidyjson')"           # [not win]
    - "\"%R%\" -e \"library('tidyjson')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/colearendt/tidyjson
  license: MIT
  summary: Turn complex 'JSON' data into tidy data frames.
  license_family: MIT
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/MIT'
    - LICENSE

# The original CRAN metadata for this package was:

# Package: tidyjson
# Title: Tidy Complex 'JSON'
# Version: 0.3.2
# Authors@R: c( person("Jeremy", "Stanley", , "jeremy.stanley@gmail.com", role = "aut"), person("Cole", "Arendt", , "cole@posit.co", role = c("aut", "cre")) )
# Description: Turn complex 'JSON' data into tidy data frames.
# License: MIT + file LICENSE
# URL: https://github.com/colearendt/tidyjson
# BugReports: https://github.com/colearendt/tidyjson/issues
# Depends: R (>= 3.1.0)
# Imports: assertthat, dplyr (>= 1.0.0), jsonlite, magrittr, purrr, rlang, tibble, tidyr (>= 1.0.0)
# Suggests: covr, forcats, ggplot2, igraph, knitr, listviewer, lubridate, RColorBrewer, rmarkdown, rprojroot, testthat (>= 3.0.0), vctrs, viridis, wordcloud
# VignetteBuilder: knitr
# Config/testthat/edition: 3
# Encoding: UTF-8
# LazyData: true
# RoxygenNote: 7.2.1
# NeedsCompilation: no
# Packaged: 2023-01-06 19:11:30 UTC; rstudio-user
# Author: Jeremy Stanley [aut], Cole Arendt [aut, cre]
# Maintainer: Cole Arendt <cole@posit.co>
# Repository: CRAN
# Date/Publication: 2023-01-07 00:20:02 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
