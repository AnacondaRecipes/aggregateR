{% set version = '0.1-6' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-pandocfilters
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/pandocfilters_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/pandocfilters/pandocfilters_{{ version }}.tar.gz
  sha256: d3ce0f54dcfa6965c541f43ac0da2e731d404e6bd39a130a616a584a6c225678

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: knitr
requirements:
  build:
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-jsonlite

  run:
    - r-base
    - r-jsonlite

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('pandocfilters')"           # [not win]
    - "\"%R%\" -e \"library('pandocfilters')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://pandoc.org/, https://github.com/jgm/pandocfilters/
  license: GPL-3
  summary: The document converter 'pandoc' <https://pandoc.org/> is widely used in the R community.
    One feature of 'pandoc' is that it can produce and consume JSON-formatted abstract
    syntax trees (AST). This allows to transform a given source document into JSON-formatted
    AST, alter it by so called filters and pass the altered JSON-formatted AST back
    to 'pandoc'. This package provides functions which allow to write such filters in
    native R code. Although this package is inspired by the Python package 'pandocfilters'
    <https://github.com/jgm/pandocfilters/>, it provides additional convenience functions
    which make it simple to use the 'pandocfilters' package as a report generator. Since
    'pandocfilters' inherits most of it's functionality from 'pandoc' it can create
    documents in many formats (for more information see <https://pandoc.org/>) but is
    also bound to the same limitations as 'pandoc'.
  license_family: GPL3
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-3'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: pandocfilters
# Title: Pandoc Filters for R
# Version: 0.1-6
# Authors@R: c(person("Florian", "Schwendinger", role = c("aut", "cre"), email = "FlorianSchwendinger@gmx.at"), person("Kurt", "Hornik", role = "aut"), person("Andrie", "de Vries", role = "ctb"))
# Description: The document converter 'pandoc' <https://pandoc.org/> is widely used in the R community. One feature of 'pandoc' is that it can produce and consume JSON-formatted abstract syntax trees (AST). This allows to transform a given source document into JSON-formatted AST, alter it by so called filters and pass the altered JSON-formatted AST back to 'pandoc'. This package provides functions which allow to write such filters in native R code. Although this package is inspired by the Python package 'pandocfilters' <https://github.com/jgm/pandocfilters/>, it provides additional convenience functions which make it simple to use the 'pandocfilters' package as a report generator. Since 'pandocfilters' inherits most of it's functionality from 'pandoc' it can create documents in many formats (for more information see <https://pandoc.org/>) but is also bound to the same limitations as 'pandoc'.
# URL: https://pandoc.org/, https://github.com/jgm/pandocfilters/
# Depends: R (>= 3.0.0)
# Imports: jsonlite, utils
# Suggests: knitr
# VignetteBuilder: knitr
# SystemRequirements: pandoc (> 1.12)
# License: GPL-3
# RoxygenNote: 7.2.1
# NeedsCompilation: no
# Packaged: 2022-08-11 20:08:56 UTC; f
# Author: Florian Schwendinger [aut, cre], Kurt Hornik [aut], Andrie de Vries [ctb]
# Maintainer: Florian Schwendinger <FlorianSchwendinger@gmx.at>
# Repository: CRAN
# Date/Publication: 2022-08-11 21:40:02 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
