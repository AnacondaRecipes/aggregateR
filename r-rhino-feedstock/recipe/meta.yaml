{% set version = '1.5.0' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-rhino
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/rhino_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/rhino/rhino_{{ version }}.tar.gz
  sha256: b2692571eb9597c2b1e37787f2a9b87a62db95febf8b0cf8c3b8eb0cc3edbe64

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: covr, knitr, mockery, rcmdcheck, rmarkdown, shiny.react, spelling
requirements:
  build:
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-box >=1.1.3
    - r-cli
    - r-config
    - r-fs
    - r-glue
    - r-lintr >=3.0.0
    - r-logger
    - r-purrr
    - r-renv
    - r-rstudioapi
    - r-sass
    - r-shiny
    - r-styler
    - r-testthat >=3.0.0
    - r-withr
    - r-yaml

  run:
    - r-base
    - r-box >=1.1.3
    - r-cli
    - r-config
    - r-fs
    - r-glue
    - r-lintr >=3.0.0
    - r-logger
    - r-purrr
    - r-renv
    - r-rstudioapi
    - r-sass
    - r-shiny
    - r-styler
    - r-testthat >=3.0.0
    - r-withr
    - r-yaml

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('rhino')"           # [not win]
    - "\"%R%\" -e \"library('rhino')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://appsilon.github.io/rhino/, https://github.com/Appsilon/rhino
  license: LGPL-3
  summary: A framework that supports creating and extending enterprise Shiny applications using
    best practices.
  license_family: LGPL
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/LGPL-3'

# The original CRAN metadata for this package was:

# Package: rhino
# Title: A Framework for Enterprise Shiny Applications
# Version: 1.5.0
# Authors@R: c( person("Kamil", "Zya", role = c("aut", "cre"), email = "opensource+kamil@appsilon.com"), person("Jakub", "Nowicki", role = "aut", email = "kuba@appsilon.com"), person("Leszek", "Sieminski", role = "aut", email = "leszek.sieminski@appsilon.com"), person("Marek", "Rogala", role = "aut", email = "marek@appsilon.com"), person("Recle", "Vibal", role = "aut", email = "recle.vibal@appsilon.com"), person("Tymoteusz", "Makowski", role = "aut", email = "tymoteusz@appsilon.com"), person("Eduardo", "Almeida", role = "ctb", email = "eduardo@appsilon.com"), person("Appsilon Sp. z o.o.", role = "cph", email = "opensource@appsilon.com") )
# Description: A framework that supports creating and extending enterprise Shiny applications using best practices.
# URL: https://appsilon.github.io/rhino/, https://github.com/Appsilon/rhino
# BugReports: https://github.com/Appsilon/rhino/issues
# License: LGPL-3
# Encoding: UTF-8
# RoxygenNote: 7.2.3
# Depends: R (>= 2.10)
# Imports: box (>= 1.1.3), cli, config, fs, glue, lintr (>= 3.0.0), logger, purrr, renv, rstudioapi, sass, shiny, styler, testthat (>= 3.0.0), utils, withr, yaml
# Suggests: covr, knitr, mockery, rcmdcheck, rmarkdown, shiny.react, spelling
# LazyData: true
# Config/testthat/edition: 3
# Config/testthat/parallel: true
# Language: en-US
# NeedsCompilation: no
# Packaged: 2023-09-06 13:41:42 UTC; kuba
# Author: Kamil Zya [aut, cre], Jakub Nowicki [aut], Leszek Sieminski [aut], Marek Rogala [aut], Recle Vibal [aut], Tymoteusz Makowski [aut], Eduardo Almeida [ctb], Appsilon Sp. z o.o. [cph]
# Maintainer: Kamil Zya <opensource+kamil@appsilon.com>
# Repository: CRAN
# Date/Publication: 2023-09-06 14:00:02 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
