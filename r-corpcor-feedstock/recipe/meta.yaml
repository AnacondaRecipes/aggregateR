{% set version = '1.6.10' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-corpcor
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/corpcor_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/corpcor/corpcor_{{ version }}.tar.gz
  sha256: 71a04c503c93ec95ddde09abe8c7ddeb36175b7da76365a14b27066383e10e09

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests:
requirements:
  build:
    - {{ posix }}zip               # [win]

  host:
    - r-base

  run:
    - r-base

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('corpcor')"           # [not win]
    - "\"%R%\" -e \"library('corpcor')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://strimmerlab.github.io/software/corpcor/
  license: GPL-3
  summary: Implements a James-Stein-type shrinkage estimator for the covariance matrix, with
    separate shrinkage for variances and correlations. The details of the method are
    explained in Schafer and Strimmer (2005) <DOI:10.2202/1544-6115.1175> and Opgen-Rhein
    and Strimmer (2007) <DOI:10.2202/1544-6115.1252>.  The approach is both computationally
    as well as statistically very efficient, it is applicable to "small n, large p"
    data, and always returns a positive definite and well-conditioned covariance matrix.
    In addition to inferring the covariance matrix the package also provides shrinkage
    estimators for partial correlations and partial variances. The inverse of the covariance
    and correlation matrix can be efficiently computed, as well as any arbitrary power
    of the shrinkage correlation matrix.  Furthermore, functions are available for fast
    singular value decomposition, for computing the pseudoinverse, and for checking
    the rank and positive definiteness of a matrix.
  license_family: GPL3
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-3'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: corpcor
# Version: 1.6.10
# Date: 2021-09-16
# Title: Efficient Estimation of Covariance and (Partial) Correlation
# Author: Juliane Schafer, Rainer Opgen-Rhein, Verena Zuber, Miika Ahdesmaki, A. Pedro Duarte Silva, and Korbinian Strimmer.
# Maintainer: Korbinian Strimmer <strimmerlab@gmail.com>
# Depends: R (>= 3.0.2)
# Imports: stats
# Suggests:
# Description: Implements a James-Stein-type shrinkage estimator for the covariance matrix, with separate shrinkage for variances and correlations. The details of the method are explained in Schafer and Strimmer (2005) <DOI:10.2202/1544-6115.1175> and Opgen-Rhein and Strimmer (2007) <DOI:10.2202/1544-6115.1252>.  The approach is both computationally as well as statistically very efficient, it is applicable to "small n, large p" data, and always returns a positive definite and well-conditioned covariance matrix. In addition to inferring the covariance matrix the package also provides shrinkage estimators for partial correlations and partial variances. The inverse of the covariance and correlation matrix can be efficiently computed, as well as any arbitrary power of the shrinkage correlation matrix.  Furthermore, functions are available for fast singular value decomposition, for computing the pseudoinverse, and for checking the rank and positive definiteness of a matrix.
# License: GPL (>= 3)
# URL: https://strimmerlab.github.io/software/corpcor/
# NeedsCompilation: no
# Packaged: 2021-09-16 14:05:52 UTC; strimmer
# Repository: CRAN
# Date/Publication: 2021-09-16 15:30:08 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
