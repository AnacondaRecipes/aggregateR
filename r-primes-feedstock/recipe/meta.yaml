{% set version = '1.1.0' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-primes
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/primes_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/primes/primes_{{ version }}.tar.gz
  sha256: 9bf6939afc9cd988e103e491cce6c35e59ef8cee2f57f4506574558472bcc037

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: testthat
requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}make
    - {{ posix }}sed               # [win]
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-rcpp

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-rcpp

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('primes')"           # [not win]
    - "\"%R%\" -e \"library('primes')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/ironholds/primes
  license: MIT
  summary: Fast functions for dealing with prime numbers, such as testing whether a number is
    prime and generating a sequence prime numbers. Additional functions include finding
    prime factors and Ruth-Aaron pairs, finding next and previous prime numbers in the
    series, finding or estimating the nth prime, estimating the number of primes less
    than or equal to an arbitrary number, computing primorials, prime k-tuples (e.g.,
    twin primes), finding the greatest common divisor and smallest (least) common multiple,
    testing whether two numbers are coprime, and computing Euler's totient function.
    Most functions are vectorized for speed and convenience.
  license_family: MIT
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/MIT'
    - LICENSE

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: primes
# Type: Package
# Title: Fast Functions for Prime Numbers
# Version: 1.1.0
# Date: 2020-08-31
# Authors@R: c( person("Os", "Keyes", email = "ironholds@gmail.com", role = c("aut", "cre")), person("Paul", "Egeler", email = "paulegeler@gmail.com", role = c("aut"), comment = c(ORCID = "0000-0001-6948-9498")) )
# Description: Fast functions for dealing with prime numbers, such as testing whether a number is prime and generating a sequence prime numbers. Additional functions include finding prime factors and Ruth-Aaron pairs, finding next and previous prime numbers in the series, finding or estimating the nth prime, estimating the number of primes less than or equal to an arbitrary number, computing primorials, prime k-tuples (e.g., twin primes), finding the greatest common divisor and smallest (least) common multiple, testing whether two numbers are coprime, and computing Euler's totient function. Most functions are vectorized for speed and convenience.
# License: MIT + file LICENSE
# Depends: R (>= 2.10)
# Imports: Rcpp
# LinkingTo: Rcpp
# Suggests: testthat
# SystemRequirements: C++11
# URL: https://github.com/ironholds/primes
# BugReports: https://github.com/ironholds/primes/issues
# RoxygenNote: 7.1.1
# Encoding: UTF-8
# LazyData: true
# NeedsCompilation: yes
# Packaged: 2020-09-02 15:28:23 UTC; ironholds
# Author: Os Keyes [aut, cre], Paul Egeler [aut] (<https://orcid.org/0000-0001-6948-9498>)
# Maintainer: Os Keyes <ironholds@gmail.com>
# Repository: CRAN
# Date/Publication: 2020-09-03 06:40:07 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
