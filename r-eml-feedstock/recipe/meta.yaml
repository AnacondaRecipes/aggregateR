{% set version = '2.0.6.1' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-eml
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/EML_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/EML/EML_{{ version }}.tar.gz
  sha256: ea1f075d774cad736098ac8863a1663511892ea6f1e119b534aa476cbe834ccc

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: knitr, taxadb, tibble, testthat, covr, EML, units, htmlwidgets, shiny, shinyjs, spelling
requirements:
  build:
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-digest
    - r-dplyr
    - r-emld >=0.5.0
    - r-jqr
    - r-jsonlite
    - r-rmarkdown
    - r-uuid
    - r-xml2

  run:
    - r-base
    - r-digest
    - r-dplyr
    - r-emld >=0.5.0
    - r-jqr
    - r-jsonlite
    - r-rmarkdown
    - r-uuid
    - r-xml2

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('EML')"           # [not win]
    - "\"%R%\" -e \"library('EML')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://docs.ropensci.org/EML/, https://github.com/ropensci/EML/
  license: MIT
  summary: Work with Ecological Metadata Language ('EML') files. 'EML' is a widely used metadata
    standard in the ecological and environmental sciences, described in Jones et al.
    (2006), <doi:10.1146/annurev.ecolsys.37.091305.110031>.
  license_family: MIT
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/MIT'
    - LICENSE

# The original CRAN metadata for this package was:

# Package: EML
# Type: Package
# Title: Read and Write Ecological Metadata Language Files
# Description: Work with Ecological Metadata Language ('EML') files. 'EML' is a widely used metadata standard in the ecological and environmental sciences, described in Jones et al. (2006), <doi:10.1146/annurev.ecolsys.37.091305.110031>.
# Version: 2.0.6.1
# Authors@R: c( person("Carl", "Boettiger", email = "cboettig@gmail.com", role = c("aut", "cre", "cph"), comment=c(ORCID = "0000-0002-1642-628X")), person("Matthew B.", "Jones", role="aut", comment = c(ORCID="0000-0003-0077-4738")), person("Mitchell", "Maier", role = c("ctb"), comment= c(ORCID = "0000-0001-6955-0535")), person("Bryce", "Mecum", role = "ctb", email = "brycemecum@gmail.com", comment = c(ORCID = "0000-0002-0381-3766")), person("Maelle", "Salmon", role = "ctb", email = "maelle.salmon@yahoo.se", comment = c(ORCID = "0000-0002-2815-0399")), person("Jeanette", "Clark", role = "ctb", email = "jclark@nceas.ucsb.edu", comment = c(ORCID = "0000-0003-4703-1974")) )
# License: MIT + file LICENSE
# URL: https://docs.ropensci.org/EML/, https://github.com/ropensci/EML/
# BugReports: https://github.com/ropensci/EML/issues
# Encoding: UTF-8
# LazyData: true
# Depends: R (>= 2.10)
# Suggests: knitr, taxadb, tibble, testthat, covr, EML, units, htmlwidgets, shiny, shinyjs, spelling
# Imports: xml2, methods, digest, emld (>= 0.5.0), jqr, jsonlite, uuid, rmarkdown, utils, dplyr
# VignetteBuilder: knitr
# RoxygenNote: 7.1.1
# Language: en-US
# NeedsCompilation: no
# Packaged: 2022-04-28 17:05:30 UTC; cboettig
# Author: Carl Boettiger [aut, cre, cph] (<https://orcid.org/0000-0002-1642-628X>), Matthew B. Jones [aut] (<https://orcid.org/0000-0003-0077-4738>), Mitchell Maier [ctb] (<https://orcid.org/0000-0001-6955-0535>), Bryce Mecum [ctb] (<https://orcid.org/0000-0002-0381-3766>), Maelle Salmon [ctb] (<https://orcid.org/0000-0002-2815-0399>), Jeanette Clark [ctb] (<https://orcid.org/0000-0003-4703-1974>)
# Maintainer: Carl Boettiger <cboettig@gmail.com>
# Repository: CRAN
# Date/Publication: 2022-04-28 17:40:02 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
