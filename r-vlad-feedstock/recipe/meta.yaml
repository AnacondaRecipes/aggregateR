{% set version = '0.2.0' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-vlad
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/vlad_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/vlad/vlad_{{ version }}.tar.gz
  sha256: 172a2f3467d2c3cd36f47b6936861a3f9562bb791bcca9f1da9625178a0d092f

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: dplyr, ggplot2, parallel, rmarkdown, spcadjust (>= 1.1), testthat, tidyr
requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{posix}}filesystem        # [win]
    - {{posix}}make
    - {{posix}}sed               # [win]
    - {{posix}}coreutils         # [win]
    - {{posix}}zip               # [win]

  host:
    - r-base
    - r-rcpp >=0.12.12
    - r-rcpparmadillo

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-rcpp >=0.12.12
    - r-rcpparmadillo

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('vlad')"           # [not win]
    - "\"%R%\" -e \"library('vlad')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=vlad
  license: GPL-2
  summary: 'Contains functions to set up risk-adjusted quality control charts in health care.
    For the variable life adjusted display (VLAD) proposed by  Lovegrove et al. (1997)
    <doi:10.1016/S0140-6736(97)06507-0> signaling rules derived in Wittenberg et al.
    (2018) <doi: 10.1002/sim.7647> are implemented.  Additionally, for the risk-adjusted
    cumulative sum chart based on log-likelihood ratio statistic introduced by Steiner
    et al. (2000) <doi:10.1093/biostatistics/1.4.441> average run length and control
    limits can be computed.'

  license_family: GPL2
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: vlad
# Type: Package
# Title: Variable Life Adjusted Display and Other Risk-Adjusted Quality Control Charts
# Version: 0.2.0
# Authors@R: c( person("Philipp", "Wittenberg",  email = "pwitten@hsu-hh.de",  role = c("aut", "cre"), comment = c(ORCID = "0000-0001-7151-8243")), person("Sven", "Knoth",  email = "<Sven.Knoth@gmx.de>",  role = c("aut", "ths"), comment = c(ORCID = "0000-0002-9666-5554")))
# Depends: R (>= 2.10)
# Maintainer: Philipp Wittenberg <pwitten@hsu-hh.de>
# BugReports: https://github.com/wittenberg/vlad/issues
# Description: Contains functions to set up risk-adjusted quality control charts in health care. For the variable life adjusted display (VLAD) proposed by  Lovegrove et al. (1997) <doi:10.1016/S0140-6736(97)06507-0> signaling rules derived in Wittenberg et al. (2018) <doi: 10.1002/sim.7647> are implemented.  Additionally, for the risk-adjusted cumulative sum chart based on log-likelihood ratio statistic introduced by Steiner et al. (2000) <doi:10.1093/biostatistics/1.4.441> average run length and control limits can be computed.
# License: GPL (>= 2)
# NeedsCompilation: yes
# SystemRequirements: C++11
# Encoding: UTF-8
# LazyData: true
# Imports: Rcpp (>= 0.12.12)
# Suggests: dplyr, ggplot2, parallel, rmarkdown, spcadjust (>= 1.1), testthat, tidyr
# LinkingTo: Rcpp, RcppArmadillo
# RoxygenNote: 6.1.1
# Packaged: 2018-12-05 14:11:16 UTC; pwitten
# Author: Philipp Wittenberg [aut, cre] (<https://orcid.org/0000-0001-7151-8243>), Sven Knoth [aut, ths] (<https://orcid.org/0000-0002-9666-5554>)
# Repository: CRAN
# Date/Publication: 2018-12-06 08:50:03 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
