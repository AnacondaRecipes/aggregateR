{% set version = '2.0.0.1' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-processx
  version: {{ version|replace("-", "_") }}

source:
  fn: processx_{{ version }}.tar.gz
  url:
    - https://cran.r-project.org/src/contrib/processx_{{ version }}.tar.gz
    - https://cran.r-project.org/src/contrib/Archive/processx/processx_{{ version }}.tar.gz
  sha256: 8f61b2952d0f2d13c74465bfba174ce11eee559475c2f7b9be6bcb9e2e1d827b


  # patches:
   # List any patch files here
   # - fix.patch

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0


  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: covr, testthat, withr
requirements:
  build:
    - {{ compiler('c') }}        # [not win]
    - {{native}}toolchain        # [win]
    - {{posix}}filesystem        # [win]
    - {{posix}}make

  host:
    - r-base
    - r-r6
    - r-assertthat
    - r-crayon
    - r-debugme

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-r6
    - r-assertthat
    - r-crayon
    - r-debugme

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('processx')"           # [not win]
    - "\"%R%\" -e \"library('processx')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/r-pkgs/processx#readme
  license: MIT + file LICENSE
  summary: Portable tools to run system processes in the background. It can check if a background
    process is running; wait on a background process to finish; get the exit status
    of finished processes; kill background processes and their children; restart processes.
    It can read the standard output and error of the processes, using non-blocking connections.
    'processx' can poll a process for standard output or error, with a timeout. It can
    also poll several processes at once.
  license_family: MIT

extra:
  recipe-maintainers:
    - mingwandroid

# The original CRAN metadata for this package was:

# Package: processx
# Title: Execute and Control System Processes
# Version: 2.0.0.1
# Author: Gabor Csardi
# Maintainer: Gabor Csardi <csardi.gabor@gmail.com>
# Description: Portable tools to run system processes in the background. It can check if a background process is running; wait on a background process to finish; get the exit status of finished processes; kill background processes and their children; restart processes. It can read the standard output and error of the processes, using non-blocking connections. 'processx' can poll a process for standard output or error, with a timeout. It can also poll several processes at once.
# License: MIT + file LICENSE
# LazyData: true
# URL: https://github.com/r-pkgs/processx#readme
# BugReports: https://github.com/r-pkgs/processx/issues
# RoxygenNote: 6.0.1.9000
# Suggests: covr, testthat, withr
# Imports: assertthat, crayon, debugme, R6, utils
# Encoding: UTF-8
# NeedsCompilation: yes
# Packaged: 2017-07-30 06:19:45 UTC; ripley
# Repository: CRAN
# Date/Publication: 2017-07-30 06:34:51 UTC

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
