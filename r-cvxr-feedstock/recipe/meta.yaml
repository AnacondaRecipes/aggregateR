{% set version = '1.0-11' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-cvxr
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/CVXR_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/CVXR/CVXR_{{ version }}.tar.gz
  sha256: e92a9638f35f4909e2a29c3b7106081e3dae7ff88b14bb6466b87fbdc80b972a

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: knitr, rmarkdown, testthat, nnls, slam, covr
requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}make
    - {{ posix }}sed               # [win]
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-ecosolver >=0.5.4
    - r-matrix
    - r-r6
    - r-rcpp >=0.12.12
    - r-rcppeigen
    - r-rmpfr
    - r-bit64
    - r-gmp
    - r-osqp
    - r-scs >=3.0

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-ecosolver >=0.5.4
    - r-matrix
    - r-r6
    - r-rcpp >=0.12.12
    - r-rcppeigen
    - r-rmpfr
    - r-bit64
    - r-gmp
    - r-osqp
    - r-scs >=3.0

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('CVXR')"           # [not win]
    - "\"%R%\" -e \"library('CVXR')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://cvxr.rbind.io, https://www.cvxgrp.org/CVXR/
  license: Apache License 2.0 | file LICENSE
  summary: An object-oriented modeling language for disciplined convex programming (DCP) as described
    in Fu, Narasimhan, and Boyd (2020, <doi:10.18637/jss.v094.i14>). It allows the user
    to formulate convex optimization problems in a natural way following mathematical
    convention and DCP rules. The system analyzes the problem, verifies its convexity,
    converts it into a canonical form, and hands it off to an appropriate solver to
    obtain the solution. Interfaces to solvers on CRAN and elsewhere are provided, both
    commercial and open source.
  license_family: APACHE
  license_file:
    - LICENSE

# The original CRAN metadata for this package was:

# Package: CVXR
# Type: Package
# Title: Disciplined Convex Optimization
# Version: 1.0-11
# VignetteBuilder: knitr
# Authors@R: c( person("Anqi", "Fu", role=c("aut", "cre"), email = "anqif@alumni.stanford.edu"), person("Balasubramanian", "Narasimhan", role=c("aut"), email = "naras@stat.stanford.edu"), person("David W", "Kang", role=c("aut"), email = "Dkang9503@gmail.com"), person("Steven", "Diamond", role=c("aut"), email = "stevend2@stanford.edu"), person("John", "Miller", role=c("aut"), email = "miller_john@berkeley.edu"), person("Stephen", "Boyd", role=c("ctb"), email = "boyd@stanford.edu"), person("Paul Kunsberg", "Rosenfield", role=c("ctb"), email = "prosenfield@farmersbusinessnetwork.com") )
# URL: https://cvxr.rbind.io, https://www.cvxgrp.org/CVXR/
# BugReports: https://github.com/cvxgrp/CVXR/issues
# Description: An object-oriented modeling language for disciplined convex programming (DCP) as described in Fu, Narasimhan, and Boyd (2020, <doi:10.18637/jss.v094.i14>). It allows the user to formulate convex optimization problems in a natural way following mathematical convention and DCP rules. The system analyzes the problem, verifies its convexity, converts it into a canonical form, and hands it off to an appropriate solver to obtain the solution. Interfaces to solvers on CRAN and elsewhere are provided, both commercial and open source.
# Additional_repositories: https://bnaras.github.io/drat
# Depends: R (>= 3.4.0)
# Imports: methods, R6, Matrix, Rcpp (>= 0.12.12), bit64, gmp, Rmpfr, ECOSolveR (>= 0.5.4), scs (>= 3.0), stats, osqp
# Suggests: knitr, rmarkdown, testthat, nnls, slam, covr
# LinkingTo: Rcpp, RcppEigen
# License: Apache License 2.0 | file LICENSE
# LazyData: true
# Collate: 'CVXR.R' 'data.R' 'globals.R' 'generics.R' 'interface.R' 'canonical.R' 'expressions.R' 'constant.R' 'variable.R' 'lin_ops.R' 'atoms.R' 'affine.R' 'problem.R' 'constraints.R' 'elementwise.R' 'coeff_extractor.R' 'reductions.R' 'reduction_solvers.R' 'complex2real.R' 'conic_solvers.R' 'eliminate_pwl.R' 'dcp2cone.R' 'dgp2dcp.R' 'qp2quad_form.R' 'qp_solvers.R' 'utilities.R' 'solver_utilities.R' 'transforms.R' 'exports.R' 'rcppUtils.R' 'R6List.R' 'ProblemData-R6.R' 'LinOp-R6.R' 'LinOpVector-R6.R' 'RcppExports.R' 'CVXcanon-R6.R' 'Deque.R' 'canonInterface.R'
# RoxygenNote: 7.2.1
# Encoding: UTF-8
# Enhances: Rcplex, gurobi, rcbc, cccp, Rmosek, Rglpk
# NeedsCompilation: yes
# Packaged: 2022-10-30 14:46:57 UTC; naras
# Author: Anqi Fu [aut, cre], Balasubramanian Narasimhan [aut], David W Kang [aut], Steven Diamond [aut], John Miller [aut], Stephen Boyd [ctb], Paul Kunsberg Rosenfield [ctb]
# Maintainer: Anqi Fu <anqif@alumni.stanford.edu>
# Repository: CRAN
# Date/Publication: 2022-10-30 21:32:47 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
