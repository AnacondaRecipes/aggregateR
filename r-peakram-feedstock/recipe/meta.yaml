{% set version = '1.0.2' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-peakram
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/peakRAM_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/peakRAM/peakRAM_{{ version }}.tar.gz
  sha256: 7bb3f1d83029ec6bb6620cb5c0868bd5edb7b606758aa77a307eba8925724756

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: knitr, rmarkdown
requirements:
  build:
    - {{posix}}zip               # [win]

  host:
    - r-base

  run:
    - r-base

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('peakRAM')"           # [not win]
    - "\"%R%\" -e \"library('peakRAM')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: http://github.com/tpq/peakRAM
  license: GPL-2
  summary: When working with big data sets, RAM conservation is critically important. However,
    it is not always enough to just monitor the size of the objects created. So-called
    "copy-on-modify" behavior, characteristic of R, means that some expressions or functions
    may require an unexpectedly large amount of RAM overhead. For example, replacing
    a single value in a matrix duplicates that matrix in the back-end, making this task
    require twice as much RAM as that used by the matrix itself. This package makes
    it easy to monitor the total and peak RAM used so that developers can quickly identify
    and eliminate RAM hungry code.
  license_family: GPL2
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: peakRAM
# Title: Monitor the Total and Peak RAM Used by an Expression or Function
# Version: 1.0.2
# URL: http://github.com/tpq/peakRAM
# BugReports: http://github.com/tpq/peakRAM/issues
# Authors@R: c( person("Thomas", "Quinn", email = "contacttomquinn@gmail.com", role = c("aut", "cre")) )
# Description: When working with big data sets, RAM conservation is critically important. However, it is not always enough to just monitor the size of the objects created. So-called "copy-on-modify" behavior, characteristic of R, means that some expressions or functions may require an unexpectedly large amount of RAM overhead. For example, replacing a single value in a matrix duplicates that matrix in the back-end, making this task require twice as much RAM as that used by the matrix itself. This package makes it easy to monitor the total and peak RAM used so that developers can quickly identify and eliminate RAM hungry code.
# License: GPL-2
# LazyData: true
# VignetteBuilder: knitr
# RoxygenNote: 5.0.1
# Depends: R (>= 3.2.2)
# Suggests: knitr, rmarkdown
# NeedsCompilation: no
# Packaged: 2017-01-15 20:49:59 UTC; thom
# Author: Thomas Quinn [aut, cre]
# Maintainer: Thomas Quinn <contacttomquinn@gmail.com>
# Repository: CRAN
# Date/Publication: 2017-01-16 00:03:39

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
