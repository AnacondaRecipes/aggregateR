{% set version = '0.9-1' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-parallelize.dynamic
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/parallelize.dynamic_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/parallelize.dynamic/parallelize.dynamic_{{ version }}.tar.gz
  sha256: 96c29a8837f11380cc31fcafdc67941b2f01c7ebabb4da8c7f93c73037bbfe0f

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{posix}}zip               # [win]

  host:
    - r-base

  run:
    - r-base

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('parallelize.dynamic')"           # [not win]
    - "\"%R%\" -e \"library('parallelize.dynamic')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=parallelize.dynamic
  license: LGPL-3
  summary: Passing a given function name or a call to the parallelize/parallelize_call functions
    analyses and executes the code, if possible in parallel. Parallel code execution
    can be performed locally or on remote batch queuing systems.
  license_family: LGPL
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/LGPL-3'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: parallelize.dynamic
# Type: Package
# Title: Automate parallelization of function calls by means of dynamic code analysis
# Version: 0.9-1
# Date: 2013-01-24
# Author: Stefan Boehringer <r-packages@s-boehringer.org>
# Maintainer: Stefan Boehringer <r-packages@s-boehringer.org>
# Description: Passing a given function name or a call to the parallelize/parallelize_call functions analyses and executes the code, if possible in parallel. Parallel code execution can be performed locally or on remote batch queuing systems.
# License: LGPL
# Depends: methods, tools, parallel
# Encoding: UTF-8
# Packaged: 2013-05-22 15:46:42 UTC; pingu
# NeedsCompilation: no
# Repository: CRAN
# Date/Publication: 2013-05-22 20:25:33

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
