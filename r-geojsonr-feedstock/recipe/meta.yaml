{% set version = '1.1.0' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-geojsonr
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/geojsonR_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/geojsonR/geojsonR_{{ version }}.tar.gz
  sha256: 8d3cc70ffc4e135aca2a6df8ff2e9be2f8e3f16ecd962aee9ab7166a75f9157b

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: testthat, covr, knitr, rmarkdown
requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}make
    - {{ posix }}sed               # [win]
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-r6
    - r-rcpp >=0.12.9
    - r-rcpparmadillo >=0.7.6

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-r6
    - r-rcpp >=0.12.9
    - r-rcpparmadillo >=0.7.6

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('geojsonR')"           # [not win]
    - "\"%R%\" -e \"library('geojsonR')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/mlampros/geojsonR
  license: MIT
  summary: Includes functions for processing GeoJson objects <https://en.wikipedia.org/wiki/GeoJSON>
    relying on 'RFC 7946' <https://tools.ietf.org/pdf/rfc7946.pdf>. The geojson encoding
    is based on 'json11', a tiny JSON library for 'C++11' <https://github.com/dropbox/json11>.
    Furthermore, the source code is exported in R through the 'Rcpp' and 'RcppArmadillo'
    packages.
  license_family: MIT
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/MIT'
    - LICENSE

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: geojsonR
# Type: Package
# Title: A GeoJson Processing Toolkit
# Version: 1.1.0
# Date: 2021-05-03
# Authors@R: c( person(given = "Lampros", family = "Mouselimis", email = "mouselimislampros@gmail.com", role = c("aut", "cre"), comment = c(ORCID = "https://orcid.org/0000-0002-8024-1546")), person("Dropbox", "Inc", role = "cph"))
# BugReports: https://github.com/mlampros/geojsonR/issues
# URL: https://github.com/mlampros/geojsonR
# Description: Includes functions for processing GeoJson objects <https://en.wikipedia.org/wiki/GeoJSON> relying on 'RFC 7946' <https://tools.ietf.org/pdf/rfc7946.pdf>. The geojson encoding is based on 'json11', a tiny JSON library for 'C++11' <https://github.com/dropbox/json11>. Furthermore, the source code is exported in R through the 'Rcpp' and 'RcppArmadillo' packages.
# License: MIT + file LICENSE
# Copyright: inst/COPYRIGHTS
# SystemRequirements: libarmadillo: apt-get install -y libarmadillo-dev (deb)
# Depends: R(>= 3.2.3)
# Imports: Rcpp (>= 0.12.9), R6
# LinkingTo: Rcpp, RcppArmadillo (>= 0.7.6)
# Suggests: testthat, covr, knitr, rmarkdown
# VignetteBuilder: knitr
# RoxygenNote: 7.1.1
# NeedsCompilation: yes
# Packaged: 2021-05-03 18:48:06 UTC; lampros
# Author: Lampros Mouselimis [aut, cre] (<https://orcid.org/0000-0002-8024-1546>), Dropbox Inc [cph]
# Maintainer: Lampros Mouselimis <mouselimislampros@gmail.com>
# Repository: CRAN
# Date/Publication: 2021-05-04 05:30:02 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
