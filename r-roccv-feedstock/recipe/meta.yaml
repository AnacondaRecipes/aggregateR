{% set version = '1.2' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-roccv
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/roccv_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/roccv/roccv_{{ version }}.tar.gz
  sha256: c1c51b37a455354498422d6c8fa89b97ea3111c5f77664026f27fdc5fe1378a2

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{posix}}zip               # [win]

  host:
    - r-base
    - r-glmnet
    - r-proc

  run:
    - r-base
    - r-glmnet
    - r-proc

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('roccv')"           # [not win]
    - "\"%R%\" -e \"library('roccv')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=roccv
  license: MIT
  summary: 'Cross validate large genetic data while specifying clinical variables that should
    always be in the model using the function cv(). An ROC plot from the cross validation
    data with AUC can be obtained using rocplot(), which also can be used to compare
    different models. Framework was built to handle genetic data, but works for any
    data.  '

  license_family: MIT
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/MIT'
    - LICENSE

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: roccv
# Type: Package
# Title: ROC for Cross Validation Results
# Version: 1.2
# Date: 2019-05-10
# Author: Ben Sherwood [aut, cre]
# Depends: R (>= 3.0.0), glmnet, parallel, pROC
# Maintainer: Ben Sherwood <ben.sherwood@ku.edu>
# Description: Cross validate large genetic data while specifying clinical variables that should always be in the model using the function cv(). An ROC plot from the cross validation data with AUC can be obtained using rocplot(), which also can be used to compare different models. Framework was built to handle genetic data, but works for any data.
# ByteCompile: TRUE
# License: MIT + file LICENSE
# RoxygenNote: 5.0.1
# NeedsCompilation: no
# Packaged: 2019-05-10 15:51:48 UTC; bsherwoo
# Repository: CRAN
# Date/Publication: 2019-05-10 16:20:03 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
