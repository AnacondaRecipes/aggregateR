{% set version = '1.1.2' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-stplanr
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/stplanr_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/stplanr/stplanr_{{ version }}.tar.gz
  sha256: 6e097d65a508e18e11f56ad36669393063ff9e7d260092b1da6a6213126a6258

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: cyclestreets, dodgr (>= 0.2.15), geodist, igraph (>= 1.2.2), knitr (>= 1.20), leaflet, mapsapi, opentripplanner, osrm, pct, rmarkdown (>= 1.10), testthat (>= 2.0.0), tmap
requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-rcpp >=0.12.1
    - r-curl >=3.2
    - r-data.table
    - r-dplyr >=0.7.6
    - r-httr >=1.3.1
    - r-jsonlite >=1.5
    - r-lwgeom >=0.1.4
    - r-magrittr
    - r-nabor >=0.5.0
    - r-od
    - r-pbapply
    - r-rlang >=0.2.2
    - r-sf >=0.6.3
    - r-sfheaders

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-rcpp >=0.12.1
    - r-curl >=3.2
    - r-data.table
    - r-dplyr >=0.7.6
    - r-httr >=1.3.1
    - r-jsonlite >=1.5
    - r-lwgeom >=0.1.4
    - r-magrittr
    - r-nabor >=0.5.0
    - r-od
    - r-pbapply
    - r-rlang >=0.2.2
    - r-sf >=0.6.3
    - r-sfheaders

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('stplanr')"           # [not win]
    - "\"%R%\" -e \"library('stplanr')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/ropensci/stplanr, https://docs.ropensci.org/stplanr/
  license: MIT
  summary: Tools for transport planning with an emphasis on spatial transport data and non-motorized
    modes. Create geographic "desire lines" from origin-destination (OD) data (building
    on the 'od' package); calculate routes on the transport network locally and via
    interfaces to routing services such as <https://cyclestreets.net/>; calculate route
    segment attributes such as bearing.  The package implements the 'travel flow aggregration'
    method described in Morgan and Lovelace (2020) <doi:10.1177/2399808320942779>.  Further
    information on the package's aim and scope can be found in the vignettes and in
    a paper in the R Journal (Lovelace and Ellison 2018) <doi:10.32614/RJ-2018-053>.
  license_family: MIT
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/MIT'
    - LICENSE

# The original CRAN metadata for this package was:

# Type: Package
# Package: stplanr
# Title: Sustainable Transport Planning
# Version: 1.1.2
# Authors@R: c( person("Robin", "Lovelace", , "rob00x@gmail.com", role = c("aut", "cre"), comment = c(ORCID = "0000-0001-5679-6536")), person("Richard", "Ellison", role = "aut"), person("Malcolm", "Morgan", role = "aut", comment = c(ORCID = "0000-0002-9488-9183")), person("Barry", "Rowlingson", role = "ctb"), person("Nick", "Bearman", role = "ctb"), person("Nikolai", "Berkoff", role = "ctb"), person("Scott ", "Chamberlain", role = "rev", comment = "Scott reviewed the package for rOpenSci, see https://github.com/ropensci/onboarding/issues/10"), person("Mark", "Padgham", , "mark.padgham@email.com", role = "ctb"), person("Zhao", "Wang", role = "ctb", comment = c(ORCID = "0000-0002-4054-0533")), person("Andrea", "Gilardi", role = "ctb", comment = c(ORCID = "0000-0002-9424-7439")) )
# Maintainer: Robin Lovelace <rob00x@gmail.com>
# Description: Tools for transport planning with an emphasis on spatial transport data and non-motorized modes. Create geographic "desire lines" from origin-destination (OD) data (building on the 'od' package); calculate routes on the transport network locally and via interfaces to routing services such as <https://cyclestreets.net/>; calculate route segment attributes such as bearing.  The package implements the 'travel flow aggregration' method described in Morgan and Lovelace (2020) <doi:10.1177/2399808320942779>.  Further information on the package's aim and scope can be found in the vignettes and in a paper in the R Journal (Lovelace and Ellison 2018) <doi:10.32614/RJ-2018-053>.
# License: MIT + file LICENSE
# URL: https://github.com/ropensci/stplanr, https://docs.ropensci.org/stplanr/
# BugReports: https://github.com/ropensci/stplanr/issues
# Depends: R (>= 3.5.0)
# Imports: curl (>= 3.2), data.table, dplyr (>= 0.7.6), httr (>= 1.3.1), jsonlite (>= 1.5), lwgeom (>= 0.1.4), magrittr, methods, nabor (>= 0.5.0), od, pbapply, Rcpp (>= 0.12.1), rlang (>= 0.2.2), sf (>= 0.6.3), sfheaders
# Suggests: cyclestreets, dodgr (>= 0.2.15), geodist, igraph (>= 1.2.2), knitr (>= 1.20), leaflet, mapsapi, opentripplanner, osrm, pct, rmarkdown (>= 1.10), testthat (>= 2.0.0), tmap
# VignetteBuilder: knitr
# Encoding: UTF-8
# LazyData: yes
# RoxygenNote: 7.2.3
# SystemRequirements: GNU make
# NeedsCompilation: no
# Packaged: 2023-09-15 07:58:02 UTC; robin
# Author: Robin Lovelace [aut, cre] (<https://orcid.org/0000-0001-5679-6536>), Richard Ellison [aut], Malcolm Morgan [aut] (<https://orcid.org/0000-0002-9488-9183>), Barry Rowlingson [ctb], Nick Bearman [ctb], Nikolai Berkoff [ctb], Scott Chamberlain [rev] (Scott reviewed the package for rOpenSci, see https://github.com/ropensci/onboarding/issues/10), Mark Padgham [ctb], Zhao Wang [ctb] (<https://orcid.org/0000-0002-4054-0533>), Andrea Gilardi [ctb] (<https://orcid.org/0000-0002-9424-7439>)
# Repository: CRAN
# Date/Publication: 2023-09-15 08:22:05 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
