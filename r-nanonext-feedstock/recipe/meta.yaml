{% set version = '0.10.2' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-nanonext
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/nanonext_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/nanonext/nanonext_{{ version }}.tar.gz
  sha256: b33bd1f5996b30da420691ea3719a6da0d84d6e8e514c3a062a9eb60e3ea8fb9

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  skip: true  # [win]

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}sed               # [win]
    - {{ posix }}grep              # [win]
    - {{ posix }}autoconf
    - {{ posix }}automake          # [not win]
    - {{ posix }}automake-wrapper  # [win]
    - {{ posix }}pkg-config
    - {{ posix }}make
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]
    - cmake

  host:
    - r-base

  run:
    - r-base
    - {{native}}gcc-libs         # [win]

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('nanonext')"           # [not win]
    - "\"%R%\" -e \"library('nanonext')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://shikokuchuo.net/nanonext/, https://github.com/shikokuchuo/nanonext/
  license: GPL-3
  summary: R binding for NNG (Nanomsg Next Gen), a successor to ZeroMQ. NNG is a socket library
    providing high-performance scalability protocols, a cross-platform standard for
    messaging and communications. Serves as a concurrency framework for building distributed
    applications, utilising 'aio' objects which resolve automatically upon completion
    of asynchronous operations. Implements connections with transport layer security,
    and synchronisation primitives, which allow R execution to wait upon events being
    signalled by concurrent messaging threads.
  license_family: GPL3
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-3'

# The original CRAN metadata for this package was:

# Package: nanonext
# Type: Package
# Title: NNG (Nanomsg Next Gen) Lightweight Messaging Library
# Version: 0.10.2
# Description: R binding for NNG (Nanomsg Next Gen), a successor to ZeroMQ. NNG is a socket library providing high-performance scalability protocols, a cross-platform standard for messaging and communications. Serves as a concurrency framework for building distributed applications, utilising 'aio' objects which resolve automatically upon completion of asynchronous operations. Implements connections with transport layer security, and synchronisation primitives, which allow R execution to wait upon events being signalled by concurrent messaging threads.
# Authors@R: c(person(given = "Charlie", family = "Gao", role = c("aut", "cre"), email = "charlie.gao@shikokuchuo.net", comment = c(ORCID = "0000-0002-0750-061X")), person(given = "Hibiki AI Limited", role = "cph"), person(given = "R Consortium", role = "fnd"))
# License: GPL (>= 3)
# BugReports: https://github.com/shikokuchuo/nanonext/issues
# URL: https://shikokuchuo.net/nanonext/, https://github.com/shikokuchuo/nanonext/
# Encoding: UTF-8
# SystemRequirements: 'libnng' >= 1.5 and 'libmbedtls' >= 2.5, or 'cmake' to compile NNG and/or Mbed TLS included in package sources
# Depends: R (>= 3.5)
# RoxygenNote: 7.2.3
# NeedsCompilation: yes
# Packaged: 2023-09-27 06:06:35 UTC; cg334
# Author: Charlie Gao [aut, cre] (<https://orcid.org/0000-0002-0750-061X>), Hibiki AI Limited [cph], R Consortium [fnd]
# Maintainer: Charlie Gao <charlie.gao@shikokuchuo.net>
# Repository: CRAN
# Date/Publication: 2023-09-27 10:30:03 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
