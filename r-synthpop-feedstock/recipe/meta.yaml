{% set version = '1.8-0' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-synthpop
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/synthpop_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/synthpop/synthpop_{{ version }}.tar.gz
  sha256: 6ace7ffaf49df0d998dc6d950b3e8fabd7618710f99ea2cb05b2ff7ce11e5852

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-mass
    - r-broman
    - r-classint
    - r-foreign
    - r-ggplot2
    - r-lattice
    - r-mipfp
    - r-nnet
    - r-party
    - r-plyr
    - r-polspline
    - r-proto
    - r-randomforest
    - r-ranger
    - r-rmutil
    - r-rpart
    - r-stringr
    - r-survival

  run:
    - r-base
    - r-mass
    - r-broman
    - r-classint
    - r-foreign
    - r-ggplot2
    - r-lattice
    - r-mipfp
    - r-nnet
    - r-party
    - r-plyr
    - r-polspline
    - r-proto
    - r-randomforest
    - r-ranger
    - r-rmutil
    - r-rpart
    - r-stringr
    - r-survival

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('synthpop')"           # [not win]
    - "\"%R%\" -e \"library('synthpop')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://www.synthpop.org.uk/
  license: GPL-2 | GPL-3
  summary: A tool for producing synthetic versions of microdata containing confidential information
    so that they are safe to be released to users for exploratory analysis. The key
    objective of generating synthetic data is to replace sensitive original values with
    synthetic ones causing minimal distortion of the statistical information contained
    in the data set. Variables, which can be categorical or continuous, are synthesised
    one-by-one using sequential modelling. Replacements are generated by drawing from
    conditional distributions fitted to the original data using parametric or classification
    and regression trees models. Data are synthesised via the function syn() which can
    be largely automated, if default settings are used, or with methods defined by the
    user. Optional parameters can be used to influence the disclosure risk and the analytical
    quality of the synthesised data. For a description of the implemented method see
    Nowok, Raab and Dibben (2016) <doi:10.18637/jss.v074.i11>.
  license_family: GPL3
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-3'

# The original CRAN metadata for this package was:

# Package: synthpop
# Type: Package
# Title: Generating Synthetic Versions of Sensitive Microdata for Statistical Disclosure Control
# Version: 1.8-0
# Date: 2022-08-31
# Author: Beata Nowok [aut, cre], Gillian M Raab [aut], Chris Dibben [ctb], Joshua Snoke [ctb], Caspar van Lissa [ctb]
# Maintainer: Beata Nowok <beata.nowok@gmail.com>
# Description: A tool for producing synthetic versions of microdata containing confidential information so that they are safe to be released to users for exploratory analysis. The key objective of generating synthetic data is to replace sensitive original values with synthetic ones causing minimal distortion of the statistical information contained in the data set. Variables, which can be categorical or continuous, are synthesised one-by-one using sequential modelling. Replacements are generated by drawing from conditional distributions fitted to the original data using parametric or classification and regression trees models. Data are synthesised via the function syn() which can be largely automated, if default settings are used, or with methods defined by the user. Optional parameters can be used to influence the disclosure risk and the analytical quality of the synthesised data. For a description of the implemented method see Nowok, Raab and Dibben (2016) <doi:10.18637/jss.v074.i11>.
# License: GPL-2 | GPL-3
# URL: https://www.synthpop.org.uk/
# Imports: lattice, MASS, methods, nnet, ggplot2, graphics, stats, utils, rpart, party, foreign, plyr, proto, polspline, randomForest, ranger, classInt, mipfp, survival, stringr, rmutil, broman
# LazyData: yes
# NeedsCompilation: no
# Packaged: 2022-08-31 09:22:55 UTC; beatan01
# Repository: CRAN
# Date/Publication: 2022-08-31 10:00:02 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
