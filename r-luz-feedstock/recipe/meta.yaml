{% set version = '0.4.0' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-luz
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/luz_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/luz/luz_{{ version }}.tar.gz
  sha256: ff3653f97224a971683879f24580851651d21cf8ff87af40e0b36d09b381e10a

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: knitr, rmarkdown, testthat (>= 3.0.0), covr, Metrics, withr, vdiffr, ggplot2 (>= 3.0.0), dplyr, torchvision, tfevents (>= 0.0.2), tidyr
requirements:
  build:
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-r6
    - r-cli
    - r-coro
    - r-ellipsis
    - r-fs
    - r-generics
    - r-glue
    - r-magrittr
    - r-prettyunits
    - r-progress
    - r-purrr
    - r-rlang >=1.0.0
    - r-torch >=0.9.0
    - r-zeallot

  run:
    - r-base
    - r-r6
    - r-cli
    - r-coro
    - r-ellipsis
    - r-fs
    - r-generics
    - r-glue
    - r-magrittr
    - r-prettyunits
    - r-progress
    - r-purrr
    - r-rlang >=1.0.0
    - r-torch >=0.9.0
    - r-zeallot

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('luz')"           # [not win]
    - "\"%R%\" -e \"library('luz')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://mlverse.github.io/luz/, https://github.com/mlverse/luz
  license: MIT
  summary: A high level interface for 'torch' providing utilities to reduce the the amount of
    code needed for common tasks, abstract away torch details and make the same code
    work on both the 'CPU' and 'GPU'. It's flexible enough to support expressing a large
    range of models. It's heavily inspired by 'fastai' by Howard et al. (2020) <arXiv:2002.04688>,
    'Keras' by Chollet et al. (2015) and 'PyTorch Lightning' by Falcon et al. (2019)
    <doi:10.5281/zenodo.3828935>.
  license_family: MIT
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/MIT'
    - LICENSE

# The original CRAN metadata for this package was:

# Package: luz
# Title: Higher Level 'API' for 'torch'
# Version: 0.4.0
# Authors@R: c( person("Daniel", "Falbel", email = "daniel@rstudio.com", role = c("aut", "cre", "cph")), person(family = "RStudio", role = c("cph")) )
# Description: A high level interface for 'torch' providing utilities to reduce the the amount of code needed for common tasks, abstract away torch details and make the same code work on both the 'CPU' and 'GPU'. It's flexible enough to support expressing a large range of models. It's heavily inspired by 'fastai' by Howard et al. (2020) <arXiv:2002.04688>, 'Keras' by Chollet et al. (2015) and 'PyTorch Lightning' by Falcon et al. (2019) <doi:10.5281/zenodo.3828935>.
# License: MIT + file LICENSE
# URL: https://mlverse.github.io/luz/, https://github.com/mlverse/luz
# Encoding: UTF-8
# RoxygenNote: 7.2.3
# Imports: torch (>= 0.9.0), magrittr, zeallot, rlang (>= 1.0.0), coro, glue, progress, R6, generics, purrr, ellipsis, fs, prettyunits, cli
# Suggests: knitr, rmarkdown, testthat (>= 3.0.0), covr, Metrics, withr, vdiffr, ggplot2 (>= 3.0.0), dplyr, torchvision, tfevents (>= 0.0.2), tidyr
# VignetteBuilder: knitr
# Config/testthat/edition: 3
# Collate: 'accelerator.R' 'as_dataloader.R' 'utils.R' 'callbacks.R' 'callbacks-interrupt.R' 'callbacks-mixup.R' 'callbacks-monitor-metrics.R' 'callbacks-profile.R' 'callbacks-resume.R' 'callbacks-tfevents.R' 'context.R' 'losses.R' 'lr-finder.R' 'metrics.R' 'metrics-auc.R' 'module-plot.R' 'module-print.R' 'module.R' 'reexports.R' 'serialization.R'
# NeedsCompilation: no
# Packaged: 2023-04-17 09:26:49 UTC; dfalbel
# Author: Daniel Falbel [aut, cre, cph], RStudio [cph]
# Maintainer: Daniel Falbel <daniel@rstudio.com>
# Repository: CRAN
# Date/Publication: 2023-04-17 10:00:05 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
