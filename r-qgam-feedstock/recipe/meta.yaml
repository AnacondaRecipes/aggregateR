{% set version = '1.3.4' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-qgam
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/qgam_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/qgam/qgam_{{ version }}.tar.gz
  sha256: 7633120a48a85ab73f7e1bc8b02c98319285c2abd05f9d13d25339d7aaaacacb

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: knitr, rmarkdown, MASS, RhpcBLASctl, testthat
requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}make
    - {{ posix }}sed               # [win]
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-doparallel
    - r-mgcv >=1.8_28
    - r-plyr
    - r-shiny

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-doparallel
    - r-mgcv >=1.8_28
    - r-plyr
    - r-shiny

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('qgam')"           # [not win]
    - "\"%R%\" -e \"library('qgam')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=qgam
  license: GPL-2
  summary: Smooth additive quantile regression models, fitted using the methods of Fasiolo et
    al. (2020) <doi:10.1080/01621459.2020.1725521>. See Fasiolo at al. (2021) <doi:10.18637/jss.v100.i09>
    for an introduction to the package. Differently from 'quantreg', the smoothing parameters
    are estimated automatically by marginal loss minimization, while the regression
    coefficients are estimated using either PIRLS or Newton algorithm. The learning
    rate is determined so that the Bayesian credible intervals of the estimated effects
    have approximately the correct coverage. The main function is qgam() which is similar
    to gam() in 'mgcv', but fits non-parametric quantile regression models.
  license_family: GPL2
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: qgam
# Type: Package
# Title: Smooth Additive Quantile Regression Models
# Version: 1.3.4
# Date: 2021-11-21
# Authors@R: c(person("Matteo", "Fasiolo", email = "matteo.fasiolo@gmail.com", role = c("aut", "cre")), person("Simon", "N. Wood", role = c("ctb")), person("Margaux", "Zaffran", role = c("ctb")), person("Yannig", "Goude", role = c("ctb")), person("Raphael", "Nedellec", role = c("ctb")))
# Maintainer: Matteo Fasiolo <matteo.fasiolo@gmail.com>
# Description: Smooth additive quantile regression models, fitted using the methods of Fasiolo et al. (2020) <doi:10.1080/01621459.2020.1725521>. See Fasiolo at al. (2021) <doi:10.18637/jss.v100.i09> for an introduction to the package. Differently from 'quantreg', the smoothing parameters are estimated automatically by marginal loss minimization, while the regression coefficients are estimated using either PIRLS or Newton algorithm. The learning rate is determined so that the Bayesian credible intervals of the estimated effects have approximately the correct coverage. The main function is qgam() which is similar to gam() in 'mgcv', but fits non-parametric quantile regression models.
# License: GPL (>= 2)
# Depends: R (>= 3.5.0), mgcv (>= 1.8-28)
# Imports: shiny, plyr, doParallel, parallel, grDevices
# Suggests: knitr, rmarkdown, MASS, RhpcBLASctl, testthat
# VignetteBuilder: knitr
# RoxygenNote: 7.1.1
# NeedsCompilation: yes
# Packaged: 2021-11-22 12:23:36 UTC; mf15002
# Author: Matteo Fasiolo [aut, cre], Simon N. Wood [ctb], Margaux Zaffran [ctb], Yannig Goude [ctb], Raphael Nedellec [ctb]
# Repository: CRAN
# Date/Publication: 2021-11-22 19:30:02 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
