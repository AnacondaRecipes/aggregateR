{% set version = '0.8.1' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-dils
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/dils_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/dils/dils_{{ version }}.tar.gz
  sha256: 635ceb8feb9f338d2328c3c9529a8d4ffa640debbf96847c3fee43126452cbe0

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: testthat, Matrix
requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{posix}}filesystem        # [win]
    - {{posix}}make
    - {{posix}}sed               # [win]
    - {{posix}}coreutils         # [win]
    - {{posix}}zip               # [win]

  host:
    - r-base
    - r-rcpp >=0.10.4
    - r-igraph

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-rcpp >=0.10.4
    - r-igraph

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('dils')"           # [not win]
    - "\"%R%\" -e \"library('dils')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=dils
  license: MIT
  summary: Combine multiple-relationship networks into a single weighted network.  The approach
    is similar to factor analysis in the that contribution from each constituent network
    varies so as to maximize the information gleaned from the multiple-relationship
    networks. This implementation uses Principal Component Analysis calculated using
    'prcomp' with bootstrap subsampling.  Missing links are imputed using the method
    of Chen et al. (2012).
  license_family: MIT
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/MIT'
    - LICENSE

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: dils
# Type: Package
# Title: Data-Informed Link Strength. Combine multiple-relationship networks into a single weighted network. Impute (fill-in) missing network links.
# Version: 0.8.1
# Date: 2013-11-25
# Author: Stephen R. Haptonstahl
# Maintainer: Stephen R. Haptonstahl <srh@haptonstahl.org>
# Depends: R (>= 3.0.1), igraph, Rcpp (>= 0.10.4)
# LinkingTo: Rcpp
# Suggests: testthat, Matrix
# Description: Combine multiple-relationship networks into a single weighted network.  The approach is similar to factor analysis in the that contribution from each constituent network varies so as to maximize the information gleaned from the multiple-relationship networks. This implementation uses Principal Component Analysis calculated using 'prcomp' with bootstrap subsampling.  Missing links are imputed using the method of Chen et al. (2012).
# License: MIT + file LICENSE
# Collate: 'GetSampleFromDataFrame.R' 'RelationStrengthSimilarity.R' 'ScalablePCA.R' 'GetSampleFromFile.R' 'GetSampleFromDb.R' 'RssCell.R' 'RssThisRadius.R' 'EdgelistFill.R' 'EdgelistFromAdjacency.R' 'EdgelistFromIgraph.R' 'GenerateDilsNetwork.R' 'MergeEdgelists.R' 'AdjacencyFromEdgelist.R' 'IgraphFromEdgelist.R' 'MeasureNetworkInformation.R' 'RssSuggestedNetwork.R' 'RelativeNetworkInformation.R'
# Packaged: 2013-11-25 20:06:33 UTC; Steve
# NeedsCompilation: yes
# Repository: CRAN
# Date/Publication: 2013-11-25 21:23:02

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
