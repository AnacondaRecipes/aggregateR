{% set version = '0.1-5' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-mlecens
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/MLEcens_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/MLEcens/MLEcens_{{ version }}.tar.gz
  sha256: 0605393308e4b915e0ca9da2e7fc72b91745ca987046889e26ba51468807b431

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}make
    - {{ posix }}sed               # [win]
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]

  host:
    - r-base

  run:
    - r-base
    - {{native}}gcc-libs         # [win]

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('MLEcens')"           # [not win]
    - "\"%R%\" -e \"library('MLEcens')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: http://stat.ethz.ch/~maathuis/
  license: GPL-2
  summary: We provide functions to compute the nonparametric maximum likelihood estimator (MLE)
    for the bivariate distribution of (X,Y), when realizations of (X,Y) cannot be observed
    directly. To be more precise, we consider the situation where we observe a set of
    rectangles in R^2 that are known to contain the unobservable realizations of (X,Y).
    We compute the MLE based on such a set of rectangles. The methods can also be used
    for univariate censored data (see data set 'cosmesis'), and for censored data with
    competing risks (see data set 'menopause'). We also provide functions to visualize
    the observed data and the MLE.
  license_family: GPL2
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: MLEcens
# Version: 0.1-5
# Date: 2022-03-31
# Title: Computation of the MLE for Bivariate Interval Censored Data
# Authors@R: person("Marloes", "Maathuis", role= c("aut", "cre"), email= "maathuis@stat.math.ethz.ch")
# Depends:
# Description: We provide functions to compute the nonparametric maximum likelihood estimator (MLE) for the bivariate distribution of (X,Y), when realizations of (X,Y) cannot be observed directly. To be more precise, we consider the situation where we observe a set of rectangles in R^2 that are known to contain the unobservable realizations of (X,Y). We compute the MLE based on such a set of rectangles. The methods can also be used for univariate censored data (see data set 'cosmesis'), and for censored data with competing risks (see data set 'menopause'). We also provide functions to visualize the observed data and the MLE.
# License: GPL (>= 2)
# URL: http://stat.ethz.ch/~maathuis/
# NeedsCompilation: yes
# Packaged: 2022-03-31 11:38:13 UTC; mmarloes
# Author: Marloes Maathuis [aut, cre]
# Maintainer: Marloes Maathuis <maathuis@stat.math.ethz.ch>
# Repository: CRAN
# Date/Publication: 2022-03-31 12:50:05 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
