{% set version = '1.3.2' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-azurecontainers
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/AzureContainers_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/AzureContainers/AzureContainers_{{ version }}.tar.gz
  sha256: aeb08bffcbb5c3f9d154e42aeb5878797bfc7aa6125162e95907873989dbd353

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: knitr, rmarkdown, testthat, uuid, MASS, bcrypt, randomForest, plumber, RestRserve, AzureKeyVault
requirements:
  build:
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-azuregraph >=1.1.0
    - r-azurermr >=2.0.0
    - r-r6
    - r-httr
    - r-openssl
    - r-processx

  run:
    - r-base
    - r-azuregraph >=1.1.0
    - r-azurermr >=2.0.0
    - r-r6
    - r-httr
    - r-openssl
    - r-processx

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('AzureContainers')"           # [not win]
    - "\"%R%\" -e \"library('AzureContainers')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/Azure/AzureContainers https://github.com/Azure/AzureR
  license: MIT
  summary: 'An interface to container functionality in Microsoft''s ''Azure'' cloud: <https://azure.microsoft.com/en-us/product-categories/containers/>.
    Manage ''Azure Container Instance'' (ACI), ''Azure Container Registry'' (ACR) and
    ''Azure Kubernetes Service'' (AKS) resources, push and pull images, and deploy services.
    On the client side, lightweight shells to the ''docker'', ''docker-compose'', ''kubectl''
    and ''helm'' commandline tools are provided. Part of the ''AzureR'' family of packages.'
  license_family: MIT
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/MIT'
    - LICENSE

# The original CRAN metadata for this package was:

# Package: AzureContainers
# Title: Interface to 'Container Instances', 'Docker Registry' and 'Kubernetes' in 'Azure'
# Version: 1.3.2
# Authors@R: c( person("Hong", "Ooi", , "hongooi73@gmail.com", role = c("aut", "cre")), person("Bill", "Liang", role = "ctb", comment = "Assistance debugging MMLS on Kubernetes"), person("Ramkumar", "Chandrasekaran", role = "ctb", comment = "Original blog article on Dockerising MMLS"), person("Microsoft", role="cph") )
# Description: An interface to container functionality in Microsoft's 'Azure' cloud: <https://azure.microsoft.com/en-us/product-categories/containers/>. Manage 'Azure Container Instance' (ACI), 'Azure Container Registry' (ACR) and 'Azure Kubernetes Service' (AKS) resources, push and pull images, and deploy services. On the client side, lightweight shells to the 'docker', 'docker-compose', 'kubectl' and 'helm' commandline tools are provided. Part of the 'AzureR' family of packages.
# URL: https://github.com/Azure/AzureContainers https://github.com/Azure/AzureR
# BugReports: https://github.com/Azure/AzureContainers/issues
# License: MIT + file LICENSE
# VignetteBuilder: knitr
# Depends: R (>= 3.3)
# Imports: utils, AzureRMR (>= 2.0.0), AzureGraph (>= 1.1.0), openssl, httr, R6, processx
# Suggests: knitr, rmarkdown, testthat, uuid, MASS, bcrypt, randomForest, plumber, RestRserve, AzureKeyVault
# RoxygenNote: 7.1.1
# NeedsCompilation: no
# Packaged: 2021-07-09 05:35:09 UTC; hongo
# Author: Hong Ooi [aut, cre], Bill Liang [ctb] (Assistance debugging MMLS on Kubernetes), Ramkumar Chandrasekaran [ctb] (Original blog article on Dockerising MMLS), Microsoft [cph]
# Maintainer: Hong Ooi <hongooi73@gmail.com>
# Repository: CRAN
# Date/Publication: 2021-07-09 06:00:02 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
