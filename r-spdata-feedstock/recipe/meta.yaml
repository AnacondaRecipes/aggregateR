{% set version = '2.0.1' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-spdata
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/spData_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/spData/spData_{{ version }}.tar.gz
  sha256: c635a3e2e5123b4cdb2e6877b9b09e3d50169e1512a53b2ba2db7fbe63b990fc

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: foreign, maptools, rgdal, sf (>= 0.9-1), spDataLarge (>= 0.4.0), spdep, spatialreg
requirements:
  build:
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-raster
    - r-sp

  run:
    - r-base
    - r-raster
    - r-sp

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('spData')"           # [not win]
    - "\"%R%\" -e \"library('spData')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://nowosad.github.io/spData/
  license: CC0
  summary: Diverse spatial datasets for demonstrating, benchmarking and teaching spatial data
    analysis. It includes R data of class sf (defined by the package 'sf'), Spatial
    ('sp'), and nb ('spdep'). Unlike other spatial data packages such as 'rnaturalearth'
    and 'maps', it also contains data stored in a range of file formats including GeoJSON,
    ESRI Shapefile and GeoPackage. Some of the datasets are designed to illustrate specific
    analysis techniques. cycle_hire() and cycle_hire_osm(), for example, is designed
    to illustrate point pattern analysis techniques.
  license_family: CC

extra:
  recipe-maintainers:
    - mingwandroid

# The original CRAN metadata for this package was:

# Package: spData
# Title: Datasets for Spatial Analysis
# Version: 2.0.1
# Authors@R: c(person("Roger", "Bivand", role = "aut", email="Roger.Bivand@nhh.no", comment = c(ORCID = "0000-0003-2392-6140")), person("Jakub", "Nowosad", role = c("aut", "cre"), email="nowosad.jakub@gmail.com", comment = c(ORCID = "0000-0002-1057-3721")), person("Robin", "Lovelace", role = "aut", comment = c(ORCID = "0000-0001-5679-6536")), person("Mark", "Monmonier", role = "ctb", comment = "author of the state.vbm dataset"), person("Greg", "Snow", role = "ctb", comment = "author of the state.vbm dataset") )
# Description: Diverse spatial datasets for demonstrating, benchmarking and teaching spatial data analysis. It includes R data of class sf (defined by the package 'sf'), Spatial ('sp'), and nb ('spdep'). Unlike other spatial data packages such as 'rnaturalearth' and 'maps', it also contains data stored in a range of file formats including GeoJSON, ESRI Shapefile and GeoPackage. Some of the datasets are designed to illustrate specific analysis techniques. cycle_hire() and cycle_hire_osm(), for example, is designed to illustrate point pattern analysis techniques.
# Depends: R (>= 3.3.0)
# Imports: sp, raster
# Suggests: foreign, maptools, rgdal, sf (>= 0.9-1), spDataLarge (>= 0.4.0), spdep, spatialreg
# License: CC0
# RoxygenNote: 7.1.1
# LazyData: true
# URL: https://nowosad.github.io/spData/
# BugReports: https://github.com/Nowosad/spData/issues
# Additional_repositories: https://nowosad.github.io/drat
# NeedsCompilation: no
# Packaged: 2021-10-14 14:43:11 UTC; jn
# Author: Roger Bivand [aut] (<https://orcid.org/0000-0003-2392-6140>), Jakub Nowosad [aut, cre] (<https://orcid.org/0000-0002-1057-3721>), Robin Lovelace [aut] (<https://orcid.org/0000-0001-5679-6536>), Mark Monmonier [ctb] (author of the state.vbm dataset), Greg Snow [ctb] (author of the state.vbm dataset)
# Maintainer: Jakub Nowosad <nowosad.jakub@gmail.com>
# Repository: CRAN
# Date/Publication: 2021-10-14 15:40:02 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
