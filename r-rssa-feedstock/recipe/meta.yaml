{% set version = '1.0.5' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-rssa
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/Rssa_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/Rssa/Rssa_{{ version }}.tar.gz
  sha256: 475819636afb330a4467722b0a664fa54d6114d782b681f681ccb123f3be522d

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: testthat (>= 0.7), RSpectra, PRIMME
requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}sed               # [win]
    - {{ posix }}grep              # [win]
    - {{ posix }}autoconf
    - {{ posix }}automake          # [not win]
    - {{ posix }}automake-wrapper  # [win]
    - {{ posix }}pkg-config
    - {{ posix }}make
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-forecast
    - r-lattice
    - r-svd >=0.4
    - fftw

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-forecast
    - r-lattice
    - r-svd >=0.4
    - fftw

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('Rssa')"           # [not win]
    - "\"%R%\" -e \"library('Rssa')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/asl/rssa
  license: GPL-2
  summary: Methods and tools for Singular Spectrum Analysis including decomposition, forecasting
    and gap-filling for univariate and multivariate time series. General description
    of the methods with many examples can be found in the book Golyandina (2018, <doi:10.1007/978-3-662-57380-8>).
    See 'citation("Rssa")' for details.
  license_family: GPL2
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

# The original CRAN metadata for this package was:

# Package: Rssa
# Type: Package
# Title: A Collection of Methods for Singular Spectrum Analysis
# Version: 1.0.5
# Depends: R (>= 3.1), svd (>= 0.4), forecast
# Imports: lattice, methods
# Suggests: testthat (>= 0.7), RSpectra, PRIMME
# SystemRequirements: fftw (>=3.2)
# Author: Anton Korobeynikov, Alex Shlemov, Konstantin Usevich, Nina Golyandina
# Maintainer: Anton Korobeynikov <anton@korobeynikov.info>
# Description: Methods and tools for Singular Spectrum Analysis including decomposition, forecasting and gap-filling for univariate and multivariate time series. General description of the methods with many examples can be found in the book Golyandina (2018, <doi:10.1007/978-3-662-57380-8>). See 'citation("Rssa")' for details.
# License: GPL (>= 2)
# URL: https://github.com/asl/rssa
# BugReports: https://github.com/asl/rssa/issues
# NeedsCompilation: yes
# Packaged: 2022-08-22 14:12:59 UTC; asl
# Repository: CRAN
# Date/Publication: 2022-08-22 22:10:02 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
