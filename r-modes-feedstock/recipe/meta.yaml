{% set version = '0.7.0' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-modes
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/modes_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/modes/modes_{{ version }}.tar.gz
  sha256: b2e2e9c3ccf7a46720419652e232b1f25d39fa1c8dbc3052a1406af16b96b8a0

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{posix}}zip               # [win]

  host:
    - r-base

  run:
    - r-base

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('modes')"           # [not win]
    - "\"%R%\" -e \"library('modes')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: http://www.sdeevi.com/modes_package https://github.com/sathish-deevi/modes-Package/
  license: CC BY-NC-SA 4.0
  summary: Designed with a dual purpose of accurately estimating the mode (or modes) as well
    as characterizing the modality of data. The specific application area includes complex
    or mixture distributions particularly in a big data environment. The heterogeneous
    nature of (big) data may require deep introspective statistical and machine learning
    techniques, but these statistical tools often fail when applied without first understanding
    the data. In small datasets, this often isn't a big issue, but when dealing with
    large scale data analysis or big data thoroughly inspecting each dimension typically
    yields an O(n^n-1) problem. As such, dealing with big data require an alternative
    toolkit. This package not only identifies the mode or modes for various data types,
    it also provides a programmatic way of understanding the modality (i.e. unimodal,
    bimodal, etc.) of a dataset (whether it's big data or not). See <http://www.sdeevi.com/modes_package>
    for examples and discussion.
  license_family: CC

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: modes
# Title: Find the Modes and Assess the Modality of Complex and Mixture Distributions, Especially with Big Datasets
# Version: 0.7.0
# Date: 2016-03-06
# Author: Sathish Deevi [aut, cre], 4D Strategies [aut,own]
# Maintainer: Sathish Deevi <SathishCDeevi@gmail.com>
# Copyright: 4D Strategies
# Description: Designed with a dual purpose of accurately estimating the mode (or modes) as well as characterizing the modality of data. The specific application area includes complex or mixture distributions particularly in a big data environment. The heterogeneous nature of (big) data may require deep introspective statistical and machine learning techniques, but these statistical tools often fail when applied without first understanding the data. In small datasets, this often isn't a big issue, but when dealing with large scale data analysis or big data thoroughly inspecting each dimension typically yields an O(n^n-1) problem. As such, dealing with big data require an alternative toolkit. This package not only identifies the mode or modes for various data types, it also provides a programmatic way of understanding the modality (i.e. unimodal, bimodal, etc.) of a dataset (whether it's big data or not). See <http://www.sdeevi.com/modes_package> for examples and discussion.
# Depends: R (>= 3.2.2)
# License: CC BY-NC-SA 4.0
# Collate: 'Utility_functions.R' 'Nonparametric_functions.R' 'Parametric_functions.R'
# URL: http://www.sdeevi.com/modes_package https://github.com/sathish-deevi/modes-Package/
# NeedsCompilation: no
# Packaged: 2016-03-07 00:30:22 UTC; Novus PC
# Repository: CRAN
# Date/Publication: 2016-03-07 07:59:58

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
