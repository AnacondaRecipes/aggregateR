{% set version = '0.2.2' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-d3tree
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/d3Tree_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/d3Tree/d3Tree_{{ version }}.tar.gz
  sha256: 704d5e4bff7d71c201994f4e115f9e6f796a13be6175efda8ceac3da9e614b90

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: shiny, rmarkdown
requirements:
  build:
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-dplyr
    - r-htmlwidgets
    - r-magrittr
    - r-plyr
    - r-stringr

  run:
    - r-base
    - r-dplyr
    - r-htmlwidgets
    - r-magrittr
    - r-plyr
    - r-stringr

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('d3Tree')"           # [not win]
    - "\"%R%\" -e \"library('d3Tree')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/yonicd/d3Tree
  license: GPL-2 | GPL-3
  summary: Create and customize interactive collapsible 'D3' trees using the 'D3' JavaScript
    library and the 'htmlwidgets' package. These trees can be used directly from the
    R console, from 'RStudio', in Shiny apps and R Markdown documents. When in Shiny
    the tree layout is observed by the server and can be used as a reactive filter of
    structured data.
  license_family: GPL3
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-3'

# The original CRAN metadata for this package was:

# Package: d3Tree
# Version: 0.2.2
# Date: 2020-12-10
# Title: Create Interactive Collapsible Trees with the JavaScript 'D3' Library
# Authors@R: c(person("Jonathan", "Sidi", email = "yonicd@gmail.com", role = c("aut", "cre")), person("Kenton", "Russell", email = "kent.russell@timelyportfolio.com", comment = "https://github.com/timelyportfolio",role = "ctb"))
# Description: Create and customize interactive collapsible 'D3' trees using the 'D3' JavaScript library and the 'htmlwidgets' package. These trees can be used directly from the R console, from 'RStudio', in Shiny apps and R Markdown documents. When in Shiny the tree layout is observed by the server and can be used as a reactive filter of structured data.
# Depends: R (>= 2.3.0)
# Imports: magrittr, stringr, htmlwidgets, plyr, dplyr
# Suggests: shiny, rmarkdown
# License: GPL-2 | GPL-3
# URL: https://github.com/yonicd/d3Tree
# BugReports: https://github.com/yonicd/d3Tree/issues
# Encoding: UTF-8
# LazyData: true
# RoxygenNote: 7.1.1
# NeedsCompilation: no
# Packaged: 2020-12-10 13:22:33 UTC; yonis
# Author: Jonathan Sidi [aut, cre], Kenton Russell [ctb] (https://github.com/timelyportfolio)
# Maintainer: Jonathan Sidi <yonicd@gmail.com>
# Repository: CRAN
# Date/Publication: 2020-12-10 15:50:07 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
