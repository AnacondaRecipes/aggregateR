{% set version = '1.0.1' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-threebrain
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/threeBrain_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/threeBrain/threeBrain_{{ version }}.tar.gz
  sha256: 81590c68f0b658594f600ac4a9d5dee8670258b41bb83284a1926f2cfb57e55d

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: knitr, rmarkdown, DT, htmltools
requirements:
  build:
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-r6 >=2.3.0
    - r-digest >=0.6.22
    - r-dipsaus
    - r-freesurferformats >=0.1.7
    - r-gifti >=0.7.5
    - r-htmlwidgets >=1.3
    - r-jsonlite >=1.5
    - r-oro.nifti >=0.9.1
    - r-ravetools
    - r-servr
    - r-shiny >=1.2.0
    - r-stringr >=1.3.1
    - r-xml2

  run:
    - r-base
    - r-r6 >=2.3.0
    - r-digest >=0.6.22
    - r-dipsaus
    - r-freesurferformats >=0.1.7
    - r-gifti >=0.7.5
    - r-htmlwidgets >=1.3
    - r-jsonlite >=1.5
    - r-oro.nifti >=0.9.1
    - r-ravetools
    - r-servr
    - r-shiny >=1.2.0
    - r-stringr >=1.3.1
    - r-xml2

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('threeBrain')"           # [not win]
    - "\"%R%\" -e \"library('threeBrain')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://dipterix.org/threeBrain/, https://github.com/dipterix/threeBrain
  license: GPL-3
  summary: A fast, interactive cross-platform, and easy to share 'WebGL'-based 3D brain viewer
    that visualizes 'FreeSurfer' and/or 'AFNI/SUMA' surfaces. The viewer widget can
    be either standalone or embedded into 'R-shiny' applications. The standalone version
    only require a web browser with 'WebGL2' support (for example, 'Chrome', 'Firefox',
    'Safari'), and can be inserted into any websites. The 'R-shiny' support allows the
    3D viewer to be dynamically generated from reactive user inputs. This feature has
    been fully adopted by 'RAVE' <https://openwetware.org/wiki/RAVE>, an interactive
    toolbox to analyze 'iEEG' data. Documentation about 'threeBrain' is provided by
    <https://dipterix.org/threeBrain/> and several vignettes included in this package.
    To cite the package, please check our 'NeuroImage' paper by Magnotti, Wang, and
    Beauchamp (2020, <doi:10.1016/j.neuroimage.2020.117341>), or see 'citation("threeBrain")'
    for details.
  license_family: GPL3
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-3'
    - LICENSE

# The original CRAN metadata for this package was:

# Package: threeBrain
# Type: Package
# Title: 3D Brain Visualization
# Version: 1.0.1
# Authors@R: c( person("Zhengjia", "Wang", email = "dipterix.wang@gmail.com", role = c("aut", "cre", "cph")), person("John", "Magnotti", email = "John.Magnotti@Pennmedicine.upenn.edu", role = c("aut", "res")), person("Xiang", "Zhang", email = "xiang.zhang@pennmedicine.upenn.edu", role = c("ctb", "res")), person("Brian", "Metzger", email = "Brian.Metzger@bcm.edu", role = c("res")), person("Elizabeth", "Nesbitt", email = "Elizabeth.Nesbitt@bcm.edu", role = c("res")), person("Meng", "Li", email = "meng@rice.edu", role = c("ths")), person("Michael", "Beauchamp", email = "Michael.Beauchamp@Pennmedicine.upenn.edu", role = c("ths", "dtc")) )
# Description: A fast, interactive cross-platform, and easy to share 'WebGL'-based 3D brain viewer that visualizes 'FreeSurfer' and/or 'AFNI/SUMA' surfaces. The viewer widget can be either standalone or embedded into 'R-shiny' applications. The standalone version only require a web browser with 'WebGL2' support (for example, 'Chrome', 'Firefox', 'Safari'), and can be inserted into any websites. The 'R-shiny' support allows the 3D viewer to be dynamically generated from reactive user inputs. This feature has been fully adopted by 'RAVE' <https://openwetware.org/wiki/RAVE>, an interactive toolbox to analyze 'iEEG' data. Documentation about 'threeBrain' is provided by <https://dipterix.org/threeBrain/> and several vignettes included in this package. To cite the package, please check our 'NeuroImage' paper by Magnotti, Wang, and Beauchamp (2020, <doi:10.1016/j.neuroimage.2020.117341>), or see 'citation("threeBrain")' for details.
# License: GPL-3 | file LICENSE
# Encoding: UTF-8
# RoxygenNote: 7.2.3
# Language: en-US
# URL: https://dipterix.org/threeBrain/, https://github.com/dipterix/threeBrain
# BugReports: https://github.com/dipterix/threeBrain/issues
# Imports: utils, grDevices, graphics, dipsaus, ravetools, xml2, servr, shiny (>= 1.2.0), digest (>= 0.6.22), freesurferformats (>= 0.1.7), jsonlite (>= 1.5), stringr (>= 1.3.1), htmlwidgets (>= 1.3), R6 (>= 2.3.0), gifti (>= 0.7.5), oro.nifti (>= 0.9.1)
# Suggests: knitr, rmarkdown, DT, htmltools
# VignetteBuilder: knitr
# NeedsCompilation: no
# Packaged: 2023-07-03 20:51:27 UTC; dipterix
# Author: Zhengjia Wang [aut, cre, cph], John Magnotti [aut, res], Xiang Zhang [ctb, res], Brian Metzger [res], Elizabeth Nesbitt [res], Meng Li [ths], Michael Beauchamp [ths, dtc]
# Maintainer: Zhengjia Wang <dipterix.wang@gmail.com>
# Repository: CRAN
# Date/Publication: 2023-07-03 21:30:02 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
