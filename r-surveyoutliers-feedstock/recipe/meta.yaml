{% set version = '0.1' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-surveyoutliers
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/surveyoutliers_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/surveyoutliers/surveyoutliers_{{ version }}.tar.gz
  sha256: 7bdc9261733b9be42977f879ed262a69df94b4c8fac121de3ba58f1c3fe0d80e

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{posix}}zip               # [win]

  host:
    - r-base

  run:
    - r-base

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('surveyoutliers')"           # [not win]
    - "\"%R%\" -e \"library('surveyoutliers')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=surveyoutliers
  license: GPL-2 | GPL-3
  summary: At present, the only functionality is the calculation of optimal one-sided winsorizing
    cutoffs. The main function is optimal.onesided.cutoff.bygroup. It calculates the
    optimal tuning parameter for one-sided winsorisation, and so calculates winsorised
    values for a variable of interest. See the help file for this function for more
    details and an example.
  license_family: GPL3
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-3'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: surveyoutliers
# Type: Package
# Title: Helps Manage Outliers in Sample Surveys
# Version: 0.1
# Date: 2016-01-22
# Author: Robert Clark
# Maintainer: "Robert Clark" <rclark@uow.edu.au>
# Imports: stats
# Description: At present, the only functionality is the calculation of optimal one-sided winsorizing cutoffs. The main function is optimal.onesided.cutoff.bygroup. It calculates the optimal tuning parameter for one-sided winsorisation, and so calculates winsorised values for a variable of interest. See the help file for this function for more details and an example.
# License: GPL-2 | GPL-3
# LazyData: TRUE
# RoxygenNote: 5.0.1
# NeedsCompilation: no
# Packaged: 2016-01-25 07:39:53 UTC; rclark
# Repository: CRAN
# Date/Publication: 2016-01-25 08:55:18

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
