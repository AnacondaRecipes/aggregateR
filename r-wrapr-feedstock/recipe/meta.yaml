{% set version = '1.8.9' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-wrapr
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/wrapr_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/wrapr/wrapr_{{ version }}.tar.gz
  sha256: 7ca3360550545932e0ec43265002b1b298fca8a0e44672288377d4cbc4d17f94

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: parallel, knitr, rmarkdown, RUnit, R.rsp
requirements:
  build:
    - {{posix}}zip               # [win]

  host:
    - r-base

  run:
    - r-base

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('wrapr')"           # [not win]
    - "\"%R%\" -e \"library('wrapr')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/WinVector/wrapr, http://winvector.github.io/wrapr/
  license: GPL-2 | GPL-3
  summary: 'Tools for writing and debugging R code. Provides:  ''%.>%'' dot-pipe (an ''S3'' configurable
    pipe), ''let()''  (converts non-standard evaluation interfaces to parametric standard
    evaluation interfaces, inspired by ''gtools:strmacro()'' and ''base::bquote()''),  ''build_frame()''/''draw_frame()''
    (''data.frame'' example tools), ''qc()'' (quoting concatenate),  '':='' (named map
    builder), and more.'

  license_family: GPL3
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-3'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: wrapr
# Type: Package
# Title: Wrap R Tools for Debugging and Parametric Programming
# Version: 1.8.9
# Date: 2019-07-24
# Authors@R: c( person("John", "Mount", email = "jmount@win-vector.com", role = c("aut", "cre")), person("Nina", "Zumel", email = "nzumel@win-vector.com", role = c("aut")), person(family = "Win-Vector LLC", role = c("cph")) )
# URL: https://github.com/WinVector/wrapr, http://winvector.github.io/wrapr/
# Maintainer: John Mount <jmount@win-vector.com>
# BugReports: https://github.com/WinVector/wrapr/issues
# Description: Tools for writing and debugging R code. Provides:  '%.>%' dot-pipe (an 'S3' configurable pipe), 'let()'  (converts non-standard evaluation interfaces to parametric standard evaluation interfaces, inspired by 'gtools:strmacro()' and 'base::bquote()'),  'build_frame()'/'draw_frame()' ('data.frame' example tools), 'qc()' (quoting concatenate),  ':=' (named map builder), and more.
# License: GPL-2 | GPL-3
# Encoding: UTF-8
# LazyData: true
# RoxygenNote: 6.1.1
# Depends: R (>= 3.2.1)
# Imports: utils, methods, graphics, stats
# Suggests: parallel, knitr, rmarkdown, RUnit, R.rsp
# VignetteBuilder: knitr, R.rsp
# ByteCompile: true
# NeedsCompilation: no
# Packaged: 2019-07-24 15:00:13 UTC; johnmount
# Author: John Mount [aut, cre], Nina Zumel [aut], Win-Vector LLC [cph]
# Repository: CRAN
# Date/Publication: 2019-07-24 15:20:02 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
