{% set version = '1.5.0' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-heatmaply
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/heatmaply_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/heatmaply/heatmaply_{{ version }}.tar.gz
  sha256: aca4dd8b0181aa97969c8c25c73343e294c4d9c24e7cbf52e97fecbed5a92db3

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: knitr, covr, gplots, tidyselect, rmarkdown, testthat
requirements:
  build:
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-rcolorbrewer
    - r-assertthat
    - r-colorspace
    - r-dendextend >=1.12.0
    - r-egg
    - r-ggplot2 >=2.2.0
    - r-htmlwidgets
    - r-magrittr >=1.0.1
    - r-plotly >=4.7.1
    - r-reshape2
    - r-scales
    - r-seriation
    - r-viridis
    - r-webshot

  run:
    - r-base
    - r-rcolorbrewer
    - r-assertthat
    - r-colorspace
    - r-dendextend >=1.12.0
    - r-egg
    - r-ggplot2 >=2.2.0
    - r-htmlwidgets
    - r-magrittr >=1.0.1
    - r-plotly >=4.7.1
    - r-reshape2
    - r-scales
    - r-seriation
    - r-viridis
    - r-webshot

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('heatmaply')"           # [not win]
    - "\"%R%\" -e \"library('heatmaply')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://talgalili.github.io/heatmaply/, https://cran.r-project.org/package=heatmaply,
    https://github.com/talgalili/heatmaply/, https://www.r-statistics.com/tag/heatmaply/
  license: GPL-2 | GPL-3
  summary: Create interactive cluster 'heatmaps' that can be saved as a stand- alone HTML file,
    embedded in 'R Markdown' documents or in a 'Shiny' app, and available in the 'RStudio'
    viewer pane. Hover the mouse pointer over a cell to show details or drag a rectangle
    to zoom. A 'heatmap' is a popular graphical method for visualizing high-dimensional
    data, in which a table of numbers are encoded as a grid of colored cells. The rows
    and columns of the matrix are ordered to highlight patterns and are often accompanied
    by 'dendrograms'. 'Heatmaps' are used in many fields for visualizing observations,
    correlations, missing values patterns, and more. Interactive 'heatmaps' allow the
    inspection of specific value by hovering the mouse over a cell, as well as zooming
    into a region of the 'heatmap' by dragging a rectangle around the relevant area.
    This work is based on the 'ggplot2' and 'plotly.js' engine. It produces similar
    'heatmaps' to 'heatmap.2' with the advantage of speed ('plotly.js' is able to handle
    larger size matrix), the ability to zoom from the 'dendrogram' panes, and the placing
    of factor variables in the sides of the 'heatmap'.
  license_family: GPL3
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-3'

# The original CRAN metadata for this package was:

# Package: heatmaply
# Type: Package
# Title: Interactive Cluster Heat Maps Using 'plotly' and 'ggplot2'
# Version: 1.5.0
# Date: 2023-10-06
# Authors@R: c( person("Tal", "Galili", role = c("aut", "cre", "cph"), email = "tal.galili@gmail.com", comment = "https://www.r-statistics.com"), person("Alan", "O'Callaghan", comment = "https://github.com/Alanocallaghan",role = "aut"), person("Jonathan", "Sidi", email = "yonis@metrumrg.com", comment = "https://github.com/yonicd",role = "ctb"), person("Jaehyun", "Joo", comment = "https://github.com/jaehyunjoo",role = "ctb"), person("Yoav", "Benjamini", email = "ybenja@tau.ac.il",role = "ths"))
# Description: Create interactive cluster 'heatmaps' that can be saved as a stand- alone HTML file, embedded in 'R Markdown' documents or in a 'Shiny' app, and available in the 'RStudio' viewer pane. Hover the mouse pointer over a cell to show details or drag a rectangle to zoom. A 'heatmap' is a popular graphical method for visualizing high-dimensional data, in which a table of numbers are encoded as a grid of colored cells. The rows and columns of the matrix are ordered to highlight patterns and are often accompanied by 'dendrograms'. 'Heatmaps' are used in many fields for visualizing observations, correlations, missing values patterns, and more. Interactive 'heatmaps' allow the inspection of specific value by hovering the mouse over a cell, as well as zooming into a region of the 'heatmap' by dragging a rectangle around the relevant area. This work is based on the 'ggplot2' and 'plotly.js' engine. It produces similar 'heatmaps' to 'heatmap.2' with the advantage of speed ('plotly.js' is able to handle larger size matrix), the ability to zoom from the 'dendrogram' panes, and the placing of factor variables in the sides of the 'heatmap'.
# Depends: R (>= 3.0.0), plotly (>= 4.7.1), viridis
# Imports: ggplot2 (>= 2.2.0), dendextend (>= 1.12.0), magrittr (>= 1.0.1), reshape2, scales, seriation, utils, stats, grDevices, methods, colorspace, RColorBrewer, htmlwidgets, webshot, assertthat, egg
# Suggests: knitr, covr, gplots, tidyselect, rmarkdown, testthat
# VignetteBuilder: knitr
# License: GPL-2 | GPL-3
# URL: https://talgalili.github.io/heatmaply/, https://cran.r-project.org/package=heatmaply, https://github.com/talgalili/heatmaply/, https://www.r-statistics.com/tag/heatmaply/
# BugReports: https://github.com/talgalili/heatmaply/issues
# RoxygenNote: 7.2.3
# Encoding: UTF-8
# NeedsCompilation: no
# Packaged: 2023-10-06 15:41:58 UTC; talgalili
# Author: Tal Galili [aut, cre, cph] (https://www.r-statistics.com), Alan O'Callaghan [aut] (https://github.com/Alanocallaghan), Jonathan Sidi [ctb] (https://github.com/yonicd), Jaehyun Joo [ctb] (https://github.com/jaehyunjoo), Yoav Benjamini [ths]
# Maintainer: Tal Galili <tal.galili@gmail.com>
# Repository: CRAN
# Date/Publication: 2023-10-06 20:50:02 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
