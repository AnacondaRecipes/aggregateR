{% set version = '1.0.4' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-glm.deploy
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/glm.deploy_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/glm.deploy/glm.deploy_{{ version }}.tar.gz
  sha256: 3541217fe430d102df20e69f54c2764baaa40196a12b18b606f78a0fd7a673aa

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: knitr, rmarkdown, testthat
requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{posix}}filesystem        # [win]
    - {{posix}}make
    - {{posix}}sed               # [win]
    - {{posix}}coreutils         # [win]
    - {{posix}}zip               # [win]

  host:
    - r-base
    - r-rcpp >=0.12.12

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-rcpp >=0.12.12

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('glm.deploy')"           # [not win]
    - "\"%R%\" -e \"library('glm.deploy')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/oscarcastrolopez/glm.deploy
  license: GPL-3
  summary: Provides two functions that generate source code implementing the predict  function
    of fitted glm objects. In this version, code can be generated for either 'C'  or
    'Java'. The idea is to provide a tool for the easy and fast deployment of glm  predictive
    models into production. The source code generated by this package implements  two
    function/methods. One of such functions implements the equivalent to  predict(type="response"),
    while the second implements predict(type="link"). Source code  is written to disk
    as a .c or .java file in the specified path. In the case of c, an .h  file is also
    generated.
  license_family: GPL3
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-3'
    - LICENSE

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: glm.deploy
# Type: Package
# Title: 'C' and 'Java' Source Code Generator for Fitted Glm Objects
# Version: 1.0.4
# Date: 2018-03-06
# Authors@R: c(person("Oscar","Castro-Lopez", email="castroloj@gmail.com", role=c("cre", "aut")),  person("Ines", "Vega-Lopez", email="ifvega@uas.edu.mx", role=c("aut")))
# Author: Oscar Castro-Lopez [cre, aut], Ines Vega-Lopez [aut]
# Maintainer: Oscar Castro-Lopez <castroloj@gmail.com>
# License: GPL (>= 3) | file LICENSE
# Description: Provides two functions that generate source code implementing the predict  function of fitted glm objects. In this version, code can be generated for either 'C'  or 'Java'. The idea is to provide a tool for the easy and fast deployment of glm  predictive models into production. The source code generated by this package implements  two function/methods. One of such functions implements the equivalent to  predict(type="response"), while the second implements predict(type="link"). Source code  is written to disk as a .c or .java file in the specified path. In the case of c, an .h  file is also generated.
# URL: https://github.com/oscarcastrolopez/glm.deploy
# BugReports: https://github.com/oscarcastrolopez/glm.deploy/issues
# Encoding: UTF-8
# LazyData: true
# Imports: Rcpp (>= 0.12.12), stats
# LinkingTo: Rcpp
# RoxygenNote: 6.0.1
# Suggests: knitr, rmarkdown, testthat
# NeedsCompilation: yes
# Packaged: 2018-03-06 23:19:25 UTC; oscar
# Repository: CRAN
# Date/Publication: 2018-03-09 09:59:35 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
