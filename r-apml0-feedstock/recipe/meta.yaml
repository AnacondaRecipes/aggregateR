{% set version = '0.9' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-apml0
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/APML0_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/APML0/APML0_{{ version }}.tar.gz
  sha256: 0efc02368f134994d91a89d600a667e6cc014e5b1da3ed5ec2b93da959669be9

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{posix}}filesystem        # [win]
    - {{posix}}make
    - {{posix}}sed               # [win]
    - {{posix}}coreutils         # [win]
    - {{posix}}zip               # [win]

  host:
    - r-base
    - r-matrix >=1.2_10
    - r-rcpp >=0.12.12
    - r-rcppeigen

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-matrix >=1.2_10
    - r-rcpp >=0.12.12
    - r-rcppeigen

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('APML0')"           # [not win]
    - "\"%R%\" -e \"library('APML0')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=APML0
  license: GPL (>= 2)
  summary: 'Fit linear, logistic and Cox models regularized with L0, lasso (L1), elastic-net
    (L1 and L2), or net (L1 and Laplacian) penalty, and their adaptive forms, such as
    adaptive lasso / elastic-net and net adjusting for signs of linked coefficients.
    It solves L0 penalty problem by simultaneously selecting regularization parameters
    and the number of non-zero coefficients. This augmented and penalized minimization
    method provides an approximation solution to the L0 penalty problem, but runs as
    fast as L1 regularization problem. The package uses one-step coordinate descent
    algorithm and runs extremely fast by taking into account the sparsity structure
    of coefficients. It could deal with very high dimensional data and has superior
    selection performance. '

  license_family: GPL3
  license_file: '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: APML0
# Type: Package
# Title: Augmented and Penalized Minimization Method L0
# Version: 0.9
# Author: Xiang Li, Shanghong Xie, Donglin Zeng and Yuanjia Wang
# Maintainer: Xiang Li <xli256@its.jnj.com>
# Description: Fit linear, logistic and Cox models regularized with L0, lasso (L1), elastic-net (L1 and L2), or net (L1 and Laplacian) penalty, and their adaptive forms, such as adaptive lasso / elastic-net and net adjusting for signs of linked coefficients. It solves L0 penalty problem by simultaneously selecting regularization parameters and the number of non-zero coefficients. This augmented and penalized minimization method provides an approximation solution to the L0 penalty problem, but runs as fast as L1 regularization problem. The package uses one-step coordinate descent algorithm and runs extremely fast by taking into account the sparsity structure of coefficients. It could deal with very high dimensional data and has superior selection performance.
# License: GPL (>= 2)
# Encoding: UTF-8
# LazyData: true
# Imports: Rcpp (>= 0.12.12)
# LinkingTo: Rcpp, RcppEigen
# Depends: Matrix (>= 1.2-10)
# RoxygenNote: 6.0.1
# NeedsCompilation: yes
# Packaged: 2018-04-23 04:07:16 UTC; spiri
# Repository: CRAN
# Date/Publication: 2018-04-23 04:47:11 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
