{% set version = '2.0.11' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-emmixmfa
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/EMMIXmfa_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/EMMIXmfa/EMMIXmfa_{{ version }}.tar.gz
  sha256: 39045b50cb20a1752b2736542e801f7def1e99c2568950fa87902190f8ad8e1a

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: mvtnorm, GGally, ggplot2
requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}make
    - {{ posix }}sed               # [win]
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]

  host:
    - r-base

  run:
    - r-base
    - {{native}}gcc-libs         # [win]

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('EMMIXmfa')"           # [not win]
    - "\"%R%\" -e \"library('EMMIXmfa')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/suren-rathnayake/EMMIXmfa
  license: GPL-2
  summary: We provide functions to fit finite mixtures of multivariate normal or t-distributions
    to data with various factor analytic structures adopted for the covariance/scale
    matrices. The factor analytic structures available include mixtures of factor analyzers
    and mixtures of common factor analyzers. The latter approach is so termed because
    the matrix of factor loadings is common to components before the component-specific
    rotation of the component factors to make them white noise. Note that the component-factor
    loadings are not common after this rotation. Maximum likelihood estimators of model
    parameters are obtained via the Expectation-Maximization algorithm. See descriptions
    of the algorithms used in McLachlan GJ, Peel D (2000) <doi:10.1002/0471721182.ch8>
    McLachlan GJ, Peel D (2000) <ISBN:1-55860-707-2> McLachlan GJ, Peel D, Bean RW (2003)
    <doi:10.1016/S0167-9473(02)00183-4> McLachlan GJ, Bean RW, Ben-Tovim Jones L (2007)
    <doi:10.1016/j.csda.2006.09.015> Baek J, McLachlan GJ, Flack LK (2010) <doi:10.1109/TPAMI.2009.149>
    Baek J, McLachlan GJ (2011) <doi:10.1093/bioinformatics/btr112> McLachlan GJ, Baek
    J, Rathnayake SI (2011) <doi:10.1002/9781119995678.ch9>.
  license_family: GPL2
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: EMMIXmfa
# Type: Package
# Title: Mixture Models with Component-Wise Factor Analyzers
# Version: 2.0.11
# Date: 2019-12-16
# URL: https://github.com/suren-rathnayake/EMMIXmfa
# Author: Suren Rathnayake, Geoff McLachlan, David Peel, Jangsun Baek
# Maintainer: Suren Rathnayake <surenr@gmail.com>
# Description: We provide functions to fit finite mixtures of multivariate normal or t-distributions to data with various factor analytic structures adopted for the covariance/scale matrices. The factor analytic structures available include mixtures of factor analyzers and mixtures of common factor analyzers. The latter approach is so termed because the matrix of factor loadings is common to components before the component-specific rotation of the component factors to make them white noise. Note that the component-factor loadings are not common after this rotation. Maximum likelihood estimators of model parameters are obtained via the Expectation-Maximization algorithm. See descriptions of the algorithms used in McLachlan GJ, Peel D (2000) <doi:10.1002/0471721182.ch8> McLachlan GJ, Peel D (2000) <ISBN:1-55860-707-2> McLachlan GJ, Peel D, Bean RW (2003) <doi:10.1016/S0167-9473(02)00183-4> McLachlan GJ, Bean RW, Ben-Tovim Jones L (2007) <doi:10.1016/j.csda.2006.09.015> Baek J, McLachlan GJ, Flack LK (2010) <doi:10.1109/TPAMI.2009.149> Baek J, McLachlan GJ (2011) <doi:10.1093/bioinformatics/btr112> McLachlan GJ, Baek J, Rathnayake SI (2011) <doi:10.1002/9781119995678.ch9>.
# Suggests: mvtnorm, GGally, ggplot2
# License: GPL (>= 2)
# NeedsCompilation: yes
# Repository: CRAN
# Packaged: 2019-12-16 22:00:36 UTC; uqsratha
# Date/Publication: 2019-12-16 22:50:02 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
