{% set version = '2.1.0' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-timevis
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/timevis_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/timevis/timevis_{{ version }}.tar.gz
  sha256: 49208df1683a0ef7a207773d9c0053dc46f3fcc4bd3054155a85671a1c8f6299

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: lubridate, testthat (>= 0.9.1), shinydisconnect
requirements:
  build:
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-htmltools >=0.2.6
    - r-htmlwidgets >=0.6
    - r-jsonlite
    - r-magrittr
    - r-rmarkdown
    - r-shiny

  run:
    - r-base
    - r-htmltools >=0.2.6
    - r-htmlwidgets >=0.6
    - r-jsonlite
    - r-magrittr
    - r-rmarkdown
    - r-shiny

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('timevis')"           # [not win]
    - "\"%R%\" -e \"library('timevis')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/daattali/timevis
  license: MIT
  summary: Create rich and fully interactive timeline visualizations. Timelines can be included
    in Shiny apps or R markdown documents. 'timevis' includes an extensive API to manipulate
    a timeline after creation, and supports getting data out of the visualization into
    R. Based on the 'vis.js' Timeline JavaScript library.
  license_family: MIT
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/MIT'
    - LICENSE

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: timevis
# Title: Create Interactive Timeline Visualizations in R
# Version: 2.1.0
# Authors@R: c( person("Dean", "Attali", email = "daattali@gmail.com", role = c("aut", "cre"), comment = c("R interface", ORCID="0000-0002-5645-3493")), person(family = "Almende B.V.", role = c("aut", "cph"), comment = "vis.js Timeline library, https://visjs.github.io/vis-timeline/docs/timeline/") )
# Description: Create rich and fully interactive timeline visualizations. Timelines can be included in Shiny apps or R markdown documents. 'timevis' includes an extensive API to manipulate a timeline after creation, and supports getting data out of the visualization into R. Based on the 'vis.js' Timeline JavaScript library.
# URL: https://github.com/daattali/timevis
# BugReports: https://github.com/daattali/timevis/issues
# Depends: R (>= 3.1.0)
# Imports: htmltools (>= 0.2.6), htmlwidgets (>= 0.6), jsonlite, magrittr, methods, rmarkdown, shiny
# Suggests: lubridate, testthat (>= 0.9.1), shinydisconnect
# License: MIT + file LICENSE
# Encoding: UTF-8
# LazyData: true
# RoxygenNote: 7.2.1
# NeedsCompilation: no
# Packaged: 2022-10-28 07:15:03 UTC; Dean-X1C
# Author: Dean Attali [aut, cre] (R interface, <https://orcid.org/0000-0002-5645-3493>), Almende B.V. [aut, cph] (vis.js Timeline library, https://visjs.github.io/vis-timeline/docs/timeline/)
# Maintainer: Dean Attali <daattali@gmail.com>
# Repository: CRAN
# Date/Publication: 2022-11-03 08:30:02 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
