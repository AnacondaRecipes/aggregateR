{% set version = '2.0.2' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-rmargint
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/rmargint_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/rmargint/rmargint_{{ version }}.tar.gz
  sha256: 89f1ba85cc3ca982815fd5d4461d8e32eea87316798469e8b317b54642283847

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}make
    - {{ posix }}sed               # [win]
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]

  host:
    - r-base

  run:
    - r-base
    - {{native}}gcc-libs         # [win]

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('rmargint')"           # [not win]
    - "\"%R%\" -e \"library('rmargint')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=rmargint
  license: GPL (>= 3.0)
  summary: Three robust marginal integration procedures for additive models based on local polynomial
    kernel smoothers. As a preliminary estimator of the multivariate function for the
    marginal integration procedure, a first approach uses local constant M-estimators,
    a second one uses local polynomials of order 1 over all the components of covariates,
    and the third one uses M-estimators based on local polynomials but only in the direction
    of interest. For this last approach, estimators of the derivatives of the additive
    functions can be obtained. All three procedures can compute predictions for points
    outside the training set if desired. See Boente and Martinez (2017) <doi:10.1007/s11749-016-0508-0>
    for details.
  license_family: GPL3

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: rmargint
# Type: Package
# Title: Robust Marginal Integration Procedures
# Version: 2.0.2
# Date: 2020-08-03
# Authors@R: c(person("Alejandra", "Martinez", role=c("aut", "cre"), email="ale_m_martinez@hotmail.com"), person("Matias", "Salibian-Barrera", role = c("aut"), email = "matias@stat.ubc.ca"))
# Description: Three robust marginal integration procedures for additive models based on local polynomial kernel smoothers. As a preliminary estimator of the multivariate function for the marginal integration procedure, a first approach uses local constant M-estimators, a second one uses local polynomials of order 1 over all the components of covariates, and the third one uses M-estimators based on local polynomials but only in the direction of interest. For this last approach, estimators of the derivatives of the additive functions can be obtained. All three procedures can compute predictions for points outside the training set if desired. See Boente and Martinez (2017) <doi:10.1007/s11749-016-0508-0> for details.
# License: GPL (>= 3.0)
# RoxygenNote: 6.1.1
# Encoding: UTF-8
# Imports: stats, graphics
# NeedsCompilation: yes
# Packaged: 2020-08-03 23:17:07 UTC; Alejandra
# Author: Alejandra Martinez [aut, cre], Matias Salibian-Barrera [aut]
# Maintainer: Alejandra Martinez <ale_m_martinez@hotmail.com>
# Repository: CRAN
# Date/Publication: 2020-08-04 22:50:02 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
