{% set version = '0.1-1' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-opusminer
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/opusminer_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/opusminer/opusminer_{{ version }}.tar.gz
  sha256: 93cdefef6455454a814b7db0a241984e8d6b8ae39597a4b9ab5dc518e6ba86ef

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}make
    - {{ posix }}sed               # [win]
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-matrix >=1.2_7
    - r-rcpp >=0.12.9
    - r-arules >=1.5_0

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-matrix >=1.2_7
    - r-rcpp >=0.12.9
    - r-arules >=1.5_0

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('opusminer')"           # [not win]
    - "\"%R%\" -e \"library('opusminer')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=opusminer
  license: GPL-3
  summary: Provides a simple R interface to the OPUS Miner algorithm (implemented in C++) for
    finding the top-k productive, non-redundant itemsets from transaction data.  The
    OPUS Miner algorithm uses the OPUS search algorithm to efficiently discover the
    key associations in transaction data, in the form of self-sufficient itemsets, using
    either leverage or lift.  See <http://i.giwebb.com/index.php/research/association-discovery/>
    for more information in relation to the OPUS Miner algorithm.
  license_family: GPL3
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-3'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: opusminer
# Type: Package
# Title: OPUS Miner Algorithm for Filtered Top-k Association Discovery
# Version: 0.1-1
# Authors@R: c( person("Geoffrey I", "Webb", role = c("aut", "cph"), comment = "OPUS Miner algorithm and C++ implementation, http://i.giwebb.com/index.php/research/association-discovery/"), person("Christoph", "Bergmeir", email = "christoph.bergmeir@monash.edu", role = c("ctb", "cre")), person("Angus", "Dempster", role = c("ctb", "cph"), comment = "R interface"))
# Description: Provides a simple R interface to the OPUS Miner algorithm (implemented in C++) for finding the top-k productive, non-redundant itemsets from transaction data.  The OPUS Miner algorithm uses the OPUS search algorithm to efficiently discover the key associations in transaction data, in the form of self-sufficient itemsets, using either leverage or lift.  See <http://i.giwebb.com/index.php/research/association-discovery/> for more information in relation to the OPUS Miner algorithm.
# License: GPL-3
# Copyright: OPUS Miner algorithm and C++ implementation Copyright (C) 2012-2017 Geoffrey I Webb, R interface Copyright (C) 2017 Angus Dempster.
# Encoding: UTF-8
# LazyData: true
# Imports: Rcpp (>= 0.12.9), arules (>= 1.5-0), Matrix (>= 1.2-7), methods
# LinkingTo: Rcpp
# RoxygenNote: 6.0.0
# NeedsCompilation: yes
# Packaged: 2020-02-03 22:16:35 UTC; bergmeir
# Author: Geoffrey I Webb [aut, cph] (OPUS Miner algorithm and C++ implementation, http://i.giwebb.com/index.php/research/association-discovery/), Christoph Bergmeir [ctb, cre], Angus Dempster [ctb, cph] (R interface)
# Maintainer: Christoph Bergmeir <christoph.bergmeir@monash.edu>
# Repository: CRAN
# Date/Publication: 2020-02-03 23:10:02 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
