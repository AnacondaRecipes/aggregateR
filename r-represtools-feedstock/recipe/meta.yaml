{% set version = '0.1.2' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-represtools
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/represtools_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/represtools/represtools_{{ version }}.tar.gz
  sha256: 65f0f24ad0f9e92f394c3b04ddfa624c319e162b751a74429b43e044205b6afe

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: testthat, knitr, rmarkdown
requirements:
  build:
    - {{posix}}zip               # [win]

  host:
    - r-base
    - r-whisker

  run:
    - r-base
    - r-whisker

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('represtools')"           # [not win]
    - "\"%R%\" -e \"library('represtools')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: http://pirategrunt.com/represtools
  license: GPL-3
  summary: Reproducible research tools automates the creation of an analysis directory structure
    and work flow. There are R markdown skeletons which encapsulate typical analytic
    work flow steps. Functions will create appropriate modules which may pass data from
    one step to another.
  license_family: GPL3
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-3'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: represtools
# Version: 0.1.2
# Title: Reproducible Research Tools
# Description: Reproducible research tools automates the creation of an analysis directory structure and work flow. There are R markdown skeletons which encapsulate typical analytic work flow steps. Functions will create appropriate modules which may pass data from one step to another.
# Authors@R: person("Brian", "Fannin", email = "FanninQED@Yahoo.com", role = c("aut", "cre"))
# Maintainer: Brian Fannin <FanninQED@Yahoo.com>
# URL: http://pirategrunt.com/represtools
# BugReports: https://github.com/PirateGrunt/represtools/issues
# Depends: R (>= 3.2.0)
# License: GPL (>= 3)
# SystemRequirements: GNU make
# LazyData: true
# Imports: whisker
# Suggests: testthat, knitr, rmarkdown
# RoxygenNote: 5.0.1
# VignetteBuilder: knitr
# NeedsCompilation: no
# Packaged: 2016-08-30 01:35:03 UTC; brian
# Author: Brian Fannin [aut, cre]
# Repository: CRAN
# Date/Publication: 2016-08-30 07:49:12

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
