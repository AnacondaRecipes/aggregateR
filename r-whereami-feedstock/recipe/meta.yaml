{% set version = '0.2.0' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-whereami
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/whereami_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/whereami/whereami_{{ version }}.tar.gz
  sha256: 390799cc4fce15973e508bcad9de352521bdcf9ba6f18c40fdc0980534dbe16d

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: magrittr, ggplot2, kableExtra, testthat, covr, knitr, rmarkdown
requirements:
  build:
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-cli
    - r-jsonlite
    - r-rstudioapi

  run:
    - r-base
    - r-cli
    - r-jsonlite
    - r-rstudioapi

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('whereami')"           # [not win]
    - "\"%R%\" -e \"library('whereami')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/yonicd/whereami
  license: MIT
  summary: Robust and reliable functions to return informative outputs to console with the run
    or source location of a command. This can be from the  'RScript'/R terminal commands
    or 'RStudio' console, source editor, 'Rmarkdown' document and a Shiny application.
  license_family: MIT
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/MIT'
    - LICENSE

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: whereami
# Type: Package
# Title: Reliably Return the Source and Call Location of a Command
# Description: Robust and reliable functions to return informative outputs to console with the run or source location of a command. This can be from the  'RScript'/R terminal commands or 'RStudio' console, source editor, 'Rmarkdown' document and a Shiny application.
# Version: 0.2.0
# Authors@R: c( person(given = "Jonathan", family = "Sidi", email = "yonicd@gmail.com", role = c("aut", "cre"), comment = c(ORCID = "0000-0002-4222-1819")), person("Colin", "Fay", email = "contact@colinfay.me", role = c("ctb"), comment=c(ORCID="0000-0001-7343-1846")), person("Kirill", "M\u00fcller", role = c("aut"), email = "krlmlr+r@mailbox.org", comment = c(ORCID = "0000-0002-1416-3412")) )
# License: MIT + file LICENSE
# Depends: R (>= 3.2.0)
# Imports: utils, graphics, grDevices, stats, cli, rstudioapi, jsonlite
# URL: https://github.com/yonicd/whereami
# BugReports: https://github.com/yonicd/whereami/issues
# Encoding: UTF-8
# RoxygenNote: 7.2.1
# Suggests: magrittr, ggplot2, kableExtra, testthat, covr, knitr, rmarkdown
# VignetteBuilder: knitr
# NeedsCompilation: no
# Packaged: 2022-12-22 20:30:45 UTC; yoni.sidi
# Author: Jonathan Sidi [aut, cre] (<https://orcid.org/0000-0002-4222-1819>), Colin Fay [ctb] (<https://orcid.org/0000-0001-7343-1846>), Kirill Muller [aut] (<https://orcid.org/0000-0002-1416-3412>)
# Maintainer: Jonathan Sidi <yonicd@gmail.com>
# Repository: CRAN
# Date/Publication: 2022-12-22 20:40:02 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
