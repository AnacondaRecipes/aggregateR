{% set version = '0.6.1' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-vegalite
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/vegalite_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/vegalite/vegalite_{{ version }}.tar.gz
  sha256: 736555f1d7347e986c948e8cd577b26de0bf431bef35e6bd9d46daf1f2869f36

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: testthat, knitr, rmarkdown
requirements:
  build:
    - {{posix}}zip               # [win]

  host:
    - r-base
    - r-base64
    - r-clipr
    - r-digest
    - r-htmltools
    - r-htmlwidgets >=0.6
    - r-jsonlite
    - r-magrittr
    - r-webshot

  run:
    - r-base
    - r-base64
    - r-clipr
    - r-digest
    - r-htmltools
    - r-htmlwidgets >=0.6
    - r-jsonlite
    - r-magrittr
    - r-webshot

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('vegalite')"           # [not win]
    - "\"%R%\" -e \"library('vegalite')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: http://github.com/hrbrmstr/vegalite
  license: AGPL-3
  summary: The 'Vega-Lite' 'JavaScript' framework provides a higher-level grammar for visual
    analysis, akin to 'ggplot' or 'Tableau', that generates complete 'Vega' specifications.
    Functions exist which enable building a valid 'spec' from scratch or importing a
    previously created 'spec' file. Functions also exist to export 'spec' files and
    to generate code which will enable plots to be embedded in properly configured web
    pages. The default behavior is to generate an 'htmlwidget'.
  license_family: AGPL
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/AGPL-3'
    - LICENSE

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: vegalite
# Type: Package
# Title: Tools to Encode Visualizations with the 'Grammar of Graphics'-Like 'Vega-Lite' 'Spec'
# Version: 0.6.1
# Date: 2016-03-21
# Maintainer: Bob Rudis <bob@rudis.net>
# Authors@R: c( person("Bob", "Rudis", email = "bob@rudis.net", role = c("aut", "cre")), person("Kanit", "Wongsuphasawat,", comment = "Vega-Lite library", role = c("aut")), person("Jeffrey", "Heer", comment = "Vega-Lite library", role = c("aut")), person("Arvind", "Satyanarayan", comment = "Vega-Lite library", role = c("aut")), person("Mike", "Bostock", comment = "D3 library", role = c("aut")) )
# Description: The 'Vega-Lite' 'JavaScript' framework provides a higher-level grammar for visual analysis, akin to 'ggplot' or 'Tableau', that generates complete 'Vega' specifications. Functions exist which enable building a valid 'spec' from scratch or importing a previously created 'spec' file. Functions also exist to export 'spec' files and to generate code which will enable plots to be embedded in properly configured web pages. The default behavior is to generate an 'htmlwidget'.
# URL: http://github.com/hrbrmstr/vegalite
# BugReports: https://github.com/hrbrmstr/vegalite/issues
# License: AGPL + file LICENSE
# Encoding: UTF-8
# Suggests: testthat, knitr, rmarkdown
# Depends: R (>= 3.0.0)
# Imports: jsonlite, htmlwidgets (>= 0.6), htmltools, magrittr, digest, tools, clipr, utils, webshot, base64, stats
# RoxygenNote: 5.0.1
# VignetteBuilder: knitr
# NeedsCompilation: no
# Packaged: 2016-03-22 01:12:02 UTC; root
# Author: Bob Rudis [aut, cre], Kanit Wongsuphasawat, [aut] (Vega-Lite library), Jeffrey Heer [aut] (Vega-Lite library), Arvind Satyanarayan [aut] (Vega-Lite library), Mike Bostock [aut] (D3 library)
# Repository: CRAN
# Date/Publication: 2016-03-22 23:51:16

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
