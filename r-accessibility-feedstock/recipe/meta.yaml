{% set version = '1.3.0' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-accessibility
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/accessibility_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/accessibility/accessibility_{{ version }}.tar.gz
  sha256: 5484cd99cd1277a050f77678a5349c94dfefa6b5d6008d49c33c297305ff6ec9

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: covr, ggplot2, knitr, rmarkdown, sf, testthat
requirements:
  build:
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-hmisc
    - r-rdpack >=0.7
    - r-checkmate
    - r-data.table

  run:
    - r-base
    - r-hmisc
    - r-rdpack >=0.7
    - r-checkmate
    - r-data.table

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('accessibility')"           # [not win]
    - "\"%R%\" -e \"library('accessibility')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/ipeaGIT/accessibility
  license: MIT
  summary: 'A set of fast and convenient functions to calculate multiple transport accessibility
    measures. Given a pre-computed travel cost matrix and a land use dataset (containing
    the location of jobs, healthcare and population, for example), the package allows
    one to calculate active and passive accessibility levels using multiple accessibility
    measures, such as: cumulative opportunities (using either travel cost cutoffs or
    intervals), minimum travel cost to closest N number of activities, gravity-based
    (with different decay functions) and different floating catchment area methods.'
  license_family: MIT
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/MIT'
    - LICENSE

# The original CRAN metadata for this package was:

# Type: Package
# Package: accessibility
# Title: Transport Accessibility Measures
# Version: 1.3.0
# Authors@R: c( person("Rafael H. M.", "Pereira", , "rafa.pereira.br@gmail.com", role = "aut", comment = c(ORCID = "0000-0003-2125-7465")), person("Daniel", "Herszenhut", , "dhersz@gmail.com", role = c("aut", "cre"), comment = c(ORCID = "0000-0001-8066-1105")), person("Ipea - Institute for Applied Economic Research", role = c("cph", "fnd")) )
# Description: A set of fast and convenient functions to calculate multiple transport accessibility measures. Given a pre-computed travel cost matrix and a land use dataset (containing the location of jobs, healthcare and population, for example), the package allows one to calculate active and passive accessibility levels using multiple accessibility measures, such as: cumulative opportunities (using either travel cost cutoffs or intervals), minimum travel cost to closest N number of activities, gravity-based (with different decay functions) and different floating catchment area methods.
# License: MIT + file LICENSE
# URL: https://github.com/ipeaGIT/accessibility
# BugReports: https://github.com/ipeaGIT/accessibility/issues
# Depends: R (>= 3.5.0)
# Imports: checkmate, data.table, Hmisc, Rdpack (>= 0.7), stats, utils
# Suggests: covr, ggplot2, knitr, rmarkdown, sf, testthat
# VignetteBuilder: knitr
# RdMacros: Rdpack
# Encoding: UTF-8
# NeedsCompilation: no
# RoxygenNote: 7.2.3
# Packaged: 2023-10-20 21:24:01 UTC; dhersz
# Author: Rafael H. M. Pereira [aut] (<https://orcid.org/0000-0003-2125-7465>), Daniel Herszenhut [aut, cre] (<https://orcid.org/0000-0001-8066-1105>), Ipea - Institute for Applied Economic Research [cph, fnd]
# Maintainer: Daniel Herszenhut <dhersz@gmail.com>
# Repository: CRAN
# Date/Publication: 2023-10-20 21:40:10 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
