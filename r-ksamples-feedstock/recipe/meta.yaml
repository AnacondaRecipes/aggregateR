{% set version = '1.2-9' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-ksamples
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/kSamples_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/kSamples/kSamples_{{ version }}.tar.gz
  sha256: ba3ec4af3dfcf7cf12f0b784ef67bfea565e16985647ead904629886cc1542ff

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}make
    - {{ posix }}sed               # [win]
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-suppdists

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-suppdists

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('kSamples')"           # [not win]
    - "\"%R%\" -e \"library('kSamples')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=kSamples
  license: GPL-2
  summary: Compares k samples using the Anderson-Darling test, Kruskal-Wallis type tests with
    different rank score criteria, Steel's multiple comparison test, and the Jonckheere-Terpstra
    (JT) test. It computes asymptotic, simulated or (limited) exact P-values, all valid
    under randomization, with or without ties, or conditionally under random sampling
    from populations, given the observed tie pattern.  Except for Steel's test and the
    JT test it also combines these tests across several blocks of samples.  Also analyzed
    are 2 x t contingency tables and their blocked combinations using the Kruskal-Wallis
    criterion.  Steel's test is inverted to provide simultaneous confidence bounds for
    shift parameters.  A plotting function compares tail probabilities obtained under
    asymptotic approximation with those obtained via simulation or exact calculations.
  license_family: GPL2
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: kSamples
# Type: Package
# Title: K-Sample Rank Tests and their Combinations
# Version: 1.2-9
# Date: 2019-05-20
# Authors@R: c(person("Fritz", "Scholz",role=c("aut","cre"),email = "fscholz@u.washington.edu"), person("Angie", "Zhu", role=c("aut"), email= "a.zhu.stat@gmail.com"))
# Author: Fritz Scholz [aut, cre], Angie Zhu [aut]
# Maintainer: Fritz Scholz <fscholz@u.washington.edu>
# Depends: SuppDists
# Imports: methods, graphics, stats
# Description: Compares k samples using the Anderson-Darling test, Kruskal-Wallis type tests with different rank score criteria, Steel's multiple comparison test, and the Jonckheere-Terpstra (JT) test. It computes asymptotic, simulated or (limited) exact P-values, all valid under randomization, with or without ties, or conditionally under random sampling from populations, given the observed tie pattern.  Except for Steel's test and the JT test it also combines these tests across several blocks of samples.  Also analyzed are 2 x t contingency tables and their blocked combinations using the Kruskal-Wallis criterion.  Steel's test is inverted to provide simultaneous confidence bounds for shift parameters.  A plotting function compares tail probabilities obtained under asymptotic approximation with those obtained via simulation or exact calculations.
# License: GPL (>= 2)
# LazyLoad: yes
# NeedsCompilation: yes
# Packaged: 2019-05-20 21:03:07 UTC; fritz
# Repository: CRAN
# Date/Publication: 2019-05-20 21:50:03 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
