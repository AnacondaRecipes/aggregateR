{% set version = '2016.3.2' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-nlmrt
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/nlmrt_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/nlmrt/nlmrt_{{ version }}.tar.gz
  sha256: d677392bcb244e2d1812420979d3e1db4ccc857d98803b5f315e8d9114c018bc

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: minpack.lm, optimx, Rvmmin, Rcgmin, numDeriv
requirements:
  build:
    - {{posix}}zip               # [win]

  host:
    - r-base

  run:
    - r-base

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('nlmrt')"           # [not win]
    - "\"%R%\" -e \"library('nlmrt')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=nlmrt
  license: GPL-2
  summary: Replacement for nls() tools for working with nonlinear least squares problems. The
    calling structure is similar to, but much simpler than, that of the nls() function.
    Moreover, where nls() specifically does NOT deal with small or zero residual problems,
    nlmrt is quite happy to solve them. It also attempts to be more robust in finding
    solutions, thereby avoiding 'singular gradient' messages that arise in the Gauss-Newton
    method within nls(). The Marquardt-Nash approach in nlmrt generally works more reliably
    to get a solution, though this may be  one of a set of possibilities, and may also
    be statistically unsatisfactory. Added print and summary as of August 28, 2012.
  license_family: GPL2
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: nlmrt
# Type: Package
# Title: Functions for Nonlinear Least Squares Solutions
# Version: 2016.3.2
# Date: 2016-3-2
# Authors@R: c( person(given = c("John", "C."), family = "Nash", role = c("aut", "cre"), email = "nashjc@uottawa.ca") )
# Author: John C. Nash [aut, cre]
# Maintainer: John C. Nash <nashjc@uottawa.ca>
# Description: Replacement for nls() tools for working with nonlinear least squares problems. The calling structure is similar to, but much simpler than, that of the nls() function. Moreover, where nls() specifically does NOT deal with small or zero residual problems, nlmrt is quite happy to solve them. It also attempts to be more robust in finding solutions, thereby avoiding 'singular gradient' messages that arise in the Gauss-Newton method within nls(). The Marquardt-Nash approach in nlmrt generally works more reliably to get a solution, though this may be  one of a set of possibilities, and may also be statistically unsatisfactory. Added print and summary as of August 28, 2012.
# License: GPL-2
# Depends: R (>= 2.15.0)
# Suggests: minpack.lm, optimx, Rvmmin, Rcgmin, numDeriv
# NeedsCompilation: no
# Packaged: 2016-03-04 16:30:35 UTC; john
# Repository: CRAN
# Date/Publication: 2016-03-04 23:57:39

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
