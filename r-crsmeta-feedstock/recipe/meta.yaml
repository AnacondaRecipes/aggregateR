{% set version = '0.3.0' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-crsmeta
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/crsmeta_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/crsmeta/crsmeta_{{ version }}.tar.gz
  sha256: 02b4bc2f28f090067014f2640896d94e967669bd824c40a524475506105e60a7

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: testthat (>= 2.1.0), spelling
requirements:
  build:
    - {{ posix }}zip               # [win]

  host:
    - r-base

  run:
    - r-base

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('crsmeta')"           # [not win]
    - "\"%R%\" -e \"library('crsmeta')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/hypertidy/crsmeta
  license: GPL-3
  summary: Obtain coordinate system metadata from various data formats. There are functions to
    extract a 'CRS' (coordinate reference system, <https://en.wikipedia.org/wiki/Spatial_reference_system>)
    in 'EPSG' (European Petroleum Survey Group, <http://www.epsg.org/>), 'PROJ4' <https://proj.org/>,
    or 'WKT2' (Well-Known Text 2, <http://docs.opengeospatial.org/is/12-063r5/12-063r5.html>)
    forms. This is purely for getting simple metadata from in-memory formats, please
    use other tools for out of memory data sources.
  license_family: GPL3
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-3'

# The original CRAN metadata for this package was:

# Package: crsmeta
# Title: Extract Coordinate System Metadata
# Version: 0.3.0
# Authors@R: person(given = "Michael", family = "Sumner", role = c("aut", "cre"), email = "mdsumner@gmail.com", comment = c(ORCID = "0000-0002-2471-7511"))
# Description: Obtain coordinate system metadata from various data formats. There are functions to extract a 'CRS' (coordinate reference system, <https://en.wikipedia.org/wiki/Spatial_reference_system>) in 'EPSG' (European Petroleum Survey Group, <http://www.epsg.org/>), 'PROJ4' <https://proj.org/>, or 'WKT2' (Well-Known Text 2, <http://docs.opengeospatial.org/is/12-063r5/12-063r5.html>) forms. This is purely for getting simple metadata from in-memory formats, please use other tools for out of memory data sources.
# License: GPL-3
# Encoding: UTF-8
# LazyData: true
# RoxygenNote: 7.1.0
# Depends: R (>= 3.5.0)
# Suggests: testthat (>= 2.1.0), spelling
# Imports: methods
# URL: https://github.com/hypertidy/crsmeta
# BugReports: https://github.com/hypertidy/crsmeta/issues
# Language: en-US
# NeedsCompilation: no
# Packaged: 2020-03-29 09:58:44 UTC; mdsumner
# Author: Michael Sumner [aut, cre] (<https://orcid.org/0000-0002-2471-7511>)
# Maintainer: Michael Sumner <mdsumner@gmail.com>
# Repository: CRAN
# Date/Publication: 2020-03-29 10:10:02 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
