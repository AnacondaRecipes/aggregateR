{% set version = '1.5.6' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-limsolve
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/limSolve_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/limSolve/limSolve_{{ version }}.tar.gz
  sha256: b97ea9930383634c8112cdbc42f71c4e93fe0e7bfaa8f401921835cb44cb49a0

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('fortran') }}        # [not win]
    - {{ compiler('m2w64_fortran') }}  # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}make
    - {{ posix }}sed               # [win]
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-mass
    - r-lpsolve
    - r-quadprog

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-mass
    - r-lpsolve
    - r-quadprog

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('limSolve')"           # [not win]
    - "\"%R%\" -e \"library('limSolve')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=limSolve
  license: GPL-3
  summary: 'Functions that (1) find the minimum/maximum of a linear or quadratic function: min
    or max (f(x)), where f(x) = ||Ax-b||^2 or f(x) = sum(a_i*x_i) subject to equality
    constraints Ex=f and/or inequality constraints Gx>=h, (2) sample an underdetermined-
    or overdetermined system Ex=f subject to Gx>=h, and if applicable Ax~=b, (3) solve
    a linear system Ax=B for the unknown x. It includes banded and tridiagonal linear
    systems.'
  license_family: GPL3
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-3'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: limSolve
# Version: 1.5.6
# Title: Solving Linear Inverse Models
# Authors@R: c(person("Karline","Soetaert", role = c("aut","cre"), email = "karline.soetaert@nioz.nl"), person("Karel","Van den Meersche", role = "aut"), person("Dick","van Oevelen", role = "aut", email = "dick.vanoevelen@nioz.nl"), person("Charles L.","Lawson", role = "ctb", comment = "file inverse.f"), person("Richard J.","Hanson", role = "ctb", comment = "file inverse.f"), person("Jack","Dongarra", role = "ctb", comment = "files solve.f, inverse.f"), person("Cleve","Moler", role = "ctb", comment = "file solve.f") )
# Maintainer: Karline Soetaert <karline.soetaert@nioz.nl>
# Depends: R (>= 2.10)
# Imports: quadprog, lpSolve, MASS
# Description: Functions that (1) find the minimum/maximum of a linear or quadratic function: min or max (f(x)), where f(x) = ||Ax-b||^2 or f(x) = sum(a_i*x_i) subject to equality constraints Ex=f and/or inequality constraints Gx>=h, (2) sample an underdetermined- or overdetermined system Ex=f subject to Gx>=h, and if applicable Ax~=b, (3) solve a linear system Ax=B for the unknown x. It includes banded and tridiagonal linear systems.
# License: GPL
# Copyright: inst/COPYRIGHTS
# LazyData: yes
# Author: Karline Soetaert [aut, cre], Karel Van den Meersche [aut], Dick van Oevelen [aut], Charles L. Lawson [ctb] (file inverse.f), Richard J. Hanson [ctb] (file inverse.f), Jack Dongarra [ctb] (files solve.f, inverse.f), Cleve Moler [ctb] (file solve.f)
# Repository: CRAN
# Repository/R-Forge/Project: limsolve
# Repository/R-Forge/Revision: 119
# Repository/R-Forge/DateTimeStamp: 2019-11-14 06:43:07
# Date/Publication: 2019-11-14 11:10:06 UTC
# NeedsCompilation: yes
# Packaged: 2019-11-14 06:50:27 UTC; rforge

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
