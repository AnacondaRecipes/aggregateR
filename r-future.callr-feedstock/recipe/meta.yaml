{% set version = '0.8.2' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-future.callr
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/future.callr_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/future.callr/future.callr_{{ version }}.tar.gz
  sha256: 0b2be5dc0c35a530820b8503a541d2141172c6fe2778438b70ae98aad8281892

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: globals, future.apply, listenv, markdown, R.rsp
requirements:
  build:
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-callr >=2.0.3
    - r-future >=1.33.0

  run:
    - r-base
    - r-callr >=2.0.3
    - r-future >=1.33.0

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('future.callr')"           # [not win]
    - "\"%R%\" -e \"library('future.callr')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://future.callr.futureverse.org, https://github.com/HenrikBengtsson/future.callr
  license: LGPL-2.1
  summary: Implementation of the Future API on top of the 'callr' package.  This allows you to
    process futures, as defined by the 'future' package, in parallel out of the box,
    on your local (Linux, macOS, Windows, ...) machine.  Contrary to backends relying
    on the 'parallel' package (e.g. 'future::multisession') and socket connections,
    the 'callr' backend provided here can run more than 125 parallel R processes.
  license_family: LGPL
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/LGPL-2.1'

# The original CRAN metadata for this package was:

# Package: future.callr
# Version: 0.8.2
# Depends: R (>= 3.4.0), future (>= 1.33.0)
# Imports: callr (>= 2.0.3)
# Suggests: globals, future.apply, listenv, markdown, R.rsp
# VignetteBuilder: R.rsp
# Title: A Future API for Parallel Processing using 'callr'
# Authors@R: c(person("Henrik", "Bengtsson", role=c("aut", "cre", "cph"), email = "henrikb@braju.com"))
# Description: Implementation of the Future API on top of the 'callr' package.  This allows you to process futures, as defined by the 'future' package, in parallel out of the box, on your local (Linux, macOS, Windows, ...) machine.  Contrary to backends relying on the 'parallel' package (e.g. 'future::multisession') and socket connections, the 'callr' backend provided here can run more than 125 parallel R processes.
# License: LGPL (>= 2.1)
# LazyLoad: TRUE
# URL: https://future.callr.futureverse.org, https://github.com/HenrikBengtsson/future.callr
# BugReports: https://github.com/HenrikBengtsson/future.callr/issues
# RoxygenNote: 7.2.3
# NeedsCompilation: no
# Packaged: 2023-08-08 10:43:39 UTC; henrik
# Author: Henrik Bengtsson [aut, cre, cph]
# Maintainer: Henrik Bengtsson <henrikb@braju.com>
# Repository: CRAN
# Date/Publication: 2023-08-09 18:20:06 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
