{% set version = '0.2.0' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-unine
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/unine_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/unine/unine_{{ version }}.tar.gz
  sha256: fc1660f706da7e93e34bb85f808b1d3ae43c494a47958052233005ad1d9a2d14

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: testthat, covr, stringi
requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}make
    - {{ posix }}sed               # [win]
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-rcpp >=1.0.0

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-rcpp >=1.0.0

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('unine')"           # [not win]
    - "\"%R%\" -e \"library('unine')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/pommedeterresautee/unine, https://pommedeterresautee.github.io/unine/,
    http://members.unine.ch/jacques.savoy/clef/
  license: MIT
  summary: Implementation of "light" stemmers for French, German, Italian, Spanish, Portuguese,
    Finnish, Swedish. They are based on the same work as the "light" stemmers found
    in 'SolR' <https://lucene.apache.org/solr/> or 'ElasticSearch' <https://www.elastic.co/fr/products/elasticsearch>.
    A "light" stemmer consists in removing inflections only for noun and adjectives.
    Indexing verbs for these languages is not of primary importance compared to nouns
    and adjectives. The stemming procedure for French is described in (Savoy, 1999)
    <doi:10.1002/(SICI)1097-4571(1999)50:10%3C944::AID-ASI9%3E3.3.CO;2-H>.
  license_family: MIT
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/MIT'
    - LICENSE

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: unine
# Type: Package
# Title: Unine Light Stemmer
# Version: 0.2.0
# Authors@R: c(person("Michael", "Benesty", role = c("aut", "cre", "cph"), email = "michael@benesty.fr"), person("Jacques Savoy", role = c("cph"), email = "Jacques.Savoy@unine.ch"))
# Maintainer: Michael Benesty <michael@benesty.fr>
# Description: Implementation of "light" stemmers for French, German, Italian, Spanish, Portuguese, Finnish, Swedish. They are based on the same work as the "light" stemmers found in 'SolR' <https://lucene.apache.org/solr/> or 'ElasticSearch' <https://www.elastic.co/fr/products/elasticsearch>. A "light" stemmer consists in removing inflections only for noun and adjectives. Indexing verbs for these languages is not of primary importance compared to nouns and adjectives. The stemming procedure for French is described in (Savoy, 1999) <doi:10.1002/(SICI)1097-4571(1999)50:10%3C944::AID-ASI9%3E3.3.CO;2-H>.
# URL: https://github.com/pommedeterresautee/unine, https://pommedeterresautee.github.io/unine/, http://members.unine.ch/jacques.savoy/clef/
# BugReports: https://github.com/pommedeterresautee/unine/issues
# License: MIT + file LICENSE
# Encoding: UTF-8
# LazyData: true
# LinkingTo: Rcpp
# Imports: Rcpp (>= 1.0.0), methods
# SystemRequirements: C++11
# RoxygenNote: 6.1.1
# NeedsCompilation: yes
# Suggests: testthat, covr, stringi
# Packaged: 2019-04-13 22:02:47 UTC; geantvert
# Author: Michael Benesty [aut, cre, cph], Jacques Savoy [cph]
# Repository: CRAN
# Date/Publication: 2019-04-13 22:24:09 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
