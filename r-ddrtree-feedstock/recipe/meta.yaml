{% set version = '0.1.5' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-ddrtree
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/DDRTree_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/DDRTree/DDRTree_{{ version }}.tar.gz
  sha256: d351ec029461b43c0dcc7c30d9f378753b31ba16c6dbf667869df279b874459b

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{posix}}filesystem        # [win]
    - {{posix}}make
    - {{posix}}sed               # [win]
    - {{posix}}coreutils         # [win]
    - {{posix}}zip               # [win]

  host:
    - r-base
    - r-bh
    - r-rcpp
    - r-rcppeigen
    - r-irlba

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-bh
    - r-rcpp
    - r-rcppeigen
    - r-irlba

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('DDRTree')"           # [not win]
    - "\"%R%\" -e \"library('DDRTree')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=DDRTree
  license: Artistic-2.0
  summary: 'Provides an implementation of the framework of reversed graph embedding (RGE) which
    projects data into a reduced dimensional space while constructs a principal tree
    which passes through the middle of the data simultaneously. DDRTree shows superiority
    to alternatives (Wishbone, DPT) for inferring the ordering as well as the intrinsic
    structure of the single cell genomics data. In general, it could be used to reconstruct
    the temporal progression as well as bifurcation structure of any datatype. '

  license_family: OTHER
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/Artistic-2.0'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: DDRTree
# Type: Package
# Title: Learning Principal Graphs with DDRTree
# Version: 0.1.5
# Date: 2017-4-14
# Author: Xiaojie Qiu, Cole Trapnell, Qi Mao, Li Wang
# Depends: irlba
# Imports: Rcpp
# LinkingTo: Rcpp, RcppEigen, BH
# Maintainer: Xiaojie Qiu <xqiu@uw.edu>
# Description: Provides an implementation of the framework of reversed graph embedding (RGE) which projects data into a reduced dimensional space while constructs a principal tree which passes through the middle of the data simultaneously. DDRTree shows superiority to alternatives (Wishbone, DPT) for inferring the ordering as well as the intrinsic structure of the single cell genomics data. In general, it could be used to reconstruct the temporal progression as well as bifurcation structure of any datatype.
# License: Artistic License 2.0
# RoxygenNote: 6.0.1
# SystemRequirements: C++11
# NeedsCompilation: yes
# Packaged: 2017-04-14 17:38:16 UTC; xqiu
# Repository: CRAN
# Date/Publication: 2017-04-30 20:54:17 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
