{% set version = '3.3' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-semicomprisks
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/SemiCompRisks_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/SemiCompRisks/SemiCompRisks_{{ version }}.tar.gz
  sha256: c6d1cbd4ca8fdfbe1c8e6cd20d40e45560e01ea1838ff3088ae42b3c81835619

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: R.rsp
requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{posix}}filesystem        # [win]
    - {{posix}}make
    - {{posix}}sed               # [win]
    - {{posix}}coreutils         # [win]
    - {{posix}}zip               # [win]

  host:
    - r-base
    - r-formula
    - r-mass
    - r-survival
    - gsl

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-formula
    - r-mass
    - r-survival
    - gsl

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('SemiCompRisks')"           # [not win]
    - "\"%R%\" -e \"library('SemiCompRisks')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=SemiCompRisks
  license: GPL-2
  summary: 'Hierarchical multistate models are considered to perform the analysis of independent/clustered
    semi-competing risks data. The package allows to choose the specification for model
    components from a range of options giving users substantial flexibility, including:
    accelerated failure time or proportional hazards regression models; parametric or
    non-parametric specifications for baseline survival functions and cluster-specific
    random effects distribution; a Markov or semi-Markov specification for terminal
    event following non-terminal event. While estimation is mainly performed within
    the Bayesian paradigm, the package also provides the maximum likelihood estimation
    approach for several parametric models. The package also includes functions for
    univariate survival analysis as complementary analysis tools.'

  license_family: GPL2
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: SemiCompRisks
# Type: Package
# Title: Hierarchical Models for Parametric and Semi-Parametric Analyses of Semi-Competing Risks Data
# Version: 3.3
# Date: 2019-1-27
# Author: Kyu Ha Lee, Catherine Lee, Danilo Alvares, and Sebastien Haneuse
# Maintainer: Kyu Ha Lee <klee15239@gmail.com>
# Description: Hierarchical multistate models are considered to perform the analysis of independent/clustered semi-competing risks data. The package allows to choose the specification for model components from a range of options giving users substantial flexibility, including: accelerated failure time or proportional hazards regression models; parametric or non-parametric specifications for baseline survival functions and cluster-specific random effects distribution; a Markov or semi-Markov specification for terminal event following non-terminal event. While estimation is mainly performed within the Bayesian paradigm, the package also provides the maximum likelihood estimation approach for several parametric models. The package also includes functions for univariate survival analysis as complementary analysis tools.
# License: GPL (>= 2)
# Suggests: R.rsp
# VignetteBuilder: R.rsp
# Depends: MASS, survival, Formula, R (>= 3.3.0)
# LazyLoad: yes
# NeedsCompilation: yes
# Packaged: 2019-01-27 23:53:57 UTC; kyuhalee
# Repository: CRAN
# Date/Publication: 2019-01-28 05:20:02 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
