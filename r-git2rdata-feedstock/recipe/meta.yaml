{% set version = '0.4.0' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-git2rdata
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/git2rdata_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/git2rdata/git2rdata_{{ version }}.tar.gz
  sha256: 2d2d83e403a0bb5e388ddc1a586c2281db6760cac5a05dda82d2b62cf4241916

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: ggplot2, knitr, microbenchmark, rmarkdown, spelling, testthat
requirements:
  build:
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-assertthat
    - r-git2r >=0.23.0
    - r-yaml

  run:
    - r-base
    - r-assertthat
    - r-git2r >=0.23.0
    - r-yaml

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('git2rdata')"           # [not win]
    - "\"%R%\" -e \"library('git2rdata')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://ropensci.github.io/git2rdata/, https://github.com/ropensci/git2rdata/
  license: GPL-3
  summary: The git2rdata package is an R package for writing and reading dataframes as plain
    text files.  A metadata file stores important information.  1) Storing metadata
    allows to maintain the classes of variables.  By default, git2rdata optimizes the
    data for file storage. The optimization is most effective on data containing factors.  The
    optimization makes the data less human readable.  The user can turn this off when
    they prefer a human readable format over smaller files. Details on the implementation
    are available in vignette("plain_text", package = "git2rdata").  2) Storing metadata
    also allows smaller row based diffs between two consecutive commits.  This is a
    useful feature when storing data as plain text files under version control.  Details
    on this part of the implementation are available in vignette("version_control",
    package = "git2rdata").  Although we envisioned git2rdata with a git workflow in
    mind, you can use it in combination with other version control systems like subversion
    or mercurial.  3) git2rdata is a useful tool in a reproducible and traceable workflow.  vignette("workflow",
    package = "git2rdata") gives a toy example.  4) vignette("efficiency", package =
    "git2rdata") provides some insight into the efficiency of file storage, git repository
    size and speed for writing and reading.
  license_family: GPL3
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-3'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: git2rdata
# Title: Store and Retrieve Data.frames in a Git Repository
# Version: 0.4.0
# Authors@R: c( person("Thierry", "Onkelinx", , "thierry.onkelinx@inbo.be", role = c("aut", "cre"), comment = c(ORCID = "0000-0001-8804-4216")), person("Floris", "Vanderhaeghe", , "floris.vanderhaeghe@inbo.be", role = "ctb", comment = c(ORCID = "0000-0002-6378-6229")), person("Peter", "Desmet", , "peter.desmet@inbo.be", role = "ctb", comment = c(ORCID = "0000-0002-8442-8025")), person("Els", "Lommelen", , "els.lommelen@inbo.be", role = "ctb", comment = c(ORCID = "0000-0002-3481-5684")), person("Research Institute for Nature and Forest", , , "info@inbo.be", role = c("cph", "fnd")) )
# Description: The git2rdata package is an R package for writing and reading dataframes as plain text files.  A metadata file stores important information.  1) Storing metadata allows to maintain the classes of variables.  By default, git2rdata optimizes the data for file storage. The optimization is most effective on data containing factors.  The optimization makes the data less human readable.  The user can turn this off when they prefer a human readable format over smaller files. Details on the implementation are available in vignette("plain_text", package = "git2rdata").  2) Storing metadata also allows smaller row based diffs between two consecutive commits.  This is a useful feature when storing data as plain text files under version control.  Details on this part of the implementation are available in vignette("version_control", package = "git2rdata").  Although we envisioned git2rdata with a git workflow in mind, you can use it in combination with other version control systems like subversion or mercurial.  3) git2rdata is a useful tool in a reproducible and traceable workflow.  vignette("workflow", package = "git2rdata") gives a toy example.  4) vignette("efficiency", package = "git2rdata") provides some insight into the efficiency of file storage, git repository size and speed for writing and reading.
# License: GPL-3
# URL: https://ropensci.github.io/git2rdata/, https://github.com/ropensci/git2rdata/
# BugReports: https://github.com/ropensci/git2rdata/issues
# Depends: R (>= 3.5.0)
# Imports: assertthat, git2r (>= 0.23.0), methods, yaml
# Suggests: ggplot2, knitr, microbenchmark, rmarkdown, spelling, testthat
# VignetteBuilder: knitr
# Encoding: UTF-8
# Language: eng
# RoxygenNote: 7.1.2
# Collate: 'clean_data_path.R' 'datahash.R' 'git2rdata_package.R' 'write_vc.R' 'is_git2rdata.R' 'is_git2rmeta.R' 'list_data.R' 'meta.R' 'prune.R' 'read_vc.R' 'recent_commit.R' 'reexport.R' 'relabel.R' 'rename_variable.R' 'upgrade_data.R' 'utils.R' 'verify_vc.R'
# NeedsCompilation: no
# Packaged: 2022-03-17 09:17:23 UTC; thierry
# Author: Thierry Onkelinx [aut, cre] (<https://orcid.org/0000-0001-8804-4216>), Floris Vanderhaeghe [ctb] (<https://orcid.org/0000-0002-6378-6229>), Peter Desmet [ctb] (<https://orcid.org/0000-0002-8442-8025>), Els Lommelen [ctb] (<https://orcid.org/0000-0002-3481-5684>), Research Institute for Nature and Forest [cph, fnd]
# Maintainer: Thierry Onkelinx <thierry.onkelinx@inbo.be>
# Repository: CRAN
# Date/Publication: 2022-03-17 11:40:08 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
