{% set version = '0.3.0' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-nanoarrow
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/nanoarrow_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/nanoarrow/nanoarrow_{{ version }}.tar.gz
  sha256: 5bce4e83decc412e22b8447fc152263d39c5b767412b2355d3cda577214e981d

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: arrow (>= 9.0.0), bit64, blob, hms, rlang, testthat (>= 3.0.0), tibble, vctrs, withr
requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}sed               # [win]
    - {{ posix }}grep              # [win]
    - {{ posix }}autoconf
    - {{ posix }}automake          # [not win]
    - {{ posix }}automake-wrapper  # [win]
    - {{ posix }}pkg-config
    - {{ posix }}make
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]

  host:
    - r-base

  run:
    - r-base
    - {{native}}gcc-libs         # [win]

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('nanoarrow')"           # [not win]
    - "\"%R%\" -e \"library('nanoarrow')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/apache/arrow-nanoarrow
  license: Apache License (>= 2)
  summary: Provides an 'R' interface to the 'nanoarrow' 'C' library and the 'Apache Arrow' application
    binary interface. Functions to import and export 'ArrowArray', 'ArrowSchema', and
    'ArrowArrayStream' 'C' structures to and from 'R' objects are provided alongside
    helpers to facilitate zero-copy data transfer among 'R' bindings to libraries implementing
    the 'Arrow' 'C' data interface.
  license_family: APACHE

# The original CRAN metadata for this package was:

# Package: nanoarrow
# Title: Interface to the 'nanoarrow' 'C' Library
# Version: 0.3.0
# Authors@R: c( person(given = "Dewey", family = "Dunnington", role = c("aut", "cre"), email = "dewey@dunnington.ca", comment = c(ORCID = "0000-0002-9415-4582")), person("Apache Arrow", email = "dev@arrow.apache.org", role = c("aut", "cph")), person("Apache Software Foundation", email = "dev@arrow.apache.org", role = c("cph")) )
# Description: Provides an 'R' interface to the 'nanoarrow' 'C' library and the 'Apache Arrow' application binary interface. Functions to import and export 'ArrowArray', 'ArrowSchema', and 'ArrowArrayStream' 'C' structures to and from 'R' objects are provided alongside helpers to facilitate zero-copy data transfer among 'R' bindings to libraries implementing the 'Arrow' 'C' data interface.
# License: Apache License (>= 2)
# Encoding: UTF-8
# RoxygenNote: 7.2.3
# URL: https://github.com/apache/arrow-nanoarrow
# BugReports: https://github.com/apache/arrow-nanoarrow/issues
# Suggests: arrow (>= 9.0.0), bit64, blob, hms, rlang, testthat (>= 3.0.0), tibble, vctrs, withr
# Config/testthat/edition: 3
# Config/build/bootstrap: TRUE
# NeedsCompilation: yes
# Packaged: 2023-09-29 16:52:53 UTC; dewey
# Author: Dewey Dunnington [aut, cre] (<https://orcid.org/0000-0002-9415-4582>), Apache Arrow [aut, cph], Apache Software Foundation [cph]
# Maintainer: Dewey Dunnington <dewey@dunnington.ca>
# Repository: CRAN
# Date/Publication: 2023-09-29 17:20:02 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
