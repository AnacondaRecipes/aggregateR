{% set version = '1.0.3' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-esdesign
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/esDesign_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/esDesign/esDesign_{{ version }}.tar.gz
  sha256: 82a6d92e59dee683b35bb739c9e2eba490092c402fb5a519ebf5268d1a20df52

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: knitr, rmarkdown
requirements:
  build:
    - {{ posix }}zip               # [win]

  host:
    - r-base

  run:
    - r-base

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('esDesign')"           # [not win]
    - "\"%R%\" -e \"library('esDesign')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=esDesign
  license: GPL-2
  summary: 'Software of ''esDesign'' is developed to implement the adaptive enrichment designs
    with sample size re-estimation presented in Lin et al. (2021) <doi: 10.1016/j.cct.2020.106216>.
    In details, three-proposed trial designs are provided, including the AED1-SSR (or
    ES1-SSR), AED2-SSR (or ES2-SSR) and AED3-SSR (or ES3-SSR). In addition, this package
    also contains several widely used adaptive designs, such as the Marker Sequential
    Test (MaST) design proposed Freidlin et al. (2014) <doi:10.1177/1740774513503739>,
    the adaptive enrichment designs without early stopping (AED or ES), the sample size
    re-estimation procedure (SSR) based on the conditional power proposed by Proschan
    and Hunsberger (1995), and some useful functions. In details, we can calculate the
    futility and/or efficacy stopping boundaries, the sample size required, calibrate
    the value of the threshold of the difference between subgroup-specific test statistics,
    conduct the simulation studies in AED, SSR, AED1-SSR, AED2-SSR and AED3-SSR.'
  license_family: GPL2
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: esDesign
# Type: Package
# Title: Adaptive Enrichment Designs with Sample Size Re-Estimation
# Version: 1.0.3
# Date: 2021-07-13
# Author: Zhao Yang, Ruitao Lin, Guosheng Yin and Ying Yuan
# Maintainer: Zhao Yang <yangz98@connect.hku.hk>
# Description: Software of 'esDesign' is developed to implement the adaptive enrichment designs with sample size re-estimation presented in Lin et al. (2021) <doi: 10.1016/j.cct.2020.106216>. In details, three-proposed trial designs are provided, including the AED1-SSR (or ES1-SSR), AED2-SSR (or ES2-SSR) and AED3-SSR (or ES3-SSR). In addition, this package also contains several widely used adaptive designs, such as the Marker Sequential Test (MaST) design proposed Freidlin et al. (2014) <doi:10.1177/1740774513503739>, the adaptive enrichment designs without early stopping (AED or ES), the sample size re-estimation procedure (SSR) based on the conditional power proposed by Proschan and Hunsberger (1995), and some useful functions. In details, we can calculate the futility and/or efficacy stopping boundaries, the sample size required, calibrate the value of the threshold of the difference between subgroup-specific test statistics, conduct the simulation studies in AED, SSR, AED1-SSR, AED2-SSR and AED3-SSR.
# Depends: R (>= 3.2.0)
# Imports: stats
# License: GPL-2
# Encoding: UTF-8
# LazyData: false
# RoxygenNote: 7.1.1
# Suggests: knitr, rmarkdown
# NeedsCompilation: no
# Packaged: 2021-07-13 05:38:25 UTC; Yang Zhao
# Repository: CRAN
# Date/Publication: 2021-07-13 05:50:02 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
