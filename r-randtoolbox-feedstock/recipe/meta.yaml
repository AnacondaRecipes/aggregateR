{% set version = '2.0.0' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-randtoolbox
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/randtoolbox_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/randtoolbox/randtoolbox_{{ version }}.tar.gz
  sha256: c9c1b7842570c7c10a57e3237615672c7c2cb14a8dceaa2da8db30495f14bd00

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}sed               # [win]
    - {{ posix }}grep              # [win]
    - {{ posix }}autoconf
    - {{ posix }}automake          # [not win]
    - {{ posix }}automake-wrapper  # [win]
    - {{ posix }}pkg-config
    - {{ posix }}make
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-rngwell >=0.10_1

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-rngwell >=0.10_1

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('randtoolbox')"           # [not win]
    - "\"%R%\" -e \"library('randtoolbox')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=randtoolbox
  license: BSD_3_clause
  summary: Provides (1) pseudo random generators - general linear congruential generators, multiple
    recursive generators and generalized feedback shift register (SF-Mersenne Twister
    algorithm and WELL generators); (2) quasi random generators - the Torus algorithm,
    the Sobol sequence, the Halton sequence (including the Van der Corput sequence)
    and (3) some generator tests - the gap test, the serial test, the poker test. See
    e.g. Gentle (2003) <doi:10.1007/b97336>. The package can be provided without the
    rngWELL dependency on demand. Take a look at the Distribution task view of types
    and tests of random number generators. Package in Memoriam of Diethelm and Barbara
    Wuertz.
  license_family: BSD
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/BSD_3_clause'
    - LICENSE

# The original CRAN metadata for this package was:

# Package: randtoolbox
# Type: Package
# Title: Toolbox for Pseudo and Quasi Random Number Generation and Random Generator Tests
# Version: 2.0.0
# Author: R port by Yohan Chalabi, Christophe Dutang, Petr Savicky and Diethelm Wuertz with some underlying C codes of (i) the SFMT algorithm from M. Matsumoto and M. Saito, (ii) the Knuth-TAOCP RNG from D. Knuth.
# Maintainer: Christophe Dutang <dutangc@gmail.com>
# Description: Provides (1) pseudo random generators - general linear congruential generators, multiple recursive generators and generalized feedback shift register (SF-Mersenne Twister algorithm and WELL generators); (2) quasi random generators - the Torus algorithm, the Sobol sequence, the Halton sequence (including the Van der Corput sequence) and (3) some generator tests - the gap test, the serial test, the poker test. See e.g. Gentle (2003) <doi:10.1007/b97336>. The package can be provided without the rngWELL dependency on demand. Take a look at the Distribution task view of types and tests of random number generators. Package in Memoriam of Diethelm and Barbara Wuertz.
# Depends: rngWELL (>= 0.10-1)
# License: BSD_3_clause + file LICENSE
# NeedsCompilation: yes
# Packaged: 2022-05-20 19:35:28 UTC; dutang
# Repository: CRAN
# Date/Publication: 2022-05-23 23:30:02 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
