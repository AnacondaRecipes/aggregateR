{% set version = '1.0' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-jvnvar
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/jvnVaR_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/jvnVaR/jvnVaR_{{ version }}.tar.gz
  sha256: 9179a217edde9194b17969cbd9625bbaa3e5fc9d3b6d2f72b13d53cc0d6b007e

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{ posix }}zip               # [win]

  host:
    - r-base

  run:
    - r-base

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('jvnVaR')"           # [not win]
    - "\"%R%\" -e \"library('jvnVaR')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=jvnVaR
  license: GPL-3
  summary: 'Many method to compute, predict and back-test VaR. For more detail, see the report:
    Value at Risk <researchgate.net>.'
  license_family: GPL3
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-3'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: jvnVaR
# Type: Package
# Title: Value at Risk
# Version: 1.0
# Date: 2015-11-17
# Author: Hung Vu
# Maintainer: Hung Vu <viet-hung.vu@jvn.edu.vn>
# Description: Many method to compute, predict and back-test VaR. For more detail, see the report: Value at Risk <researchgate.net>.
# License: GPL-3
# Depends: R(>= 2.10.0), stats, utils
# Repository: CRAN
# Packaged: 2015-11-18 11:37:09 UTC; Vu
# NeedsCompilation: no
# Date/Publication: 2015-11-18 15:48:49

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
