{% set version = '0.2.0' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-paws.common
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/paws.common_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/paws.common/paws.common_{{ version }}.tar.gz
  sha256: c3376422aa0f8d4cd69847c4439f06d13bde0697e6005741fd2b3c0976b3ec14

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: covr, testthat
requirements:
  build:
    - {{posix}}zip               # [win]

  host:
    - r-base
    - r-base64enc
    - r-digest
    - r-httr
    - r-ini
    - r-jsonlite
    - r-xml2

  run:
    - r-base
    - r-base64enc
    - r-digest
    - r-httr
    - r-ini
    - r-jsonlite
    - r-xml2

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('paws.common')"           # [not win]
    - "\"%R%\" -e \"library('paws.common')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=paws.common
  license: Apache License (>= 2.0)
  summary: Functions for making low-level API requests to Amazon Web Services <https://aws.amazon.com>.
    The functions handle building, signing, and sending requests, and receiving responses.
    They are designed to help build  higher-level interfaces to individual services,
    such as Simple Storage Service (S3).
  license_family: APACHE

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: paws.common
# Type: Package
# Title: Paws Low-Level Amazon Web Services API
# Version: 0.2.0
# Authors@R: c( person("David", "Kretch", email = "david.kretch@gmail.com", role = c("aut", "cre")), person("Adam", "Banker", email = "adam.banker39@gmail.com", role = "aut"), person("Amazon.com, Inc.", role = "cph") )
# Description: Functions for making low-level API requests to Amazon Web Services <https://aws.amazon.com>. The functions handle building, signing, and sending requests, and receiving responses. They are designed to help build  higher-level interfaces to individual services, such as Simple Storage Service (S3).
# License: Apache License (>= 2.0)
# Encoding: UTF-8
# LazyData: true
# Imports: base64enc, digest, httr, ini, jsonlite, methods, utils, xml2
# Suggests: covr, testthat
# SystemRequirements: pandoc (>= 1.12.3) - http://pandoc.org
# RoxygenNote: 6.1.1
# Collate: 'struct.R' 'handlers.R' 'url.R' 'net.R' 'credential_providers.R' 'credentials.R' 'client.R' 'config.R' 'convert.R' 'service.R' 'custom_dynamodb.R' 'custom_s3.R' 'dateutil.R' 'error.R' 'handlers_core.R' 'handlers_ec2query.R' 'handlers_jsonrpc.R' 'handlers_query.R' 'handlers_rest.R' 'handlers_restjson.R' 'handlers_restxml.R' 'idempotency.R' 'jsonutil.R' 'populate.R' 'populateutil.R' 'tags.R' 'queryutil.R' 'request.R' 'signer_v4.R' 'signer_s3.R' 'signer_s3v4.R' 'signer_v2.R' 'time.R' 'util.R' 'xmlutil.R'
# NeedsCompilation: no
# Packaged: 2019-08-20 00:05:37 UTC; david.kretch
# Author: David Kretch [aut, cre], Adam Banker [aut], Amazon.com, Inc. [cph]
# Maintainer: David Kretch <david.kretch@gmail.com>
# Repository: CRAN
# Date/Publication: 2019-08-20 05:50:03 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
