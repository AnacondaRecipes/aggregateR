{% set version = '0.8.2' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-divdyn
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/divDyn_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/divDyn/divDyn_{{ version }}.tar.gz
  sha256: 8e11d04c52823f954572c5aaaa2ee17a2eb6c660208376faf4a31909603c13e7

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: knitr, rmarkdown, vegan, icosa
requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}make
    - {{ posix }}sed               # [win]
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-rcpp

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-rcpp

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('divDyn')"           # [not win]
    - "\"%R%\" -e \"library('divDyn')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=divDyn
  license: CC BY 4.0
  summary: 'Functions to describe sampling and diversity dynamics of fossil occurrence datasets
    (e.g. from the Paleobiology Database). The package includes methods to calculate
    range- and occurrence-based metrics of taxonomic richness, extinction and origination
    rates, along with traditional sampling measures. A powerful subsampling tool is
    also included that implements frequently used sampling standardization methods in
    a multiple bin-framework. The plotting of time series and the occurrence data can
    be simplified by the functions incorporated in the package, as well as other calculations,
    such as environmental affinities and extinction selectivity testing. Details can
    be found in: Kocsis, A.T.; Reddin, C.J.; Alroy, J. and Kiessling, W. (2019) <doi:10.1101/423780>.'
  license_family: CC

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: divDyn
# Type: Package
# Title: Diversity Dynamics using Fossil Sampling Data
# Version: 0.8.2
# Author: Adam T. Kocsis, John Alroy, Carl J. Reddin, Wolfgang Kiessling
# Maintainer: Adam T. Kocsis <adam.t.kocsis@gmail.com>
# Description: Functions to describe sampling and diversity dynamics of fossil occurrence datasets (e.g. from the Paleobiology Database). The package includes methods to calculate range- and occurrence-based metrics of taxonomic richness, extinction and origination rates, along with traditional sampling measures. A powerful subsampling tool is also included that implements frequently used sampling standardization methods in a multiple bin-framework. The plotting of time series and the occurrence data can be simplified by the functions incorporated in the package, as well as other calculations, such as environmental affinities and extinction selectivity testing. Details can be found in: Kocsis, A.T.; Reddin, C.J.; Alroy, J. and Kiessling, W. (2019) <doi:10.1101/423780>.
# License: CC BY 4.0
# Date: 2022-09-05
# BugReports: https://github.com/divDyn/divDyn/issues
# Encoding: UTF-8
# LazyData: false
# Depends: R (>= 3.5.0)
# Imports: Rcpp, stats, graphics, grDevices, methods
# NeedsCompilation: yes
# RoxygenNote: 7.2.1
# LinkingTo: Rcpp
# VignetteBuilder: knitr
# Suggests: knitr, rmarkdown, vegan, icosa
# Packaged: 2022-09-05 14:22:34 UTC; root
# Repository: CRAN
# Date/Publication: 2022-09-05 14:50:06 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
