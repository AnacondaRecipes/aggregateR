{% set version = '0.1.3' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-piggyback
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/piggyback_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/piggyback/piggyback_{{ version }}.tar.gz
  sha256: 6fccae21a97653f6a1d90d97c4f089bf403126a808f4b4023f4b0c6a496e0b07

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: spelling, readr, covr, testthat, gert, datasets, knitr, rmarkdown, usethis, magrittr
requirements:
  build:
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-cli
    - r-fs
    - r-gh
    - r-glue
    - r-httr
    - r-jsonlite
    - r-lubridate
    - r-memoise

  run:
    - r-base
    - r-cli
    - r-fs
    - r-gh
    - r-glue
    - r-httr
    - r-jsonlite
    - r-lubridate
    - r-memoise

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('piggyback')"           # [not win]
    - "\"%R%\" -e \"library('piggyback')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/ropensci/piggyback
  license: GPL-3
  summary: Because larger (> 50 MB) data files cannot easily be committed to git, a different
    approach is required to manage data associated with an analysis in a GitHub repository.  This
    package provides a simple work-around by allowing larger (up to 2 GB) data files
    to piggyback on a repository as assets attached to individual GitHub releases.  These
    files are not handled by git in any way, but instead are uploaded, downloaded, or
    edited directly by calls through the GitHub API. These data files can be versioned
    manually by creating different releases.  This approach works equally well with
    public or private repositories.  Data can be uploaded and downloaded programmatically
    from scripts. No authentication is required to download data from public repositories.
  license_family: GPL3
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-3'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: piggyback
# Version: 0.1.3
# Title: Managing Larger Data on a GitHub Repository
# Description: Because larger (> 50 MB) data files cannot easily be committed to git, a different approach is required to manage data associated with an analysis in a GitHub repository.  This package provides a simple work-around by allowing larger (up to 2 GB) data files to piggyback on a repository as assets attached to individual GitHub releases.  These files are not handled by git in any way, but instead are uploaded, downloaded, or edited directly by calls through the GitHub API. These data files can be versioned manually by creating different releases.  This approach works equally well with public or private repositories.  Data can be uploaded and downloaded programmatically from scripts. No authentication is required to download data from public repositories.
# Authors@R: c(person("Carl", "Boettiger", email = "cboettig@gmail.com", role = c("aut", "cre", "cph"), comment = c(ORCID = "0000-0002-1642-628X")), person("Mark", "Padgham", role = c("ctb"), comment = c(ORCID = "0000-0003-2172-5265")), person(c('Jeffrey', 'O'), 'Hanson', role = c("ctb"), comment = c(ORCID = "0000-0002-4716-6134")), person("Kevin", 'Kuo', role = c("ctb"), comment = c(ORCID = "0000-0001-7803-7901")), person("Tan", "Ho", role = c("ctb"), comment = c(ORCID = "0000-0001-8388-5155")))
# URL: https://github.com/ropensci/piggyback
# BugReports: https://github.com/ropensci/piggyback/issues
# License: GPL-3
# Encoding: UTF-8
# ByteCompile: true
# Imports: cli, glue, gh, httr, jsonlite, fs, lubridate, memoise
# Suggests: spelling, readr, covr, testthat, gert, datasets, knitr, rmarkdown, usethis, magrittr
# VignetteBuilder: knitr
# RoxygenNote: 7.1.2
# Language: en-US
# NeedsCompilation: no
# Packaged: 2022-05-19 18:20:53 UTC; cboettig
# Author: Carl Boettiger [aut, cre, cph] (<https://orcid.org/0000-0002-1642-628X>), Mark Padgham [ctb] (<https://orcid.org/0000-0003-2172-5265>), Jeffrey O Hanson [ctb] (<https://orcid.org/0000-0002-4716-6134>), Kevin Kuo [ctb] (<https://orcid.org/0000-0001-7803-7901>), Tan Ho [ctb] (<https://orcid.org/0000-0001-8388-5155>)
# Maintainer: Carl Boettiger <cboettig@gmail.com>
# Repository: CRAN
# Date/Publication: 2022-05-19 18:50:03 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
