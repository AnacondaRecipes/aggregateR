{% set version = '1.2-17' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-lazy
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/lazy_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/lazy/lazy_{{ version }}.tar.gz
  sha256: 27bf1216ac6220712fe7e86c0a288b7d7118f9088989f67e0a86b3d0f99c3370

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}make
    - {{ posix }}sed               # [win]
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]

  host:
    - r-base

  run:
    - r-base
    - {{native}}gcc-libs         # [win]

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('lazy')"           # [not win]
    - "\"%R%\" -e \"library('lazy')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=lazy
  license: GPL-2
  summary: By combining constant, linear, and quadratic local models, lazy estimates the value
    of an unknown multivariate function on the basis of a set of possibly noisy samples
    of the function itself.  This implementation of lazy learning automatically adjusts
    the bandwidth on a query-by-query basis through a leave-one-out cross-validation.
  license_family: GPL2
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: lazy
# Version: 1.2-17
# Date: 2022-04-05
# Title: Lazy Learning for Local Regression
# Author: Mauro Birattari <mauro.birattari@ulb.be> and Gianluca Bontempi <gianluca.bontempi@ulb.be>
# Maintainer: Theo Verhelst <theo.verhelst@ulb.be>
# Description: By combining constant, linear, and quadratic local models, lazy estimates the value of an unknown multivariate function on the basis of a set of possibly noisy samples of the function itself.  This implementation of lazy learning automatically adjusts the bandwidth on a query-by-query basis through a leave-one-out cross-validation.
# License: GPL (>= 2)
# Repository: CRAN
# Packaged: 2022-04-05 14:57:09 UTC; tverhels
# NeedsCompilation: yes
# Date/Publication: 2022-04-06 10:12:30 UTC
# RoxygenNote: 6.0.1

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
