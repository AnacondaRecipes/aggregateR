{% set version = '0.2.0' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-npp
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/NPP_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/NPP/NPP_{{ version }}.tar.gz
  sha256: de248adb4367bc63496a38e3cd928d4d4f3dc1afadda199ab65a0cfdd23aa67e

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{posix}}zip               # [win]

  host:
    - r-base

  run:
    - r-base

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('NPP')"           # [not win]
    - "\"%R%\" -e \"library('NPP')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=NPP
  license: GPL-2
  summary: 'Posterior sampling in several commonly used distributions using normalized power
    prior as described in  Duan, Ye and Smith (2006) <doi:10.1002/env.752> and  Ibrahim
    et.al. (2015) <doi:10.1002/sim.6728>.  Sampling of the power parameter is achieved
    via  either independence Metropolis-Hastings or random walk Metropolis-Hastings  based
    on transformation. '

  license_family: GPL2
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: NPP
# Type: Package
# Title: Normalized Power Prior Bayesian Analysis
# Version: 0.2.0
# Author: Zifei Han, Tianyu Bai and Keying Ye
# Maintainer: Zifei Han <hanzifei1@gmail.com>
# Description: Posterior sampling in several commonly used distributions using normalized power prior as described in  Duan, Ye and Smith (2006) <doi:10.1002/env.752> and  Ibrahim et.al. (2015) <doi:10.1002/sim.6728>.  Sampling of the power parameter is achieved via  either independence Metropolis-Hastings or random walk Metropolis-Hastings  based on transformation.
# License: GPL (>= 2)
# LazyData: true
# Depends: R (>= 3.5.0)
# Encoding: UTF-8
# NeedsCompilation: no
# Packaged: 2019-08-15 02:52:41 UTC; zifeihan
# Repository: CRAN
# Date/Publication: 2019-08-21 08:00:02 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
