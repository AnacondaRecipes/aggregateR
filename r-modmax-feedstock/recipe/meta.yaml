{% set version = '1.1' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-modmax
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/modMax_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/modMax/modMax_{{ version }}.tar.gz
  sha256: 50a8fd3a9392886ca90944a83b12e61c8b244fa7f382511c567f9faf8630a4d7

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-gtools
    - r-igraph

  run:
    - r-base
    - r-gtools
    - r-igraph

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('modMax')"           # [not win]
    - "\"%R%\" -e \"library('modMax')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=modMax
  license: GPL-2
  summary: The algorithms implemented here are used to detect the community structure of a network.
    These algorithms follow different approaches, but are all based on the concept of
    modularity maximization.
  license_family: GPL2
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: modMax
# Type: Package
# Title: Community Structure Detection via Modularity Maximization
# Version: 1.1
# Date: 2015-07-24
# Author: Maria Schelling, Cang Hui
# Maintainer: Maria Schelling <schelling.rmaintainer@vodafone.de>
# Depends: gtools, igraph
# Description: The algorithms implemented here are used to detect the community structure of a network. These algorithms follow different approaches, but are all based on the concept of modularity maximization.
# License: GPL-2
# NeedsCompilation: no
# Packaged: 2015-07-24 12:53:21 UTC; xxx
# Repository: CRAN
# Date/Publication: 2015-07-24 18:21:32

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
