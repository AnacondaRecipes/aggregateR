{% set version = '1.0.7' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-gaselect
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/gaselect_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/gaselect/gaselect_{{ version }}.tar.gz
  sha256: 9f9bc6bd7dbeb995bee3c62c3267a9600e6eb20e3aa8b9a7c6577b8ff45e3b2e

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: chemometrics
requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{posix}}filesystem        # [win]
    - {{posix}}sed               # [win]
    - {{posix}}grep              # [win]
    - {{posix}}autoconf
    - {{posix}}automake          # [not win]
    - {{posix}}automake-wrapper  # [win]
    - {{posix}}pkg-config
    - {{posix}}make
    - {{posix}}coreutils         # [win]
    - {{posix}}zip               # [win]

  host:
    - r-base
    - r-rcpp >=0.10.5
    - r-rcpparmadillo >=0.4.000

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-rcpp >=0.10.5
    - r-rcpparmadillo >=0.4.000

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('gaselect')"           # [not win]
    - "\"%R%\" -e \"library('gaselect')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/dakep/gaselect
  license: GPL-2
  summary: Provides a genetic algorithm for finding variable subsets in high dimensional data
    with high prediction performance. The genetic algorithm can use ordinary least squares
    (OLS) regression models or partial least squares (PLS) regression models to evaluate
    the prediction power of variable subsets. By supporting different cross-validation
    schemes, the user can fine-tune the tradeoff between speed and quality of the solution.
  license_family: GPL2
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: gaselect
# Type: Package
# Title: Genetic Algorithm (GA) for Variable Selection from High-Dimensional Data
# Version: 1.0.7
# Date: 2019-03-13
# Author: David Kepplinger
# Maintainer: David Kepplinger <david.kepplinger@gmail.com>
# Description: Provides a genetic algorithm for finding variable subsets in high dimensional data with high prediction performance. The genetic algorithm can use ordinary least squares (OLS) regression models or partial least squares (PLS) regression models to evaluate the prediction power of variable subsets. By supporting different cross-validation schemes, the user can fine-tune the tradeoff between speed and quality of the solution.
# URL: https://github.com/dakep/gaselect
# BugReports: https://github.com/dakep/gaselect/issues
# License: GPL (>= 2)
# NeedsCompilation: yes
# Encoding: UTF-8
# Biarch: true
# SystemRequirements: C++11
# Depends: R (>= 3.0.2), methods (>= 2.10.0)
# Imports: Rcpp (>= 0.10.5)
# LinkingTo: Rcpp (>= 0.10.5), RcppArmadillo (>= 0.4.000)
# Collate: 'Evaluator.R' 'GenAlgControl.R' 'formatSegmentation.R' 'evaluate.R' 'fitness.R' 'genAlg.R' 'getEvalFun.R' 'subsets.R' 'toCControlList.R' 'validData.R'
# Suggests: chemometrics
# RoxygenNote: 6.1.1
# Packaged: 2019-03-13 18:47:40 UTC; david
# Repository: CRAN
# Date/Publication: 2019-03-13 19:10:02 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
