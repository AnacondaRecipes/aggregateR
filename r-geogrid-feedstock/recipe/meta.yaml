{% set version = '0.1.2' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-geogrid
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/geogrid_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/geogrid/geogrid_{{ version }}.tar.gz
  sha256: 157dd40be2ab06fc867885ba55eacf003973bec8e5f39ab50f0770fb54d9184b

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: testthat, lintr, covr
requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}make
    - {{ posix }}sed               # [win]
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-rcpp
    - r-rcpparmadillo
    - r-sf
    - r-sp

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-rcpp
    - r-rcpparmadillo
    - r-sf
    - r-sp

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('geogrid')"           # [not win]
    - "\"%R%\" -e \"library('geogrid')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/jbaileyh/geogrid
  license: MIT
  summary: Turn irregular polygons (such as geographical regions) into regular or hexagonal grids.
    This package enables the generation of regular (square) and hexagonal grids through
    the package 'sp' and then assigns the content of the existing polygons to the new
    grid using the Hungarian algorithm, Kuhn (1955) (<doi:10.1007/978-3-540-68279-0_2>).
    This prevents the need for manual generation of hexagonal grids or regular grids
    that are supposed to reflect existing geography.
  license_family: MIT
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/MIT'
    - LICENSE

# The original CRAN metadata for this package was:

# Package: geogrid
# Title: Turn Geospatial Polygons into Regular or Hexagonal Grids
# Version: 0.1.2
# Authors@R: c( person("Joseph", "Bailey", email = "jbailey@futurecities.catapult.org.uk", role = c("aut", "cph")), person("Ryan", "Hafen", email = "rhafen@gmail.com", role = c("ctb", "cre"), comment = c(ORCID = "0000-0002-5516-8367")), person("Jakub", "Nowosad", email = "nowosad.jakub@gmail.com", role = "ctb", comment = c(ORCID = "0000-0002-1057-3721")), person("Lars Simon Zehnder", role = "ctb", comment = "RcppArmadillo implmentation of Munkres' Assignment Algorithm"))
# Description: Turn irregular polygons (such as geographical regions) into regular or hexagonal grids. This package enables the generation of regular (square) and hexagonal grids through the package 'sp' and then assigns the content of the existing polygons to the new grid using the Hungarian algorithm, Kuhn (1955) (<doi:10.1007/978-3-540-68279-0_2>). This prevents the need for manual generation of hexagonal grids or regular grids that are supposed to reflect existing geography.
# Imports: methods, sp, sf, Rcpp
# License: MIT + file LICENSE
# Encoding: UTF-8
# LinkingTo: Rcpp, RcppArmadillo
# Suggests: testthat, lintr, covr
# RoxygenNote: 7.2.3
# URL: https://github.com/jbaileyh/geogrid
# BugReports: https://github.com/jbaileyh/geogrid/issues
# NeedsCompilation: yes
# Packaged: 2023-08-15 21:18:48 UTC; rhafen
# Author: Joseph Bailey [aut, cph], Ryan Hafen [ctb, cre] (<https://orcid.org/0000-0002-5516-8367>), Jakub Nowosad [ctb] (<https://orcid.org/0000-0002-1057-3721>), Lars Simon Zehnder [ctb] (RcppArmadillo implmentation of Munkres' Assignment Algorithm)
# Maintainer: Ryan Hafen <rhafen@gmail.com>
# Repository: CRAN
# Date/Publication: 2023-08-19 04:52:36 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
