{% set version = '1.2-20' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-emulator
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/emulator_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/emulator/emulator_{{ version }}.tar.gz
  sha256: 7cabf2cf74d879ad9dbaed8fdee54a5c94a8658a0645c021d160b2ef712ce287

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: knitr
requirements:
  build:
    - {{posix}}zip               # [win]

  host:
    - r-base
    - r-mvtnorm

  run:
    - r-base
    - r-mvtnorm

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('emulator')"           # [not win]
    - "\"%R%\" -e \"library('emulator')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/RobinHankin/emulator.git
  license: GPL-3
  summary: ' Allows one to estimate the output of a computer program, as a function of the input
    parameters, without actually running it. The computer program is assumed to be a
    Gaussian process, whose parameters are estimated using Bayesian techniques that
    give a PDF of expected program output.  This PDF is conditional on a training set
    of runs, each consisting of a point in parameter space and the model output at that
    point.  The emphasis is on complex codes that take weeks or months to run, and that
    have a large number of undetermined input parameters; many climate prediction models
    fall into this class.  The emulator essentially determines Bayesian posterior estimates
    of the PDF of the output of a model, conditioned on results from previous runs and
    a user-specified prior linear model.  A vignette is provided and the help pages
    include examples.'

  license_family: GPL3
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-3'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: emulator
# Type: Package
# Title: Bayesian Emulation of Computer Programs
# Version: 1.2-20
# Authors@R: person(given=c("Robin", "K. S."), family="Hankin", role = c("aut","cre"), email="hankin.robin@gmail.com", comment = c(ORCID = "0000-0001-5982-0415"))
# VignetteBuilder: knitr
# Depends: R (>= 3.0.1), mvtnorm
# Suggests: knitr
# Maintainer: Robin K. S. Hankin <hankin.robin@gmail.com>
# Description:  Allows one to estimate the output of a computer program, as a function of the input parameters, without actually running it. The computer program is assumed to be a Gaussian process, whose parameters are estimated using Bayesian techniques that give a PDF of expected program output.  This PDF is conditional on a training set of runs, each consisting of a point in parameter space and the model output at that point.  The emphasis is on complex codes that take weeks or months to run, and that have a large number of undetermined input parameters; many climate prediction models fall into this class.  The emulator essentially determines Bayesian posterior estimates of the PDF of the output of a model, conditioned on results from previous runs and a user-specified prior linear model.  A vignette is provided and the help pages include examples.
# License: GPL
# URL: https://github.com/RobinHankin/emulator.git
# BugReports: https://github.com/RobinHankin/emulator/issues
# NeedsCompilation: no
# Packaged: 2019-03-19 19:20:27 UTC; rhankin
# Author: Robin K. S. Hankin [aut, cre] (<https://orcid.org/0000-0001-5982-0415>)
# Repository: CRAN
# Date/Publication: 2019-03-19 20:30:14 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
