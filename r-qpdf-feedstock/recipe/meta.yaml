{% set version = '1.2.0' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-qpdf
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/qpdf_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/qpdf/qpdf_{{ version }}.tar.gz
  sha256: d03db36a2024e8db3792f96b5c694578a5ccd36b86c58a0cf82451d1d43f2da8

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: testthat
requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}sed               # [win]
    - {{ posix }}grep              # [win]
    - {{ posix }}autoconf
    - {{ posix }}automake          # [not win]
    - {{ posix }}automake-wrapper  # [win]
    - {{ posix }}pkg-config
    - {{ posix }}make
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-rcpp
    - r-askpass
    - r-curl

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-rcpp
    - r-askpass
    - r-curl

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('qpdf')"           # [not win]
    - "\"%R%\" -e \"library('qpdf')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://docs.ropensci.org/qpdf/ (website), https://github.com/ropensci/qpdf (devel),
    https://qpdf.sourceforge.io/ (upstream)
  license: Apache License 2.0
  summary: 'Content-preserving transformations transformations of PDF files such as split, combine,
    and compress. This package interfaces directly to the ''qpdf'' C++ API and does
    not require any command line utilities. Note that ''qpdf'' does not read actual
    content from PDF files: to extract text and data you need the ''pdftools'' package.'
  license_family: APACHE

extra:
  recipe-maintainers:
    - mingwandroid

# The original CRAN metadata for this package was:

# Package: qpdf
# Type: Package
# Title: Split, Combine and Compress PDF Files
# Version: 1.2.0
# Authors@R: c(person("Jeroen", "Ooms", role = c("aut", "cre"), email = "jeroen@berkeley.edu", comment = c(ORCID = "0000-0002-4035-0289")), person("Ben", "Raymond", role = "ctb"), person("Jay Berkenbilt", role = "cph", comment = "Author of libqpdf"))
# Description: Content-preserving transformations transformations of PDF files such as split, combine, and compress. This package interfaces directly to the 'qpdf' C++ API and does not require any command line utilities. Note that 'qpdf' does not read actual content from PDF files: to extract text and data you need the 'pdftools' package.
# License: Apache License 2.0
# URL: https://docs.ropensci.org/qpdf/ (website), https://github.com/ropensci/qpdf (devel), https://qpdf.sourceforge.io/ (upstream)
# BugReports: https://github.com/ropensci/qpdf/issues
# Encoding: UTF-8
# Imports: Rcpp, askpass, curl
# LinkingTo: Rcpp
# RoxygenNote: 7.1.2
# Suggests: testthat
# SystemRequirements: libjpeg
# NeedsCompilation: yes
# Packaged: 2022-05-29 08:30:33 UTC; jeroen
# Author: Jeroen Ooms [aut, cre] (<https://orcid.org/0000-0002-4035-0289>), Ben Raymond [ctb], Jay Berkenbilt [cph] (Author of libqpdf)
# Maintainer: Jeroen Ooms <jeroen@berkeley.edu>
# Repository: CRAN
# Date/Publication: 2022-05-29 09:30:02 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
