{% set version = '1.2.2' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-vcr
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/vcr_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/vcr/vcr_{{ version }}.tar.gz
  sha256: a489d9e64d5f833323bfa732af96ecf73adeaa67af4eb8451f5aa7f93825186f

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: roxygen2 (>= 7.2.1), jsonlite, testthat, knitr, rmarkdown, desc, crayon, cli, curl, withr
requirements:
  build:
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-r6
    - r-base64enc
    - r-crul >=0.8.4
    - r-httr
    - r-rprojroot
    - r-urltools
    - r-webmockr >=0.8.0
    - r-yaml

  run:
    - r-base
    - r-r6
    - r-base64enc
    - r-crul >=0.8.4
    - r-httr
    - r-rprojroot
    - r-urltools
    - r-webmockr >=0.8.0
    - r-yaml

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('vcr')"           # [not win]
    - "\"%R%\" -e \"library('vcr')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/ropensci/vcr/ (devel) https://books.ropensci.org/http-testing/
    (user manual)
  license: MIT
  summary: Record test suite 'HTTP' requests and replays them during future runs. A port of the
    Ruby gem of the same name (<https://github.com/vcr/vcr/>). Works by hooking into
    the 'webmockr' R package for matching 'HTTP' requests by various rules ('HTTP' method,
    'URL', query parameters, headers, body, etc.), and then caching real 'HTTP' responses
    on disk in 'cassettes'. Subsequent 'HTTP' requests matching any previous requests
    in the same 'cassette' use a cached 'HTTP' response.
  license_family: MIT
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/MIT'
    - LICENSE

# The original CRAN metadata for this package was:

# Package: vcr
# Title: Record 'HTTP' Calls to Disk
# Description: Record test suite 'HTTP' requests and replays them during future runs. A port of the Ruby gem of the same name (<https://github.com/vcr/vcr/>). Works by hooking into the 'webmockr' R package for matching 'HTTP' requests by various rules ('HTTP' method, 'URL', query parameters, headers, body, etc.), and then caching real 'HTTP' responses on disk in 'cassettes'. Subsequent 'HTTP' requests matching any previous requests in the same 'cassette' use a cached 'HTTP' response.
# Version: 1.2.2
# Authors@R: c(person("Scott", "Chamberlain", role = c("aut", "cre"), email = "sckott@protonmail.com", comment = c(ORCID="0000-0003-1444-9135")), person("Aaron", "Wolen", role = "aut", comment = c(ORCID="0000-0003-2542-2202")), person("Maelle", "Salmon", role = "aut", comment = c(ORCID="0000-0002-2815-0399")), person("Daniel", "Possenriede", role = "aut", comment = c(ORCID="0000-0002-6738-9845")), person("rOpenSci", role = "fnd", comment = "https://ropensci.org"))
# URL: https://github.com/ropensci/vcr/ (devel) https://books.ropensci.org/http-testing/ (user manual)
# BugReports: https://github.com/ropensci/vcr/issues
# License: MIT + file LICENSE
# Encoding: UTF-8
# Language: en-US
# LazyData: true
# VignetteBuilder: knitr
# Imports: crul (>= 0.8.4), httr, webmockr (>= 0.8.0), urltools, yaml, R6, base64enc, rprojroot
# Suggests: roxygen2 (>= 7.2.1), jsonlite, testthat, knitr, rmarkdown, desc, crayon, cli, curl, withr
# X-schema.org-applicationCategory: Web
# X-schema.org-keywords: http, https, API, web-services, curl, mock, mocking, http-mocking, testing, testing-tools, tdd
# X-schema.org-isPartOf: https://ropensci.org
# RoxygenNote: 7.2.3
# NeedsCompilation: no
# Packaged: 2023-06-25 04:08:59 UTC; sckott
# Author: Scott Chamberlain [aut, cre] (<https://orcid.org/0000-0003-1444-9135>), Aaron Wolen [aut] (<https://orcid.org/0000-0003-2542-2202>), Maelle Salmon [aut] (<https://orcid.org/0000-0002-2815-0399>), Daniel Possenriede [aut] (<https://orcid.org/0000-0002-6738-9845>), rOpenSci [fnd] (https://ropensci.org)
# Maintainer: Scott Chamberlain <sckott@protonmail.com>
# Repository: CRAN
# Date/Publication: 2023-06-25 12:30:02 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
