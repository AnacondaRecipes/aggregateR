{% set version = '2.1.1' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-loggit
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/loggit_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/loggit/loggit_{{ version }}.tar.gz
  sha256: 019bee9e83e9695a5707fe04d0d0e84d63653eecda3f80efa8b07fe5ac1379ba

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: knitr (>= 1.19), rmarkdown (>= 1.8), testthat (>= 2.0.0)
requirements:
  build:
    - {{ posix }}zip               # [win]

  host:
    - r-base

  run:
    - r-base

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('loggit')"           # [not win]
    - "\"%R%\" -e \"library('loggit')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/ryapric/loggit
  license: MIT
  summary: An effortless 'ndjson' (newline-delimited 'JSON') logger, with two primary log-writing
    interfaces. It provides a set of wrappings for base R's message(), warning(), and
    stop() functions that maintain identical functionality, but also log the handler
    message to an 'ndjson' log file. 'loggit' also exports its internal 'loggit()' function
    for powerful and configurable custom logging. No change in existing code is necessary
    to use this package, and should only require additions to fully leverage the power
    of the logging system. 'loggit' also provides a log reader for reading an 'ndjson'
    log file into a data frame, log rotation, and live echo of the 'ndjson' log messages
    to terminal 'stdout' for log capture by external systems (like containers). 'loggit'
    is ideal for Shiny apps, data pipelines, modeling work flows, and more. Please see
    the vignettes for detailed example use cases.
  license_family: MIT
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/MIT'
    - LICENSE

# The original CRAN metadata for this package was:

# Package: loggit
# Title: Modern Logging for the R Ecosystem
# Description: An effortless 'ndjson' (newline-delimited 'JSON') logger, with two primary log-writing interfaces. It provides a set of wrappings for base R's message(), warning(), and stop() functions that maintain identical functionality, but also log the handler message to an 'ndjson' log file. 'loggit' also exports its internal 'loggit()' function for powerful and configurable custom logging. No change in existing code is necessary to use this package, and should only require additions to fully leverage the power of the logging system. 'loggit' also provides a log reader for reading an 'ndjson' log file into a data frame, log rotation, and live echo of the 'ndjson' log messages to terminal 'stdout' for log capture by external systems (like containers). 'loggit' is ideal for Shiny apps, data pipelines, modeling work flows, and more. Please see the vignettes for detailed example use cases.
# Version: 2.1.1
# Date: 2021-02-27
# Authors@R: person(given = "Ryan", family = "Price", role = c("cre", "aut"), email = "ryapric@gmail.com")
# License: MIT + file LICENSE
# Depends: R (>= 3.4.0)
# Suggests: knitr (>= 1.19), rmarkdown (>= 1.8), testthat (>= 2.0.0)
# URL: https://github.com/ryapric/loggit
# BugReports: https://github.com/ryapric/loggit/issues
# RoxygenNote: 7.1.1
# Encoding: UTF-8
# VignetteBuilder: knitr
# NeedsCompilation: no
# Packaged: 2021-02-28 02:37:41 UTC; ryan
# Author: Ryan Price [cre, aut]
# Maintainer: Ryan Price <ryapric@gmail.com>
# Repository: CRAN
# Date/Publication: 2021-02-28 05:30:02 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
