{% set version = '0.1-10' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-multicool
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/multicool_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/multicool/multicool_{{ version }}.tar.gz
  sha256: 5bb0cb0d9eb64420c862877247a79bb0afadacfe23262ec8c3fa26e5e34d6ff9

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{posix}}filesystem        # [win]
    - {{posix}}make
    - {{posix}}sed               # [win]
    - {{posix}}coreutils         # [win]
    - {{posix}}zip               # [win]

  host:
    - r-base
    - r-rcpp >=0.11.2

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-rcpp >=0.11.2

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('multicool')"           # [not win]
    - "\"%R%\" -e \"library('multicool')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=multicool
  license: GPL-2
  summary: A set of tools to permute multisets without loops or hash tables and to generate integer
    partitions. The permutation functions are based on C code from Aaron Williams. Cool-lex
    order is similar to colexicographical order. The algorithm is described in Williams,
    A. (2009)  <DOI:10.1145/1496770.1496877> Loopless Generation of Multiset Permutations
    by Prefix Shifts. Symposium on Discrete Algorithms, New York, United States. The
    permutation code is distributed without restrictions. The code for stable and efficient
    computation of multinomial coefficients comes from Dave Barber. The code can be
    download from <http://tamivox.org/dave/multinomial/code.html> and is distributed
    without conditions. The package also generates the integer partitions of a positive,
    non-zero integer n. The C++ code for this is based on Python code from Jerome Kelleher
    which can be found here <http://jeromekelleher.net/tag/integer-partitions.html>.
    The C++ code and Python code are distributed without conditions.
  license_family: GPL2
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: multicool
# Type: Package
# Title: Permutations of Multisets in Cool-Lex Order
# Version: 0.1-10
# Date: 2016-11-25
# Author: James Curran, Aaron Williams, Jerome Kelleher, Dave Barber
# Maintainer: James Curran <j.curran@auckland.ac.nz>
# Description: A set of tools to permute multisets without loops or hash tables and to generate integer partitions. The permutation functions are based on C code from Aaron Williams. Cool-lex order is similar to colexicographical order. The algorithm is described in Williams, A. (2009)  <DOI:10.1145/1496770.1496877> Loopless Generation of Multiset Permutations by Prefix Shifts. Symposium on Discrete Algorithms, New York, United States. The permutation code is distributed without restrictions. The code for stable and efficient computation of multinomial coefficients comes from Dave Barber. The code can be download from <http://tamivox.org/dave/multinomial/code.html> and is distributed without conditions. The package also generates the integer partitions of a positive, non-zero integer n. The C++ code for this is based on Python code from Jerome Kelleher which can be found here <http://jeromekelleher.net/tag/integer-partitions.html>. The C++ code and Python code are distributed without conditions.
# License: GPL-2
# Depends: methods, Rcpp (>= 0.11.2)
# LinkingTo: Rcpp
# RcppModules: Multicool
# NeedsCompilation: yes
# Packaged: 2016-11-25 18:51:04 UTC; jcur002
# Repository: CRAN
# Date/Publication: 2016-11-25 23:05:03

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
