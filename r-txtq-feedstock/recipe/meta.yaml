{% set version = '0.2.4' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-txtq
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/txtq_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/txtq/txtq_{{ version }}.tar.gz
  sha256: 8586d96c60d173981f1bd9a0666e9c15ef274146bb33ac094b7c61c759be72bb

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: parallel, purrr, testthat (>= 2.1.0)
requirements:
  build:
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-r6
    - r-base64url
    - r-filelock >=1.0.2

  run:
    - r-base
    - r-r6
    - r-base64url
    - r-filelock >=1.0.2

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('txtq')"           # [not win]
    - "\"%R%\" -e \"library('txtq')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/wlandau/txtq
  license: MIT
  summary: This queue is a data structure that lets parallel processes send and receive messages,
    and it can help coordinate the work of complicated parallel tasks. Processes can
    push new messages to the queue, pop old messages, and obtain a log of all the messages
    ever pushed. File locking preserves the integrity of the data even when multiple
    processes access the queue simultaneously.
  license_family: MIT
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/MIT'
    - LICENSE

# The original CRAN metadata for this package was:

# Package: txtq
# Title: A Small Message Queue for Parallel Processes
# Description: This queue is a data structure that lets parallel processes send and receive messages, and it can help coordinate the work of complicated parallel tasks. Processes can push new messages to the queue, pop old messages, and obtain a log of all the messages ever pushed. File locking preserves the integrity of the data even when multiple processes access the queue simultaneously.
# Version: 0.2.4
# License: MIT + file LICENSE
# URL: https://github.com/wlandau/txtq
# BugReports: https://github.com/wlandau/txtq/issues
# Authors@R: c( person( family = "Landau", given = c("William", "Michael"), email = "will.landau@gmail.com", role = c("aut", "cre"), comment = c(ORCID = "0000-0003-1878-3253") ), person( given = c("Ian","E."), family = "Fellows", role = c("ctb"), email = "ian@fellstat.com" ), person( family = "Eli Lilly and Company", role = "cph" ))
# Imports: base64url, filelock (>= 1.0.2), R6
# Suggests: parallel, purrr, testthat (>= 2.1.0)
# Encoding: UTF-8
# Language: en-US
# RoxygenNote: 7.1.1
# NeedsCompilation: no
# Packaged: 2021-03-27 18:34:28 UTC; c240390
# Author: William Michael Landau [aut, cre] (<https://orcid.org/0000-0003-1878-3253>), Ian E. Fellows [ctb], Eli Lilly and Company [cph]
# Maintainer: William Michael Landau <will.landau@gmail.com>
# Repository: CRAN
# Date/Publication: 2021-03-27 19:00:02 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
