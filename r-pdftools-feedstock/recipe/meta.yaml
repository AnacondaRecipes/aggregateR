{% set version = '3.2.1' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-pdftools
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/pdftools_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/pdftools/pdftools_{{ version }}.tar.gz
  sha256: d1e18f7c9366e7613f61c0266c584412c8e448cfc1f71101b5c8d1dd6cbb37ad

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: png, webp, tesseract, testthat
requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}sed               # [win]
    - {{ posix }}grep              # [win]
    - {{ posix }}autoconf
    - {{ posix }}automake          # [not win]
    - {{ posix }}automake-wrapper  # [win]
    - {{ posix }}pkg-config
    - {{ posix }}make
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-rcpp >=0.12.12
    - r-qpdf

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-rcpp >=0.12.12
    - r-qpdf

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('pdftools')"           # [not win]
    - "\"%R%\" -e \"library('pdftools')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://docs.ropensci.org/pdftools/ (website) https://github.com/ropensci/pdftools#readme
    (devel) https://poppler.freedesktop.org (upstream)
  license: MIT
  summary: Utilities based on 'libpoppler' for extracting text, fonts, attachments and metadata
    from a PDF file. Also supports high quality rendering of PDF documents into PNG,
    JPEG, TIFF format, or into raw bitmap vectors for further processing in R.
  license_family: MIT
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/MIT'
    - LICENSE

extra:
  recipe-maintainers:
    - mingwandroid

# The original CRAN metadata for this package was:

# Package: pdftools
# Type: Package
# Title: Text Extraction, Rendering and Converting of PDF Documents
# Version: 3.2.1
# Authors@R: person("Jeroen", "Ooms", role = c("aut", "cre"), email = "jeroen@berkeley.edu", comment = c(ORCID = "0000-0002-4035-0289"))
# Description: Utilities based on 'libpoppler' for extracting text, fonts, attachments and metadata from a PDF file. Also supports high quality rendering of PDF documents into PNG, JPEG, TIFF format, or into raw bitmap vectors for further processing in R.
# License: MIT + file LICENSE
# URL: https://docs.ropensci.org/pdftools/ (website) https://github.com/ropensci/pdftools#readme (devel) https://poppler.freedesktop.org (upstream)
# BugReports: https://github.com/ropensci/pdftools/issues
# SystemRequirements: Poppler C++ API: libpoppler-cpp-dev (deb) or poppler-cpp-devel (rpm), and poppler-data (rpm/deb) package.
# Encoding: UTF-8
# Imports: Rcpp (>= 0.12.12), qpdf
# LinkingTo: Rcpp
# Suggests: png, webp, tesseract, testthat
# RoxygenNote: 7.1.2
# NeedsCompilation: yes
# Packaged: 2022-05-27 09:29:37 UTC; jeroen
# Author: Jeroen Ooms [aut, cre] (<https://orcid.org/0000-0002-4035-0289>)
# Maintainer: Jeroen Ooms <jeroen@berkeley.edu>
# Repository: CRAN
# Date/Publication: 2022-05-27 10:10:02 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
