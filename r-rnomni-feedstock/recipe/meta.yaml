{% set version = '0.7.1' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-rnomni
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/RNOmni_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/RNOmni/RNOmni_{{ version }}.tar.gz
  sha256: 93a9528e1ef283b214237f1a4625cd76303c6f426df7fa5b0389fbd48140ed53

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: cowplot, ggplot2, knitr, reshape2, rmarkdown
requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{posix}}filesystem        # [win]
    - {{posix}}make
    - {{posix}}sed               # [win]
    - {{posix}}coreutils         # [win]
    - {{posix}}zip               # [win]

  host:
    - r-base
    - r-rcpp
    - r-rcppeigen
    - r-abind
    - r-foreach
    - r-plyr

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-rcpp
    - r-rcppeigen
    - r-abind
    - r-foreach
    - r-plyr

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('RNOmni')"           # [not win]
    - "\"%R%\" -e \"library('RNOmni')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=RNOmni
  license: GPL-3
  summary: 'Genetic association tests that use the rank-based inverse normal transformation (INT).
    These tests are recommend for continuous traits with non-normally distributed residuals.
    INT-based tests robustly control the type I error in settings where standard linear
    regression does not. Moreover, INT-based tests dominate standard linear regression
    in terms of power. INT-based tests may be classified into two types: tests that
    directly transform the phenotype (D-INT) and tests that transform phenotypic residuals
    (I-INT). Our omnibus test (O-INT) adaptively combines D-INT and I-INT into a single
    robust and statistically powerful approach. '

  license_family: GPL3
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-3'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: RNOmni
# Title: Rank Normal Transformation Omnibus Test
# Version: 0.7.1
# Date: 2019-04-27
# Authors@R: person("Zachary","McCaw",email="zmccaw@g.harvard.edu",role=c("aut","cre"))
# Description: Genetic association tests that use the rank-based inverse normal transformation (INT). These tests are recommend for continuous traits with non-normally distributed residuals. INT-based tests robustly control the type I error in settings where standard linear regression does not. Moreover, INT-based tests dominate standard linear regression in terms of power. INT-based tests may be classified into two types: tests that directly transform the phenotype (D-INT) and tests that transform phenotypic residuals (I-INT). Our omnibus test (O-INT) adaptively combines D-INT and I-INT into a single robust and statistically powerful approach.
# Depends: R (>= 3.2.2)
# Imports: abind, foreach, plyr, Rcpp
# License: GPL-3
# Encoding: UTF-8
# LazyData: true
# RoxygenNote: 6.1.0
# Suggests: cowplot, ggplot2, knitr, reshape2, rmarkdown
# VignetteBuilder: knitr
# LinkingTo: Rcpp, RcppEigen
# NeedsCompilation: yes
# Packaged: 2019-04-27 21:41:29 UTC; zmccaw
# Author: Zachary McCaw [aut, cre]
# Maintainer: Zachary McCaw <zmccaw@g.harvard.edu>
# Repository: CRAN
# Date/Publication: 2019-04-28 07:10:03 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
