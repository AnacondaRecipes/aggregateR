{% set version = '0.2.6' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-trelliscopejs
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/trelliscopejs_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/trelliscopejs/trelliscopejs_{{ version }}.tar.gz
  sha256: 08f343dd7d1e21a8a769d0af4311a2452a242b1e2d85142da10b7d7f4a9d219a

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: plotly, testthat, covr, gapminder, rmarkdown, shiny, housingData
requirements:
  build:
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-distributionutils
    - r-autocogs
    - r-base64enc
    - r-digest
    - r-dplyr
    - r-ggplot2 >=3.2.1
    - r-gtable
    - r-htmltools
    - r-htmlwidgets
    - r-jsonlite
    - r-knitr
    - r-progress
    - r-purrr
    - r-rlang
    - r-tidyr
    - r-webshot

  run:
    - r-base
    - r-distributionutils
    - r-autocogs
    - r-base64enc
    - r-digest
    - r-dplyr
    - r-ggplot2 >=3.2.1
    - r-gtable
    - r-htmltools
    - r-htmlwidgets
    - r-jsonlite
    - r-knitr
    - r-progress
    - r-purrr
    - r-rlang
    - r-tidyr
    - r-webshot

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('trelliscopejs')"           # [not win]
    - "\"%R%\" -e \"library('trelliscopejs')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/hafen/trelliscopejs
  license: BSD_3_clause
  summary: Trelliscope is a scalable, flexible, interactive approach to visualizing data (Hafen,
    2013 <doi:10.1109/LDAV.2013.6675164>). This package provides methods that make it
    easy to create a Trelliscope display specification for TrelliscopeJS. High-level
    functions are provided for creating displays from within 'tidyverse' or 'ggplot2'
    workflows. Low-level functions are also provided for creating new interfaces.
  license_family: BSD
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/BSD_3_clause'
    - LICENSE

# The original CRAN metadata for this package was:

# Package: trelliscopejs
# Title: Create Interactive Trelliscope Displays
# Version: 0.2.6
# Authors@R: c( person(given = "Ryan", family = "Hafen", role = c("aut", "cre"), email = "rhafen@gmail.com", comment = c(ORCID = "0000-0002-5516-8367")), person(given = "Barret", family = "Schloerke", email = "schloerke@gmail.com", role = "aut"))
# Description: Trelliscope is a scalable, flexible, interactive approach to visualizing data (Hafen, 2013 <doi:10.1109/LDAV.2013.6675164>). This package provides methods that make it easy to create a Trelliscope display specification for TrelliscopeJS. High-level functions are provided for creating displays from within 'tidyverse' or 'ggplot2' workflows. Low-level functions are also provided for creating new interfaces.
# Depends: R (>= 3.4.0)
# License: BSD_3_clause + file LICENSE
# Encoding: UTF-8
# LazyData: true
# Imports: dplyr, purrr, grid, htmltools, DistributionUtils, grDevices, gtable, digest, jsonlite, ggplot2 (>= 3.2.1), base64enc, htmlwidgets, graphics, progress, utils, knitr, webshot, autocogs, tidyr, rlang
# Suggests: plotly, testthat, covr, gapminder, rmarkdown, shiny, housingData
# RoxygenNote: 7.1.1
# URL: https://github.com/hafen/trelliscopejs
# BugReports: https://github.com/hafen/trelliscopejs/issues
# VignetteBuilder: knitr
# NeedsCompilation: no
# Packaged: 2021-02-01 07:40:10 UTC; hafen
# Author: Ryan Hafen [aut, cre] (<https://orcid.org/0000-0002-5516-8367>), Barret Schloerke [aut]
# Maintainer: Ryan Hafen <rhafen@gmail.com>
# Repository: CRAN
# Date/Publication: 2021-02-01 08:00:02 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
