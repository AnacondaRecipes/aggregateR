{% set version = '1.0.1' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-hmm
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/HMM_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/HMM/HMM_{{ version }}.tar.gz
  sha256: 472b18c5eb5f6302f34e2aa50b45a4257ac892df8facebff69f6626e1722650d

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{ posix }}zip               # [win]

  host:
    - r-base

  run:
    - r-base

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('HMM')"           # [not win]
    - "\"%R%\" -e \"library('HMM')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: www.linhi.de
  license: GPL-2
  summary: Easy to use library to setup, apply and make inference with discrete time and discrete
    space Hidden Markov Models.
  license_family: GPL2
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: HMM
# Type: Package
# Version: 1.0.1
# Title: Hidden Markov Models
# Date: 2022-03-20
# Maintainer: Lin Himmelmann <hmm@linhi.de>
# Author: Scientific Software - Dr. Lin Himmelmann
# URL: www.linhi.de
# Depends: R (>= 2.0.0)
# Description: Easy to use library to setup, apply and make inference with discrete time and discrete space Hidden Markov Models.
# License: GPL (>= 2)
# NeedsCompilation: no
# Packaged: 2022-03-23 09:08:47 UTC; lh
# Repository: CRAN
# Date/Publication: 2022-03-23 13:30:08 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
