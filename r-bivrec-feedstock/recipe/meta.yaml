{% set version = '1.0.0' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-bivrec
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/BivRec_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/BivRec/BivRec_{{ version }}.tar.gz
  sha256: efcbbf02cfd665430e2d55f509456007cf82714c3c1d57e9c1b278ab97292898

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{ compiler('fortran') }}        # [not win]
    - {{ compiler('m2w64_fortran') }}  # [win]
    - {{posix}}filesystem        # [win]
    - {{posix}}make
    - {{posix}}sed               # [win]
    - {{posix}}coreutils         # [win]
    - {{posix}}zip               # [win]

  host:
    - r-base
    - r-mass
    - r-rcpp
    - r-knitr
    - r-rmarkdown
    - r-stringr
    - r-survival

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-mass
    - r-rcpp
    - r-knitr
    - r-rmarkdown
    - r-stringr
    - r-survival

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('BivRec')"           # [not win]
    - "\"%R%\" -e \"library('BivRec')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=BivRec
  license: GPL-3
  summary: 'Alternating recurrent event data arise frequently in biomedical and social sciences
    where 2 types of events such as hospital admissions and discharge occur alternatively
    over time.  As such we implement a collection of non-parametric and semiparametric
    methods to analyze such data.    The main functions are biv.rec.fit() and biv.rec.np().
    Use biv.rec.fit() for estimation of covariate effects on the two alternating event
    gap times (xij and yij) using semiparametric methods. The method options are "Lee.et.al"
    and "Chang".    Use biv.rec.np() for estimation of the joint cumulative distribution
    function (cdf) for the two alternating events gap times (xij and yij) as well as
    the marginal survival function for type I gap times (xij) and the conditional cdf
    of the type II gap times (yij) given an interval of type I gap times (xij) in a
    non-parametric fashion.    The package also provides options to simulate and visualize
    the data and results of analysis. '

  license_family: GPL3
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-3'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: BivRec
# Type: Package
# Title: Bivariate Alternating Recurrent Event Data Analysis
# Date: 2018-10-31
# Version: 1.0.0
# Authors@R: c(person("Sandra", "Castro-Pearson", email= "cast0135@umn.edu", role = c("aut", "cre")), person("Chi-Hyun", "Lee", email = "chihyunlee@umass.edu", role ="aut"), person("Chiung-Yu", "Huang", email = "chiungyu.huang@ucsf.edu", role = "aut"), person("Xianghua", "Luo", email = "luox0054@umn.edu", role = "ctb"))
# Author: Sandra Castro-Pearson [aut, cre], Chi-Hyun Lee [aut], Chiung-Yu Huang [aut], Xianghua Luo [ctb]
# Maintainer: Sandra Castro-Pearson <cast0135@umn.edu>
# Description: Alternating recurrent event data arise frequently in biomedical and social sciences where 2 types of events such as hospital admissions and discharge occur alternatively over time.  As such we implement a collection of non-parametric and semiparametric methods to analyze such data.    The main functions are biv.rec.fit() and biv.rec.np(). Use biv.rec.fit() for estimation of covariate effects on the two alternating event gap times (xij and yij) using semiparametric methods. The method options are "Lee.et.al" and "Chang".    Use biv.rec.np() for estimation of the joint cumulative distribution function (cdf) for the two alternating events gap times (xij and yij) as well as the marginal survival function for type I gap times (xij) and the conditional cdf of the type II gap times (yij) given an interval of type I gap times (xij) in a non-parametric fashion.    The package also provides options to simulate and visualize the data and results of analysis.
# BugReports: https://github.com/SandraCastroPearson/BivRec/issues
# Depends: R (>= 3.2.0), survival, stats
# Imports: MASS, stringr, utils, knitr, rmarkdown, Rcpp, graphics, grDevices
# License: GPL-3
# Encoding: UTF-8
# LazyData: true
# RoxygenNote: 6.1.0
# LinkingTo: Rcpp
# NeedsCompilation: yes
# Packaged: 2018-11-06 17:33:18 UTC; pearsons0519
# Repository: CRAN
# Date/Publication: 2018-11-16 16:10:17 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
