{% set version = '0.2' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-restorepoint
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/restorepoint_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/restorepoint/restorepoint_{{ version }}.tar.gz
  sha256: 9a7024d32a217a7a50f33c7e20f132d65899a9c89922096139cf6de6772b575e

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: testthat, knitr
requirements:
  build:
    - {{posix}}zip               # [win]

  host:
    - r-base

  run:
    - r-base

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('restorepoint')"           # [not win]
    - "\"%R%\" -e \"library('restorepoint')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/skranz/restorepoint
  license: GPL-2
  summary: Debugging with restore points instead of break points. A restore point stores all
    local variables when called inside a function. The stored values can later be retrieved
    and evaluated in a modified R console that replicates the function's environment.
    To debug step by step, one can simply copy & paste the function body from the R
    script. Particularly convenient in combination with "RStudio". See the "Github"
    page inst/vignettes for a tutorial.
  license_family: GPL2
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: restorepoint
# Type: Package
# Title: Debugging with Restore Points
# Version: 0.2
# Date: 2018-12-20
# URL: https://github.com/skranz/restorepoint
# Author: Sebastian Kranz [aut, cre], Roman Zenka [ctb]
# Maintainer: Roman Zenka <zenka.roman@mayo.edu>
# Description: Debugging with restore points instead of break points. A restore point stores all local variables when called inside a function. The stored values can later be retrieved and evaluated in a modified R console that replicates the function's environment. To debug step by step, one can simply copy & paste the function body from the R script. Particularly convenient in combination with "RStudio". See the "Github" page inst/vignettes for a tutorial.
# License: GPL (>= 2)
# Collate: 'restorepoint.R'
# Suggests: testthat, knitr
# VignetteBuilder: knitr
# RoxygenNote: 6.0.1
# NeedsCompilation: no
# Packaged: 2018-12-20 17:40:11 UTC; m044910
# Repository: CRAN
# Date/Publication: 2019-01-02 23:10:14 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
