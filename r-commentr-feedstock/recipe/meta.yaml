{% set version = '1.0.4' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-commentr
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/commentr_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/commentr/commentr_{{ version }}.tar.gz
  sha256: 322fc24813cf056cafc96fd7c1a62dc900cdcb36b9e22122ca1ec88ce662d42a

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: testthat
requirements:
  build:
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-stringr

  run:
    - r-base
    - r-stringr

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('commentr')"           # [not win]
    - "\"%R%\" -e \"library('commentr')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=commentr
  license: GPL-2
  summary: Functions to produce nicely formatted comments to use in R-scripts (or Latex/HTML/markdown
    etc). A comment with formatting is printed to the console and can then be copied
    to a script.
  license_family: GPL2
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: commentr
# Type: Package
# Title: Print Nicely Formatted Comments for Use in Script Files
# Version: 1.0.4
# License: GPL-2
# Date: 2016-03-19
# Author: Erik Bulow
# Maintainer: Erik Bulow <erik.bulow@rccvast.se>
# Description: Functions to produce nicely formatted comments to use in R-scripts (or Latex/HTML/markdown etc). A comment with formatting is printed to the console and can then be copied to a script.
# Imports: stringr
# Suggests: testthat
# BugReports: https://bitbucket.org/cancercentrum/commentr/issues? status=new&status=open
# RoxygenNote: 5.0.1
# NeedsCompilation: no
# Packaged: 2016-03-19 07:41:30 UTC; erikbulow
# Repository: CRAN
# Date/Publication: 2016-03-19 11:05:39

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
