{% set version = '1.0' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-tdamapper
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/TDAmapper_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/TDAmapper/TDAmapper_{{ version }}.tar.gz
  sha256: 33812fdee6393bb2a10a57373367cf7347df18dde4e991dbfb0a6d8490c8af33

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: fastcluster, igraph
requirements:
  build:
    - {{ posix }}zip               # [win]

  host:
    - r-base

  run:
    - r-base

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('TDAmapper')"           # [not win]
    - "\"%R%\" -e \"library('TDAmapper')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/paultpearson/TDAmapper/
  license: GPL-3
  summary: 'Topological Data Analysis using Mapper (discrete Morse theory). Generate a 1-dimensional
    simplicial complex from a filter function defined on the data:  1. Define a filter
    function (lens) on the data.  2. Perform clustering within within each level set
    and generate one node (vertex) for each cluster.  3. For each pair of clusters in
    adjacent level sets with a nonempty intersection, generate one edge between vertices.  The
    function mapper1D uses a filter function with codomain R, while the the function
    mapper2D uses a filter function with codomain R^2.'
  license_family: GPL3
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-3'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: TDAmapper
# Title: Analyze High-Dimensional Data Using Discrete Morse Theory
# Version: 1.0
# Date: 2015-05-26
# Authors@R: c(person("Paul", "Pearson", email = "pearsonp@hope.edu", role = c("aut", "cre","trl")), person("Daniel", "Muellner", role = c("aut","ctb")), person("Gurjeet","Singh", role = c("aut","ctb")))
# Author: Paul Pearson [aut, cre, trl], Daniel Muellner [aut, ctb], Gurjeet Singh [aut, ctb]
# Maintainer: Paul Pearson <pearsonp@hope.edu>
# Description: Topological Data Analysis using Mapper (discrete Morse theory). Generate a 1-dimensional simplicial complex from a filter function defined on the data:  1. Define a filter function (lens) on the data.  2. Perform clustering within within each level set and generate one node (vertex) for each cluster.  3. For each pair of clusters in adjacent level sets with a nonempty intersection, generate one edge between vertices.  The function mapper1D uses a filter function with codomain R, while the the function mapper2D uses a filter function with codomain R^2.
# Depends: R (>= 3.1.2)
# Suggests: fastcluster, igraph
# License: GPL-3
# LazyData: true
# URL: https://github.com/paultpearson/TDAmapper/
# BugReports: https://github.com/paultpearson/TDAmapper/issues
# NeedsCompilation: no
# Packaged: 2015-05-30 18:31:56 UTC; Paul
# Repository: CRAN
# Date/Publication: 2015-05-31 09:23:14

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
