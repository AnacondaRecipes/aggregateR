{% set version = '0.4.19' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-rprotobuf
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/RProtoBuf_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/RProtoBuf/RProtoBuf_{{ version }}.tar.gz
  sha256: 6379cdcf0d53c95400607e99dd909701574f9327e6d67ba84887c05e1c658a47

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: tinytest
requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}sed               # [win]
    - {{ posix }}grep              # [win]
    - {{ posix }}autoconf
    - {{ posix }}automake          # [not win]
    - {{ posix }}automake-wrapper  # [win]
    - {{ posix }}pkg-config
    - {{ posix }}make
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-rcpp

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-rcpp

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('RProtoBuf')"           # [not win]
    - "\"%R%\" -e \"library('RProtoBuf')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/eddelbuettel/rprotobuf, https://dirk.eddelbuettel.com/code/rprotobuf.html
  license: GPL-2
  summary: Protocol Buffers are a way of encoding structured data in an efficient yet extensible
    format. Google uses Protocol Buffers for almost all of its internal 'RPC' protocols
    and file formats.  Additional documentation is available in two included vignettes
    one of which corresponds to our 'JSS' paper (2016, <doi:10.18637/jss.v071.i02>.
    A sufficiently recent version of 'Protocol Buffers' library is required; currently
    version 3.3.0 from 2017 is the stated minimum.
  license_family: GPL2
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: RProtoBuf
# Version: 0.4.19
# Date: 2022-05-06
# Author: Romain Francois, Dirk Eddelbuettel, Murray Stokely and Jeroen Ooms
# Maintainer: Dirk Eddelbuettel <edd@debian.org>
# Title: R Interface to the 'Protocol Buffers' 'API' (Version 2 or 3)
# Description: Protocol Buffers are a way of encoding structured data in an efficient yet extensible format. Google uses Protocol Buffers for almost all of its internal 'RPC' protocols and file formats.  Additional documentation is available in two included vignettes one of which corresponds to our 'JSS' paper (2016, <doi:10.18637/jss.v071.i02>. A sufficiently recent version of 'Protocol Buffers' library is required; currently version 3.3.0 from 2017 is the stated minimum.
# Depends: R (>= 3.0.0), methods
# Imports: utils, stats, tools, Rcpp
# LinkingTo: Rcpp
# Suggests: tinytest
# SystemRequirements: ProtoBuf libraries and compiler version 3.3.0 or later; On Debian/Ubuntu these can be installed as libprotoc-dev, libprotobuf-dev and protobuf-compiler, while on Fedora/CentOS protobuf-devel and protobuf-compiler are needed.
# BugReports: https://github.com/eddelbuettel/rprotobuf/issues
# URL: https://github.com/eddelbuettel/rprotobuf, https://dirk.eddelbuettel.com/code/rprotobuf.html
# License: GPL (>= 2)
# NeedsCompilation: yes
# Packaged: 2022-05-06 14:03:21 UTC; edd
# Repository: CRAN
# Date/Publication: 2022-05-06 14:40:02 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
