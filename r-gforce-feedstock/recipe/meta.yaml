{% set version = '0.1.4' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-gforce
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/GFORCE_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/GFORCE/GFORCE_{{ version }}.tar.gz
  sha256: 9f898d4efee561ee2cda15c0f9e7633b06808bcd56b715cddd7e3b6cdfdfedf4

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # TODO: monolotic clock issue on osx
  skip: True  # [osx]

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: testthat
requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{posix}}filesystem        # [win]
    - {{posix}}make
    - {{posix}}sed               # [win]
    - {{posix}}coreutils         # [win]
    - {{posix}}zip               # [win]

  host:
    - r-base
    - r-mass
    - r-lpsolve

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-mass
    - r-lpsolve

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('GFORCE')"           # [not win]
    - "\"%R%\" -e \"library('GFORCE')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=GFORCE
  license: GPL-2
  summary: A complete suite of computationally efficient methods for high dimensional clustering
    and inference problems in G-Latent Models (a type of Latent Variable Gaussian graphical
    model). The main feature is the FORCE (First-Order, Certifiable, Efficient) clustering
    algorithm which is a fast solver for a semi-definite programming (SDP) relaxation
    of the K-means problem. For certain types of graphical models (G-Latent Models),
    with high probability the algorithm not only finds the optimal clustering, but produces
    a certificate of having done so. This certificate, however, is model independent
    and so can also be used to certify data clustering problems. The 'GFORCE' package
    also contains implementations of inferential procedures for G-Latent graphical models
    using n-fold cross validation. Also included are native code implementations of
    other popular clustering methods such as Lloyd's algorithm with kmeans++ initialization
    and complete linkage hierarchical clustering. The FORCE method is due to Eisenach
    and Liu (2019) <arxiv:1806.00530>.
  license_family: GPL2
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: GFORCE
# Type: Package
# Title: Clustering and Inference Procedures for High-Dimensional Latent Variable Models
# Version: 0.1.4
# Authors@R: person("Carson", "Eisenach", email = "eisenach@princeton.edu", role = c("aut", "cre"))
# Description: A complete suite of computationally efficient methods for high dimensional clustering and inference problems in G-Latent Models (a type of Latent Variable Gaussian graphical model). The main feature is the FORCE (First-Order, Certifiable, Efficient) clustering algorithm which is a fast solver for a semi-definite programming (SDP) relaxation of the K-means problem. For certain types of graphical models (G-Latent Models), with high probability the algorithm not only finds the optimal clustering, but produces a certificate of having done so. This certificate, however, is model independent and so can also be used to certify data clustering problems. The 'GFORCE' package also contains implementations of inferential procedures for G-Latent graphical models using n-fold cross validation. Also included are native code implementations of other popular clustering methods such as Lloyd's algorithm with kmeans++ initialization and complete linkage hierarchical clustering. The FORCE method is due to Eisenach and Liu (2019) <arxiv:1806.00530>.
# License: GPL-2
# LazyData: TRUE
# RoxygenNote: 6.1.1
# Imports: MASS,lpSolve,stats
# Suggests: testthat
# NeedsCompilation: yes
# Packaged: 2019-04-05 14:12:51 UTC; carson
# Author: Carson Eisenach [aut, cre]
# Maintainer: Carson Eisenach <eisenach@princeton.edu>
# Repository: CRAN
# Date/Publication: 2019-04-07 09:42:42 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
