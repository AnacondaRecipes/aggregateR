{% set version = '1.6' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-read.gb
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/read.gb_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/read.gb/read.gb_{{ version }}.tar.gz
  sha256: 8d5a2668d2b5077b3f6aa02814df200945781c3141ccb35495047396a832fe9e

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{posix}}zip               # [win]

  host:
    - r-base

  run:
    - r-base

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('read.gb')"           # [not win]
    - "\"%R%\" -e \"library('read.gb')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=read.gb
  license: GPL (>= 2.0)
  summary: Opens complete record(s) with .gb extension from the NCBI/GenBank Nucleotide database
    and returns a list containing shaped record(s). These kind of files contains detailed
    records of DNA samples (locus, organism, type of sequence, source of the sequence...).
    An example of record can be found at <https://www.ncbi.nlm.nih.gov/nuccore/HE799070>.
  license_family: GPL3

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: read.gb
# Type: Package
# Title: Open GenBank Files
# Version: 1.6
# Author: Robin Mercier
# Maintainer: Robin Mercier <robin.largon.mercier@hotmail.fr>
# Description: Opens complete record(s) with .gb extension from the NCBI/GenBank Nucleotide database and returns a list containing shaped record(s). These kind of files contains detailed records of DNA samples (locus, organism, type of sequence, source of the sequence...). An example of record can be found at <https://www.ncbi.nlm.nih.gov/nuccore/HE799070>.
# License: GPL (>= 2.0)
# Encoding: UTF-8
# LazyData: true
# RoxygenNote: 6.0.1
# Collate: 'CDS.F.R' 'C_region.F.R' 'DNA.treatment.R' 'D_loop.F.R' 'D_segment.F.R' 'F_UTR.F.R' 'variation.F.R' 'V_segment.F.R' 'V_region.F.R' 'unsure.F.R' 'tRNA.F.R' 'transit_peptide.F.R' 'tmRNA.F.R' 'telomere.F.R' 'T_UTR.F.R' 'STS.F.R' 'stem_loop.F.R' 'source.F.R' 'sig_peptide.F.R' 'S_region.F.R' 'rRNA.F.R' 'repeat_region.F.R' 'rep_origin.F.R' 'regulatory.F.R' 'protein_bind.F.R' 'propeptide.F.R' 'primer_bind.F.R' 'prim_transcript.F.R' 'precursor_RNA.F.R' 'polyA_site.F.R' 'oriT.F.R' 'operon.F.R' 'old_sequence.F.R' 'ncRNA.F.R' 'N_region.F.R' 'mRNA.F.R' 'modified_base.F.R' 'mobile_element.F.R' 'misc_structure.F.R' 'misc_RNA.F.R' 'misc_recomb.F.R' 'misc_feature.F.R' 'misc_difference.F.R' 'misc_binding.F.R' 'mat_peptide.F.R' 'J_segment.F.R' 'intron.F.R' 'iDNA.F.R' 'gene.F.R' 'gap.F.R' 'exon.F.R' 'centromere.F.R' 'assembly_gap.F.R' 'Feature.sep.R' 'Reference.sep.R' 'Reorganize.report.R' 'read.gb-internal.R' 'read.gb.R'
# NeedsCompilation: no
# Packaged: 2018-11-15 13:59:16 UTC; Largon
# Repository: CRAN
# Date/Publication: 2018-11-26 19:50:03 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
