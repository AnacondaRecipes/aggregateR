{% set version = '0.4.3' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-shiny.semantic
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/shiny.semantic_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/shiny.semantic/shiny.semantic_{{ version }}.tar.gz
  sha256: 6f93a241959b2a74f7c41087be2f505984da705e26e48ffb9f9df4bfd6eb8b88

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: dplyr, tibble, knitr, testthat, lintr, DT, covr, leaflet, plotly, rmarkdown, markdown
requirements:
  build:
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-r6
    - r-glue
    - r-htmltools >=0.2.6
    - r-htmlwidgets >=0.8
    - r-jsonlite
    - r-magrittr
    - r-purrr >=0.2.2
    - r-shiny >=0.12.1

  run:
    - r-base
    - r-r6
    - r-glue
    - r-htmltools >=0.2.6
    - r-htmlwidgets >=0.8
    - r-jsonlite
    - r-magrittr
    - r-purrr >=0.2.2
    - r-shiny >=0.12.1

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('shiny.semantic')"           # [not win]
    - "\"%R%\" -e \"library('shiny.semantic')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=shiny.semantic
  license: MIT
  summary: Creating a great user interface for your Shiny apps can be a hassle, especially if
    you want to work purely in R and don't want to use, for instance HTML templates.
    This package adds support for a powerful UI library Fomantic UI - <https://fomantic-ui.com/>
    (before Semantic). It also supports universal UI input binding that works with various
    DOM elements.
  license_family: MIT
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/MIT'
    - LICENSE

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: shiny.semantic
# Type: Package
# Title: Semantic UI Support for Shiny
# Version: 0.4.3
# Authors@R: c(person("Filip", "Stachura", email = "filip@appsilon.com", role = "aut"), person("Dominik", "Krzeminski", email = "dominik@appsilon.com", role = "aut"), person("Krystian", "Igras", email = "krystian@appsilon.com", role = "aut"), person("Adam", "Forys", email = "adam@appsilon.com", role = "aut"), person("Pawe", "Przytua", email = "pawel@appsilon.com", role = "aut"), person("Jakub", "Chojna", email = "jakub.chojna@appsilon.com", role = "aut"), person("Olga", "Mierzwa-Sulima", email = "olga@appsilon.com", role = "aut"), person("Ashley", "Baldry", role = "ctb"), person("Jakub", "Chojna", email = "jakub.chojna@appsilon.com", role = "ctb"), person("Olga", "Mierzwa-Sulima", email = "olga@appsilon.com", role = "ctb"), person("Pedro", "Manuel Coutinho da Silva", email = "pedro@appsilon.com", role = "ctb"), person("Pawe", "Przytua", email = "pawel@appsilon.com", role = "ctb"), person("Kamil", "Zya", email = "kamil@appsilon.com", role = "ctb"), person("Rabii", "Bouhestine", email = "rabii@appsilon.com", role = "ctb"), person("Developers", "Appsilon", email = "support+opensource@appsilon.com", role = "cre"), person(family = "Appsilon Sp. z o.o.", role = c("cph")))
# Description: Creating a great user interface for your Shiny apps can be a hassle, especially if you want to work purely in R and don't want to use, for instance HTML templates. This package adds support for a powerful UI library Fomantic UI - <https://fomantic-ui.com/> (before Semantic). It also supports universal UI input binding that works with various DOM elements.
# BugReports: https://github.com/Appsilon/shiny.semantic/issues
# Encoding: UTF-8
# License: MIT + file LICENSE
# VignetteBuilder: knitr
# Imports: shiny (>= 0.12.1), htmltools (>= 0.2.6), htmlwidgets (>= 0.8), purrr (>= 0.2.2), stats, magrittr, jsonlite, grDevices, glue, R6
# Suggests: dplyr, tibble, knitr, testthat, lintr, DT, covr, leaflet, plotly, rmarkdown, markdown
# RoxygenNote: 7.1.2
# NeedsCompilation: no
# Packaged: 2021-11-06 18:20:58 UTC; jakub
# Author: Filip Stachura [aut], Dominik Krzeminski [aut], Krystian Igras [aut], Adam Forys [aut], Pawe Przytua [aut], Jakub Chojna [aut], Olga Mierzwa-Sulima [aut], Ashley Baldry [ctb], Jakub Chojna [ctb], Olga Mierzwa-Sulima [ctb], Pedro Manuel Coutinho da Silva [ctb], Pawe Przytua [ctb], Kamil Zya [ctb], Rabii Bouhestine [ctb], Developers Appsilon [cre], Appsilon Sp. z o.o. [cph]
# Maintainer: Developers Appsilon <support+opensource@appsilon.com>
# Repository: CRAN
# Date/Publication: 2021-11-07 16:00:02 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
