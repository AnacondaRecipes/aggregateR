{% set version = '3.16.0' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-mice
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/mice_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/mice/mice_{{ version }}.tar.gz
  sha256: 29f0285185a540337e9dde2357690c82d174f115be701ee2f0a7083173a44040

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: broom.mixed, future, furrr, haven, knitr, lme4, MASS, miceadds, pan, parallelly, purrr, ranger, randomForest, rmarkdown, rstan, survival, testthat
requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}make
    - {{ posix }}sed               # [win]
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-rcpp
    - r-broom
    - r-cpp11
    - r-dplyr
    - r-generics
    - r-glmnet
    - r-lattice
    - r-mitml
    - r-nnet
    - r-rlang
    - r-rpart
    - r-tidyr

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-rcpp
    - r-broom
    - r-cpp11
    - r-dplyr
    - r-generics
    - r-glmnet
    - r-lattice
    - r-mitml
    - r-nnet
    - r-rlang
    - r-rpart
    - r-tidyr

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('mice')"           # [not win]
    - "\"%R%\" -e \"library('mice')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/amices/mice, https://amices.org/mice/, https://stefvanbuuren.name/fimd/
  license: GPL-2
  summary: Multiple imputation using Fully Conditional Specification (FCS) implemented by the
    MICE algorithm as described in Van Buuren and Groothuis-Oudshoorn (2011) <doi:10.18637/jss.v045.i03>.
    Each variable has its own imputation model. Built-in imputation models are provided
    for continuous data (predictive mean matching, normal), binary data (logistic regression),
    unordered categorical data (polytomous logistic regression) and ordered categorical
    data (proportional odds). MICE can also impute continuous two-level data (normal
    model, pan, second-level variables). Passive imputation can be used to maintain
    consistency between variables. Various diagnostic plots are available to inspect
    the quality of the imputations.
  license_family: GPL2
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

# The original CRAN metadata for this package was:

# Package: mice
# Type: Package
# Version: 3.16.0
# Title: Multivariate Imputation by Chained Equations
# Date: 2023-05-24
# Authors@R: c(person("Stef", "van Buuren", role = c("aut","cre"), email = "stef.vanbuuren@tno.nl"), person("Karin", "Groothuis-Oudshoorn", role = "aut", email = "c.g.m.oudshoorn@utwente.nl"), person("Gerko","Vink", role = "ctb", email = "g.vink@uu.nl"), person("Rianne","Schouten", role = "ctb", email = "R.M.Schouten@uu.nl"), person("Alexander", "Robitzsch", role = "ctb", email = "robitzsch@ipn.uni-kiel.de"), person("Patrick", "Rockenschaub", role = "ctb", email = "rockenschaub.patrick@gmail.com"), person("Lisa","Doove", role = "ctb", email = "lisa.doove@ppw.kuleuven.be"), person("Shahab","Jolani", role = "ctb", email = "s.jolani@maastrichtuniversity.nl"), person("Margarita","Moreno-Betancur", role="ctb", email = "margarita.moreno@mcri.edu.au"), person("Ian", "White", role="ctb", email = "ian.white@ucl.ac.uk"), person("Philipp","Gaffert", role = "ctb", email = "philipp.gaffert@gfk.com"), person("Florian","Meinfelder", role = "ctb", email = "florian.meinfelder@uni-bamberg.de"), person("Bernie","Gray", role = "ctb", email = "bfgray3@gmail.com"), person("Vincent", "Arel-Bundock", role = "ctb", email = "vincent.arel-bundock@umontreal.ca"), person("Mingyang", "Cai", role = "ctb", email = "m.cai@uu.nl"), person("Thom", "Volker", role = "ctb", email = "t.b.volker@uu.nl"), person("Edoardo", "Costantini", role = "ctb", email = "e.costantini@tilburguniversity.edu"), person("Caspar", "van Lissa", role = "ctb", email = "c.j.vanlissa@uu.nl"), person("Hanne", "Oberman", role = "ctb", email = "h.i.oberman@uu.nl"))
# Maintainer: Stef van Buuren <stef.vanbuuren@tno.nl>
# Depends: R (>= 2.10.0)
# Imports: broom, dplyr, generics, glmnet, graphics, grDevices, lattice, methods, mitml, nnet, Rcpp, rpart, rlang, stats, tidyr, utils
# Suggests: broom.mixed, future, furrr, haven, knitr, lme4, MASS, miceadds, pan, parallelly, purrr, ranger, randomForest, rmarkdown, rstan, survival, testthat
# Description: Multiple imputation using Fully Conditional Specification (FCS) implemented by the MICE algorithm as described in Van Buuren and Groothuis-Oudshoorn (2011) <doi:10.18637/jss.v045.i03>. Each variable has its own imputation model. Built-in imputation models are provided for continuous data (predictive mean matching, normal), binary data (logistic regression), unordered categorical data (polytomous logistic regression) and ordered categorical data (proportional odds). MICE can also impute continuous two-level data (normal model, pan, second-level variables). Passive imputation can be used to maintain consistency between variables. Various diagnostic plots are available to inspect the quality of the imputations.
# Encoding: UTF-8
# LazyLoad: yes
# LazyData: yes
# URL: https://github.com/amices/mice, https://amices.org/mice/, https://stefvanbuuren.name/fimd/
# BugReports: https://github.com/amices/mice/issues
# LinkingTo: cpp11, Rcpp
# License: GPL (>= 2)
# RoxygenNote: 7.2.3
# NeedsCompilation: yes
# Packaged: 2023-06-04 21:03:06 UTC; buurensv
# Author: Stef van Buuren [aut, cre], Karin Groothuis-Oudshoorn [aut], Gerko Vink [ctb], Rianne Schouten [ctb], Alexander Robitzsch [ctb], Patrick Rockenschaub [ctb], Lisa Doove [ctb], Shahab Jolani [ctb], Margarita Moreno-Betancur [ctb], Ian White [ctb], Philipp Gaffert [ctb], Florian Meinfelder [ctb], Bernie Gray [ctb], Vincent Arel-Bundock [ctb], Mingyang Cai [ctb], Thom Volker [ctb], Edoardo Costantini [ctb], Caspar van Lissa [ctb], Hanne Oberman [ctb]
# Repository: CRAN
# Date/Publication: 2023-06-05 14:40:02 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
