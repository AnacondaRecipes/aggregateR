{% set version = '0.1.7' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-gausscov
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/gausscov_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/gausscov/gausscov_{{ version }}.tar.gz
  sha256: 7623e87b60b831a2ca5233f38a723c02e5280a2c809a70a6d31d8e66491f6731

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('fortran') }}        # [not win]
    - {{ compiler('m2w64_fortran') }}  # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}make
    - {{ posix }}sed               # [win]
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]

  host:
    - r-base

  run:
    - r-base
    - {{native}}gcc-libs         # [win]

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('gausscov')"           # [not win]
    - "\"%R%\" -e \"library('gausscov')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=gausscov
  license: GPL-3
  summary: 'Given the standard linear model the traditional way of deciding whether to include
    the jth covariate is to apply the F-test to decide whether the corresponding beta
    coefficient is  zero. The Gaussian covariate method is completely different. The
    question as to whether the beta coefficient is or is not zero is replaced by the
    question as to whether the covariate is better or worse than i.i.d. Gaussian noise.
    The P-value for the covariate is the probability that Gaussian noise is better.
    Surprisingly this can be given exactly and it is the same a the P-value for the
    classical model based on the F-distribution. The Gaussian covariate P-value is model
    free, it is the same for any data set. Using the idea it is possible to do covariate
    selection for a small number of covariates 25 by considering all subsets.  Post
    selection inference causes no problems as the P-values hold whatever the data. The
    idea extends to stepwise regression again with exact probabilities. In the simplest
    version the only parameter is a specified cut-off P-value which can be interpreted
    as the probability of a false positive being included in the final selection. For
    more information see the web site below and the accompanying papers: L. Davies and
    L. Duembgen, "Covariate Selection Based on a Model-free Approach to Linear Regression
    with Exact Probabilities", 2022, <arxiv:2202.01553>. L. Davies, "Linear Regression,
    Covariate Selection and the Failure of Modelling", 2022, <arXiv:2112.08738>.'
  license_family: GPL3
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-3'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: gausscov
# Version: 0.1.7
# Date: 2022-04-17
# Title: The Gaussian Covariate Method for Variable Selection
# Authors@R: person("Laurie", "Davies", role = c("aut","cre"),email ="laurie.davies@uni-due.de")
# Author: Laurie Davies [aut, cre]
# Maintainer: Laurie Davies <laurie.davies@uni-due.de>
# Description: Given the standard linear model the traditional way of deciding whether to include the jth covariate is to apply the F-test to decide whether the corresponding beta coefficient is  zero. The Gaussian covariate method is completely different. The question as to whether the beta coefficient is or is not zero is replaced by the question as to whether the covariate is better or worse than i.i.d. Gaussian noise. The P-value for the covariate is the probability that Gaussian noise is better. Surprisingly this can be given exactly and it is the same a the P-value for the classical model based on the F-distribution. The Gaussian covariate P-value is model free, it is the same for any data set. Using the idea it is possible to do covariate selection for a small number of covariates 25 by considering all subsets.  Post selection inference causes no problems as the P-values hold whatever the data. The idea extends to stepwise regression again with exact probabilities. In the simplest version the only parameter is a specified cut-off P-value which can be interpreted as the probability of a false positive being included in the final selection. For more information see the web site below and the accompanying papers: L. Davies and L. Duembgen, "Covariate Selection Based on a Model-free Approach to Linear Regression with Exact Probabilities", 2022, <arxiv:2202.01553>. L. Davies, "Linear Regression, Covariate Selection and the Failure of Modelling", 2022, <arXiv:2112.08738>.
# LazyData: true
# License: GPL-3
# Depends: R (>= 3.5.0), stats
# Encoding: UTF-8
# RoxygenNote: 6.1.1
# NeedsCompilation: yes
# Packaged: 2022-04-23 18:28:22 UTC; laurie
# Repository: CRAN
# Date/Publication: 2022-04-26 15:50:05 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
