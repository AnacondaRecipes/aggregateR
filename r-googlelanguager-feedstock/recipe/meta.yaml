{% set version = '0.3.0' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-googlelanguager
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/googleLanguageR_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/googleLanguageR/googleLanguageR_{{ version }}.tar.gz
  sha256: abbf6e522d9d4a5037256b67c133e80c7eafb2d0d1c4e7b745e142fdc603a552

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: cld2, testthat, knitr, rmarkdown, rvest, shiny, shinyjs, stringdist, tidyr, tuneR, xml2
requirements:
  build:
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-assertthat
    - r-base64enc
    - r-googleauthr >=1.1.1
    - r-jsonlite
    - r-magrittr
    - r-purrr >=0.2.4
    - r-tibble

  run:
    - r-base
    - r-assertthat
    - r-base64enc
    - r-googleauthr >=1.1.1
    - r-jsonlite
    - r-magrittr
    - r-purrr >=0.2.4
    - r-tibble

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('googleLanguageR')"           # [not win]
    - "\"%R%\" -e \"library('googleLanguageR')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: http://code.markedmondson.me/googleLanguageR/, https://github.com/ropensci/googleLanguageR,
    https://docs.ropensci.org/googleLanguageR/
  license: MIT
  summary: Call 'Google Cloud' machine learning APIs for text and speech tasks. Call the 'Cloud
    Translation' API <https://cloud.google.com/translate/> for detection and translation
    of text, the 'Natural Language' API <https://cloud.google.com/natural-language/>
    to analyse text for sentiment, entities or syntax, the 'Cloud Speech' API <https://cloud.google.com/speech/>
    to transcribe sound files to text and the 'Cloud Text-to-Speech' API <https://cloud.google.com/text-to-speech/>
    to turn text into sound files.
  license_family: MIT
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/MIT'
    - LICENSE

# The original CRAN metadata for this package was:

# Package: googleLanguageR
# Title: Call Google's 'Natural Language' API, 'Cloud Translation' API, 'Cloud Speech' API and 'Cloud Text-to-Speech' API
# Version: 0.3.0
# Authors@R: c(person("Mark", "Edmondson", email = "r@sunholo.com", role = c("aut", "cre")), person("John", "Muschelli", email = "muschellij2@gmail.com", role = c("ctb")), person("Neal", "Richardson", email = "neal.p.richardson@gmail.com", role = "rev", comment = "Neal reviewed the package for ropensci, see <https://github.com/ropensci/onboarding/issues/127>"), person("Julia", "Gustavsen", email = "j.gustavsen@gmail.com", role = "rev", comment = "Julia reviewed the package for ropensci, see <https://github.com/ropensci/onboarding/issues/127>") )
# Description: Call 'Google Cloud' machine learning APIs for text and speech tasks. Call the 'Cloud Translation' API <https://cloud.google.com/translate/> for detection and translation of text, the 'Natural Language' API <https://cloud.google.com/natural-language/> to analyse text for sentiment, entities or syntax, the 'Cloud Speech' API <https://cloud.google.com/speech/> to transcribe sound files to text and the 'Cloud Text-to-Speech' API <https://cloud.google.com/text-to-speech/> to turn text into sound files.
# URL: http://code.markedmondson.me/googleLanguageR/, https://github.com/ropensci/googleLanguageR, https://docs.ropensci.org/googleLanguageR/
# BugReports: https://github.com/ropensci/googleLanguageR/issues
# Depends: R (>= 3.3)
# License: MIT + file LICENSE
# Encoding: UTF-8
# LazyData: true
# RoxygenNote: 7.1.0
# VignetteBuilder: knitr
# Imports: assertthat, base64enc, googleAuthR (>= 1.1.1), jsonlite, magrittr, purrr (>= 0.2.4), stats, tibble, utils
# Suggests: cld2, testthat, knitr, rmarkdown, rvest, shiny, shinyjs, stringdist, tidyr, tuneR, xml2
# NeedsCompilation: no
# Packaged: 2020-04-19 13:14:01 UTC; mark
# Author: Mark Edmondson [aut, cre], John Muschelli [ctb], Neal Richardson [rev] (Neal reviewed the package for ropensci, see <https://github.com/ropensci/onboarding/issues/127>), Julia Gustavsen [rev] (Julia reviewed the package for ropensci, see <https://github.com/ropensci/onboarding/issues/127>)
# Maintainer: Mark Edmondson <r@sunholo.com>
# Repository: CRAN
# Date/Publication: 2020-04-19 13:40:02 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
