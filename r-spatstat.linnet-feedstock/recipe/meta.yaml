{% set version = '3.1-1' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-spatstat.linnet
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/spatstat.linnet_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/spatstat.linnet/spatstat.linnet_{{ version }}.tar.gz
  sha256: 0ce09285474d156143a8133ca7e932cdfecf6bc34f9dcad10545a810d750b029

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: goftest, locfit, spatstat (>= 3.0)
requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}make
    - {{ posix }}sed               # [win]
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-matrix
    - r-spatstat.data >=3.0
    - r-spatstat.explore >=3.2_1
    - r-spatstat.geom >=3.2_1
    - r-spatstat.model >=3.2_3
    - r-spatstat.random >=3.1_5
    - r-spatstat.sparse >=3.0
    - r-spatstat.utils >=3.0_3

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-matrix
    - r-spatstat.data >=3.0
    - r-spatstat.explore >=3.2_1
    - r-spatstat.geom >=3.2_1
    - r-spatstat.model >=3.2_3
    - r-spatstat.random >=3.1_5
    - r-spatstat.sparse >=3.0
    - r-spatstat.utils >=3.0_3

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('spatstat.linnet')"           # [not win]
    - "\"%R%\" -e \"library('spatstat.linnet')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: http://spatstat.org/
  license: GPL-2
  summary: Defines types of spatial data on a linear network and provides functionality for geometrical
    operations, data analysis and modelling of data on a linear network, in the 'spatstat'
    family of packages. Contains definitions and support for linear networks, including
    creation of networks, geometrical measurements, topological connectivity, geometrical
    operations such as inserting and deleting vertices, intersecting a network with
    another object, and interactive editing of networks. Data types defined on a network
    include point patterns, pixel images, functions, and tessellations. Exploratory
    methods include kernel estimation of intensity on a network, K-functions and pair
    correlation functions on a network, simulation envelopes, nearest neighbour distance
    and empty space distance, relative risk estimation with cross-validated bandwidth
    selection. Formal hypothesis tests of random pattern (chi-squared, Kolmogorov-Smirnov,
    Monte Carlo, Diggle-Cressie-Loosmore-Ford, Dao-Genton, two-stage Monte Carlo) and
    tests for covariate effects (Cox-Berman-Waller-Lawson, Kolmogorov-Smirnov, ANOVA)
    are also supported. Parametric models can be fitted to point pattern data using
    the function lppm() similar to glm(). Only Poisson models are implemented so far.
    Models may involve dependence on covariates and dependence on marks. Models are
    fitted by maximum likelihood. Fitted point process models can be simulated, automatically.
    Formal hypothesis tests of a fitted model are supported (likelihood ratio test,
    analysis of deviance, Monte Carlo tests) along with basic tools for model selection
    (stepwise(), AIC()) and variable selection (sdr). Tools for validating the fitted
    model include simulation envelopes, residuals, residual plots and Q-Q plots, leverage
    and influence diagnostics, partial residuals, and added variable plots. Random point
    patterns on a network can be generated using a variety of models.
  license_family: GPL2
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

# The original CRAN metadata for this package was:

# Package: spatstat.linnet
# Version: 3.1-1
# Date: 2023-05-13
# Title: Linear Networks Functionality of the 'spatstat' Family
# Authors@R: c(person("Adrian", "Baddeley", role = c("aut", "cre", "cph"), email = "Adrian.Baddeley@curtin.edu.au", comment = c(ORCID="0000-0001-9499-8382")), person("Rolf", "Turner", role = c("aut", "cph"), email="r.turner@auckland.ac.nz", comment=c(ORCID="0000-0001-5521-5218")), person("Ege",   "Rubak", role = c("aut", "cph"), email = "rubak@math.aau.dk", comment=c(ORCID="0000-0002-6675-533X")), person("Greg", "McSwiggan", role = c("aut", "cph")), person("Tilman", "Davies", role = c("ctb", "cph")), person("Mehdi", "Moradi", role = c("ctb", "cph")), person("Suman", "Rakshit", role = c("ctb", "cph")), person("Ottmar", "Cronie", role = "ctb"))
# Maintainer: Adrian Baddeley <Adrian.Baddeley@curtin.edu.au>
# Depends: R (>= 3.5.0), spatstat.data (>= 3.0), spatstat.geom (>= 3.2-1), spatstat.random (>= 3.1-5), spatstat.explore (>= 3.2-1), spatstat.model (>= 3.2-3), stats, graphics, grDevices, methods, utils
# Imports: spatstat.utils (>= 3.0-3), Matrix, spatstat.sparse (>= 3.0)
# Suggests: goftest, locfit, spatstat (>= 3.0)
# Description: Defines types of spatial data on a linear network and provides functionality for geometrical operations, data analysis and modelling of data on a linear network, in the 'spatstat' family of packages. Contains definitions and support for linear networks, including creation of networks, geometrical measurements, topological connectivity, geometrical operations such as inserting and deleting vertices, intersecting a network with another object, and interactive editing of networks. Data types defined on a network include point patterns, pixel images, functions, and tessellations. Exploratory methods include kernel estimation of intensity on a network, K-functions and pair correlation functions on a network, simulation envelopes, nearest neighbour distance and empty space distance, relative risk estimation with cross-validated bandwidth selection. Formal hypothesis tests of random pattern (chi-squared, Kolmogorov-Smirnov, Monte Carlo, Diggle-Cressie-Loosmore-Ford, Dao-Genton, two-stage Monte Carlo) and tests for covariate effects (Cox-Berman-Waller-Lawson, Kolmogorov-Smirnov, ANOVA) are also supported. Parametric models can be fitted to point pattern data using the function lppm() similar to glm(). Only Poisson models are implemented so far. Models may involve dependence on covariates and dependence on marks. Models are fitted by maximum likelihood. Fitted point process models can be simulated, automatically. Formal hypothesis tests of a fitted model are supported (likelihood ratio test, analysis of deviance, Monte Carlo tests) along with basic tools for model selection (stepwise(), AIC()) and variable selection (sdr). Tools for validating the fitted model include simulation envelopes, residuals, residual plots and Q-Q plots, leverage and influence diagnostics, partial residuals, and added variable plots. Random point patterns on a network can be generated using a variety of models.
# License: GPL (>= 2)
# URL: http://spatstat.org/
# NeedsCompilation: yes
# ByteCompile: true
# BugReports: https://github.com/spatstat/spatstat.linnet/issues
# Packaged: 2023-05-13 02:43:41 UTC; adrian
# Author: Adrian Baddeley [aut, cre, cph] (<https://orcid.org/0000-0001-9499-8382>), Rolf Turner [aut, cph] (<https://orcid.org/0000-0001-5521-5218>), Ege Rubak [aut, cph] (<https://orcid.org/0000-0002-6675-533X>), Greg McSwiggan [aut, cph], Tilman Davies [ctb, cph], Mehdi Moradi [ctb, cph], Suman Rakshit [ctb, cph], Ottmar Cronie [ctb]
# Repository: CRAN
# Date/Publication: 2023-05-15 03:50:02 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
