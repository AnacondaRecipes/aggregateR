{% set version = '1.0.1' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-ipfp
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/ipfp_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/ipfp/ipfp_{{ version }}.tar.gz
  sha256: 245f4616e9b14da266b061b002108d94ac32105d0f83c8c54a199c9b1ca45389

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{posix}}filesystem        # [win]
    - {{posix}}make
    - {{posix}}sed               # [win]
    - {{posix}}coreutils         # [win]
    - {{posix}}zip               # [win]

  host:
    - r-base

  run:
    - r-base
    - {{native}}gcc-libs         # [win]

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('ipfp')"           # [not win]
    - "\"%R%\" -e \"library('ipfp')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/awblocker/ipfp
  license: Apache License (== 2.0)
  summary: A fast (C) implementation of the iterative proportional fitting procedure. Based on
    corresponding code from the networkTomography package.
  license_family: APACHE

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: ipfp
# Type: Package
# Title: Fast Implementation of the Iterative Proportional Fitting Procedure in C
# Version: 1.0.1
# Author: Alexander W Blocker
# Maintainer: Alexander W Blocker <ablocker@gmail.com>
# Description: A fast (C) implementation of the iterative proportional fitting procedure. Based on corresponding code from the networkTomography package.
# License: Apache License (== 2.0)
# LazyLoad: yes
# URL: https://github.com/awblocker/ipfp
# Collate: 'ipfp.R'
# RoxygenNote: 5.0.1
# NeedsCompilation: yes
# Packaged: 2016-02-14 21:30:33 UTC; awblocker
# Repository: CRAN
# Date/Publication: 2016-02-14 23:02:26

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
