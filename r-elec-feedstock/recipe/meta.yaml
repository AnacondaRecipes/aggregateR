{% set version = '0.1.2.2' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-elec
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/elec_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/elec/elec_{{ version }}.tar.gz
  sha256: 4a401cca68b52a55d6f2b8c65ef3616def0ee92c23e556f32773f73ad78782e1

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: testthat (>= 3.0.0)
requirements:
  build:
    - {{ posix }}zip               # [win]

  host:
    - r-base

  run:
    - r-base

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('elec')"           # [not win]
    - "\"%R%\" -e \"library('elec')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=elec
  license: GPL-2
  summary: This is a (somewhat bizarre) collection of functions written to do various sorts of
    statistical election audits.  There are also functions to generate simulated voting
    data, including methods to simulation different types of voting errors which allow
    for simulations for checking the characteristics of these methods.
  license_family: GPL2
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: elec
# Type: Package
# Title: Collection of Functions for Statistical Election Audits
# Version: 0.1.2.2
# Date: 2022-04-23
# Author: Luke Miratrix
# Maintainer: Luke Mirarix <lmiratrix@g.harvard.edu>
# Description: This is a (somewhat bizarre) collection of functions written to do various sorts of statistical election audits.  There are also functions to generate simulated voting data, including methods to simulation different types of voting errors which allow for simulations for checking the characteristics of these methods.
# License: GPL (>= 2)
# LazyLoad: yes
# Repository: CRAN
# NeedsCompilation: no
# Depends: R (>= 2.10)
# RoxygenNote: 7.1.2
# Encoding: UTF-8
# Suggests: testthat (>= 3.0.0)
# Packaged: 2022-04-26 16:09:09 UTC; lmiratrix
# Date/Publication: 2022-04-26 22:10:02 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
