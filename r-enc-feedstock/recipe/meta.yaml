{% set version = '0.2.1' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-enc
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/enc_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/enc/enc_{{ version }}.tar.gz
  sha256: e3cc63b334bf9304dbba078e31801098b7ad4cf27828b5224d911822612aa153

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: digest, pillar, readr, rlang, testthat, withr
requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{posix}}filesystem        # [win]
    - {{posix}}make
    - {{posix}}sed               # [win]
    - {{posix}}coreutils         # [win]
    - {{posix}}zip               # [win]

  host:
    - r-base

  run:
    - r-base
    - {{native}}gcc-libs         # [win]

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('enc')"           # [not win]
    - "\"%R%\" -e \"library('enc')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/krlmlr/enc
  license: GPL-3
  summary: ' Implements an S3 class for storing ''UTF-8'' strings, based on regular character
    vectors. Also contains routines to portably read and write ''UTF-8'' encoded text
    files, to convert all strings in an object to ''UTF-8'', and to create character
    vectors with various encodings.'

  license_family: GPL3
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-3'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: enc
# Title: Portable Tools for 'UTF-8' Character Data
# Date: 2019-06-24
# Version: 0.2.1
# Authors@R: person("Kirill", "Muller", role = c("aut", "cre"), email = "krlmlr+r@mailbox.org")
# Description:  Implements an S3 class for storing 'UTF-8' strings, based on regular character vectors. Also contains routines to portably read and write 'UTF-8' encoded text files, to convert all strings in an object to 'UTF-8', and to create character vectors with various encodings.
# Depends: R (>= 3.1)
# Imports: methods
# Suggests: digest, pillar, readr, rlang, testthat, withr
# License: GPL-3
# Encoding: UTF-8
# LazyData: true
# BugReports: https://github.com/krlmlr/enc/issues
# URL: https://github.com/krlmlr/enc
# RoxygenNote: 6.1.1
# NeedsCompilation: yes
# Packaged: 2019-06-24 08:48:43 UTC; kirill
# Author: Kirill Muller [aut, cre]
# Maintainer: Kirill Muller <krlmlr+r@mailbox.org>
# Repository: CRAN
# Date/Publication: 2019-06-24 09:10:11 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
