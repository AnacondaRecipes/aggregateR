{% set version = '0.4.1' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-tstools
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/tstools_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/tstools/tstools_{{ version }}.tar.gz
  sha256: 12e8a9e5cfa081f6b143da293c8af7ae16dd6a6ff7787420c358e14f4c7b6a4b

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: knitr, rmarkdown, testthat, reshape2, openxlsx
requirements:
  build:
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-data.table
    - r-jsonlite
    - r-xts
    - r-yaml
    - r-zoo >=1.7_12

  run:
    - r-base
    - r-data.table
    - r-jsonlite
    - r-xts
    - r-yaml
    - r-zoo >=1.7_12

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('tstools')"           # [not win]
    - "\"%R%\" -e \"library('tstools')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/mbannert/tstools/
  license: GPL-2
  summary: 'Plot official statistics'' time series conveniently: automatic legends, highlight
    windows, stacked bar chars with positive and negative contributions, sum-as-line
    option, two y-axes with automatic horizontal grids that fit both axes and other
    popular chart types. ''tstools'' comes with a plethora of defaults to let you plot
    without setting an abundance of parameters first, but gives you the flexibility
    to tweak the defaults. In addition to charts, ''tstools'' provides a super fast,
    ''data.table'' backed time series I/O that allows the user to export / import long
    format, wide format and transposed wide format data to various file types.'
  license_family: GPL2
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: tstools
# Type: Package
# Version: 0.4.1
# Title: A Time Series Toolbox for Official Statistics
# Description: Plot official statistics' time series conveniently: automatic legends, highlight windows, stacked bar chars with positive and negative contributions, sum-as-line option, two y-axes with automatic horizontal grids that fit both axes and other popular chart types. 'tstools' comes with a plethora of defaults to let you plot without setting an abundance of parameters first, but gives you the flexibility to tweak the defaults. In addition to charts, 'tstools' provides a super fast, 'data.table' backed time series I/O that allows the user to export / import long format, wide format and transposed wide format data to various file types.
# Authors@R: c( person("Matthias", "Bannert", , "bannert@kof.ethz.ch", c("aut", "cre")), person("Severin", "Thoeni", , "thoenis@kof.ethz.ch", "aut"))
# Depends: R (>= 3.0.0), zoo (>= 1.7-12),
# Imports: xts, stats, graphics, jsonlite, data.table, yaml,
# Suggests: knitr, rmarkdown, testthat, reshape2, openxlsx
# VignetteBuilder: knitr
# BugReports: https://github.com/mbannert/tstools/issues/
# URL: https://github.com/mbannert/tstools/
# Date: 2022-03-29
# License: GPL-2
# LazyData: true
# Maintainer: Matthias Bannert <bannert@kof.ethz.ch>
# NeedsCompilation: no
# Author: Matthias Bannert [aut, cre], Severin Thoeni [aut]
# RoxygenNote: 7.1.2
# Packaged: 2022-03-29 18:18:52 UTC; mbannert
# Repository: CRAN
# Date/Publication: 2022-03-30 07:00:08 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
