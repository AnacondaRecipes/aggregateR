{% set version = '1.23.3' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-egor
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/egor_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/egor/egor_{{ version }}.tar.gz
  sha256: f6d0efd7feaa2022b236842679d5d370f6bdaf384ccd6532c82beb4cb108c417

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: knitr, testthat (>= 2.1.0), rmarkdown, survey, shiny, igraph, network, haven
requirements:
  build:
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-dplyr
    - r-pillar
    - r-purrr
    - r-rlang
    - r-srvyr
    - r-tibble
    - r-tidygraph
    - r-tidyr

  run:
    - r-base
    - r-dplyr
    - r-pillar
    - r-purrr
    - r-rlang
    - r-srvyr
    - r-tibble
    - r-tidygraph
    - r-tidyr

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('egor')"           # [not win]
    - "\"%R%\" -e \"library('egor')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/tilltnet/egor, https://egor.tillt.net/
  license: AGPL-3
  summary: Tools for importing, analyzing and visualizing ego-centered network data. Supports
    several data formats, including the export formats of 'EgoNet', 'EgoWeb 2.0' and
    'openeddi'. An interactive (shiny) app for the intuitive visualization of ego-centered
    networks is provided. Also included are procedures for creating and visualizing
    Clustered Graphs (Lerner 2008 <DOI:10.1109/PACIFICVIS.2008.4475458>).
  license_family: AGPL
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/AGPL-3'

# The original CRAN metadata for this package was:

# Package: egor
# Type: Package
# Title: Import and Analyse Ego-Centered Network Data
# Version: 1.23.3
# Date: 2023-03-15
# Authors@R: c( person("Till", "Krenz", email = "egor@tillt.net", role = c("aut", "cre")), person("Pavel N.", "Krivitsky", email="pavel@statnet.org", role=c("aut")), person("Raffaele", "Vacca", email = "r.vacca@ufl.edu", role = c("aut")), person(given = "Michal", family = "Bojanowski", role = "aut", email = "michal2992@gmail.com", comment = c(ORCID = "0000-0001-7503-852X")), person("Markus", "Gamper", email = "m.gamper@uni-koeln.de", role = c("ctb")), person("Andreas", "Herz", email = "herzand@uni-hildesheim.de", role = c("aut")), person("Christopher", "McCarty", email = "ufchris@ufl.edu", role = c("ctb")))
# Description: Tools for importing, analyzing and visualizing ego-centered network data. Supports several data formats, including the export formats of 'EgoNet', 'EgoWeb 2.0' and 'openeddi'. An interactive (shiny) app for the intuitive visualization of ego-centered networks is provided. Also included are procedures for creating and visualizing Clustered Graphs (Lerner 2008 <DOI:10.1109/PACIFICVIS.2008.4475458>).
# URL: https://github.com/tilltnet/egor, https://egor.tillt.net/
# BugReports: https://github.com/tilltnet/egor/issues
# License: AGPL-3
# Depends: R (>= 3.5.0), dplyr, tibble
# Imports: tidygraph, srvyr, tidyr, methods, utils, purrr, rlang, pillar
# Suggests: knitr, testthat (>= 2.1.0), rmarkdown, survey, shiny, igraph, network, haven
# VignetteBuilder: knitr
# RoxygenNote: 7.2.3
# LazyData: true
# Encoding: UTF-8
# NeedsCompilation: no
# Packaged: 2023-03-16 04:06:53 UTC; till
# Author: Till Krenz [aut, cre], Pavel N. Krivitsky [aut], Raffaele Vacca [aut], Michal Bojanowski [aut] (<https://orcid.org/0000-0001-7503-852X>), Markus Gamper [ctb], Andreas Herz [aut], Christopher McCarty [ctb]
# Maintainer: Till Krenz <egor@tillt.net>
# Repository: CRAN
# Date/Publication: 2023-03-16 04:40:02 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
