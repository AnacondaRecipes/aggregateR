{% set version = '1.2.6' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-rrapply
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/rrapply_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/rrapply/rrapply_{{ version }}.tar.gz
  sha256: 4c862964316093d7f4b0b504b2a08bd922168ef1654cd7d238de6828868a5017

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}make
    - {{ posix }}sed               # [win]
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]

  host:
    - r-base

  run:
    - r-base
    - {{native}}gcc-libs         # [win]

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('rrapply')"           # [not win]
    - "\"%R%\" -e \"library('rrapply')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://jorischau.github.io/rrapply/, https://github.com/JorisChau/rrapply
  license: GPL-3
  summary: The minimal 'rrapply'-package contains a single function rrapply(), providing an extended
    implementation of 'R'-base rapply() by allowing to recursively apply a function
    to elements of a nested list based on a general condition function and including
    the possibility to prune or aggregate nested list elements from the result. In addition,
    special arguments can be supplied to access the name, location, parents and siblings
    in the nested list of the element under evaluation. The rrapply() function builds
    upon rapply()'s native 'C' implementation and requires no other package dependencies.
  license_family: GPL3
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-3'

# The original CRAN metadata for this package was:

# Package: rrapply
# Type: Package
# Title: Revisiting Base Rapply
# Version: 1.2.6
# Date: 2022-10-12
# Authors@R: person("Joris", "Chau", email = "joris.chau@openanalytics.eu", role = c("aut", "cre"))
# Description: The minimal 'rrapply'-package contains a single function rrapply(), providing an extended implementation of 'R'-base rapply() by allowing to recursively apply a function to elements of a nested list based on a general condition function and including the possibility to prune or aggregate nested list elements from the result. In addition, special arguments can be supplied to access the name, location, parents and siblings in the nested list of the element under evaluation. The rrapply() function builds upon rapply()'s native 'C' implementation and requires no other package dependencies.
# BugReports: https://github.com/JorisChau/rrapply/issues
# URL: https://jorischau.github.io/rrapply/, https://github.com/JorisChau/rrapply
# Depends: R (>= 3.5)
# Encoding: UTF-8
# License: GPL-3
# LazyData: true
# RoxygenNote: 7.2.0
# NeedsCompilation: yes
# Packaged: 2022-10-14 14:07:02 UTC; jchau
# Author: Joris Chau [aut, cre]
# Maintainer: Joris Chau <joris.chau@openanalytics.eu>
# Repository: CRAN
# Date/Publication: 2022-10-16 14:20:02 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
