{% set version = '1.0.76' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-stockr
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/stockR_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/stockR/stockR_{{ version }}.tar.gz
  sha256: 8094a21221f70b95c42fcaeb4b84002423aa43a89c81916c624ba07ed2b73dd8

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: knitr
requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{ compiler('fortran') }}        # [not win]
    - {{ compiler('m2w64_fortran') }}  # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}make
    - {{ posix }}sed               # [win]
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-rcolorbrewer
    - r-rcpp
    - r-gtools

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-rcolorbrewer
    - r-rcpp
    - r-gtools

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('stockR')"           # [not win]
    - "\"%R%\" -e \"library('stockR')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=stockR
  license: GPL-2
  summary: 'Provides a mixture model for clustering individuals (or sampling groups) into stocks
    based on their genetic profile. Here, sampling groups are individuals that are sure
    to come from the same stock (e.g. breeding adults or larvae). The mixture (log-)likelihood
    is maximised using the EM-algorithm after finding good starting values via a K-means
    clustering of the genetic data. Details can be found in: Foster, S. D.; Feutry,
    P.; Grewe, P. M.; Berry, O.; Hui, F. K. C. & Davies (2020) <doi:10.1111/1755-0998.12920>.'
  license_family: GPL2
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: stockR
# Title: Identifying Stocks in Genetic Data
# Version: 1.0.76
# Authors@R: c(person("Scott D.", "Foster", role = c("aut", "cre"), email = "scott.foster@data61.csiro.au"))
# Author: Scott D. Foster [aut, cre]
# Description: Provides a mixture model for clustering individuals (or sampling groups) into stocks based on their genetic profile. Here, sampling groups are individuals that are sure to come from the same stock (e.g. breeding adults or larvae). The mixture (log-)likelihood is maximised using the EM-algorithm after finding good starting values via a K-means clustering of the genetic data. Details can be found in: Foster, S. D.; Feutry, P.; Grewe, P. M.; Berry, O.; Hui, F. K. C. & Davies (2020) <doi:10.1111/1755-0998.12920>.
# License: GPL (>= 2)
# LinkingTo: Rcpp
# Imports: Rcpp, stats, gtools, parallel, RColorBrewer, methods
# Suggests: knitr
# VignetteBuilder: knitr
# NeedsCompilation: yes
# Packaged: 2023-04-26 06:52:04 UTC; fos085
# Maintainer: Scott D. Foster <scott.foster@data61.csiro.au>
# Depends: R (>= 2.10)
# Repository: CRAN
# Date/Publication: 2023-04-26 08:00:02 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
