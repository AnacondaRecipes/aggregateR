{% set version = '1.13.4' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-coxphf
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/coxphf_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/coxphf/coxphf_{{ version }}.tar.gz
  sha256: dceb134575a0275eea68ed191bf2635e85f86f0a45af5dfceda4fe3c1f9734d6

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('fortran') }}        # [not win]
    - {{ compiler('m2w64_fortran') }}  # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}make
    - {{ posix }}sed               # [win]
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-generics
    - r-survival
    - r-tibble

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-generics
    - r-survival
    - r-tibble

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('coxphf')"           # [not win]
    - "\"%R%\" -e \"library('coxphf')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://cemsiis.meduniwien.ac.at/kb/wf/software/statistische-software/fccoxphf/
  license: GPL-3
  summary: Implements Firth's penalized maximum likelihood bias reduction method  for Cox regression
    which has been shown to provide a solution in case of monotone likelihood (nonconvergence
    of likelihood function), see Heinze and Schemper (2001) and Heinze and Dunkler (2008).
    The program fits profile penalized likelihood confidence intervals which were proved
    to outperform Wald confidence intervals.
  license_family: GPL3
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-3'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: coxphf
# Version: 1.13.4
# Date: 2023-08-09
# Title: Cox Regression with Firth's Penalized Likelihood
# Authors@R: c(person("Georg", "Heinze", role=c("aut", "cre"), email="georg.heinze@meduniwien.ac.at"), person("Meinhard", "Ploner", role=c("aut")), person("Lena", "Jiricka", role=c("aut")), person("Gregor", "Steiner", role=c("aut")))
# Depends: R (>= 3.5.0)
# Imports: survival, generics, tibble
# Description: Implements Firth's penalized maximum likelihood bias reduction method  for Cox regression which has been shown to provide a solution in case of monotone likelihood (nonconvergence of likelihood function), see Heinze and Schemper (2001) and Heinze and Dunkler (2008). The program fits profile penalized likelihood confidence intervals which were proved to outperform Wald confidence intervals.
# License: GPL
# URL: https://cemsiis.meduniwien.ac.at/kb/wf/software/statistische-software/fccoxphf/
# RoxygenNote: 7.2.2
# LazyData: true
# BugReports: https://github.com/georgheinze/coxphf/issues/
# NeedsCompilation: yes
# Packaged: 2023-08-11 07:34:51 UTC; Gregor
# Author: Georg Heinze [aut, cre], Meinhard Ploner [aut], Lena Jiricka [aut], Gregor Steiner [aut]
# Maintainer: Georg Heinze <georg.heinze@meduniwien.ac.at>
# Repository: CRAN
# Date/Publication: 2023-08-11 12:53:52 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
