{% set version = '1.3' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-burstfin
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/BurStFin_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/BurStFin/BurStFin_{{ version }}.tar.gz
  sha256: 1068e489bd67a314a25c354899ad7fbc621a7177644c14ee6bd430ba885e5320

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{ posix }}zip               # [win]

  host:
    - r-base

  run:
    - r-base

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('BurStFin')"           # [not win]
    - "\"%R%\" -e \"library('BurStFin')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://www.burns-stat.com/
  license: Unlimited
  summary: A suite of functions for finance, including the estimation of variance matrices via
    a statistical factor model or Ledoit-Wolf shrinkage.
  license_family: MIT

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: BurStFin
# Version: 1.3
# Date: 2022-04-16
# Title: Burns Statistics Financial
# Author: Burns Statistics
# Maintainer: Pat Burns <patrick@burns-stat.com>
# Depends: stats
# Description: A suite of functions for finance, including the estimation of variance matrices via a statistical factor model or Ledoit-Wolf shrinkage.
# License: Unlimited
# URL: https://www.burns-stat.com/
# NeedsCompilation: no
# Packaged: 2022-04-18 11:53:41 UTC; alfre
# Repository: CRAN
# Date/Publication: 2022-04-18 12:12:29 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
