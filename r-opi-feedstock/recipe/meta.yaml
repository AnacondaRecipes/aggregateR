{% set version = '2.7' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-opi
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/OPI_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/OPI/OPI_{{ version }}.tar.gz
  sha256: f6639595f5acdb28e907129c9bb7eb94c0f945cc1393ec05ae9b547ea942b356

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{posix}}zip               # [win]

  host:
    - r-base

  run:
    - r-base

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('OPI')"           # [not win]
    - "\"%R%\" -e \"library('OPI')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: http://people.eng.unimelb.edu.au/aturpin/opi/index.html
  license: GPL-3
  summary: 'Implementation of the Open Perimetry Interface (OPI) for simulating and controlling
    visual field machines using R. The OPI is a standard for interfacing with visual
    field testing machines (perimeters). It specifies basic functions that allow many
    visual field tests to be constructed. As of October 2017 it is fully implemented
    on the Octopus 900 and partially on the Heidelberg Edge Perimeter, the Kowa AP 7000,
    the CrewT imo and the Centervue Compass. It also has a cousin: the R package ''visualFields'',
    which has tools for analysing and manipulating visual field data.'

  license_family: GPL3
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-3'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: OPI
# Type: Package
# Title: Open Perimetry Interface
# Version: 2.7
# Date: 2017-10-24
# Authors@R: c( person("Andrew","Turpin",email="aturpin@unimelb.edu.au",role=c("cre","aut","cph")),  person("David","Lawson",role=c("ctb","cph")),  person("Matthias","Muller",role="ctb"),  person("Jonathan","Dennis",role=c("ctb","cph")),  person("Astrid","Zeman",role="ctb"))
# Author: Andrew Turpin [cre, aut, cph], David Lawson [ctb, cph], Matthias Muller [ctb], Jonathan Dennis [ctb, cph], Astrid Zeman [ctb]
# Maintainer: Andrew Turpin <aturpin@unimelb.edu.au>
# Description: Implementation of the Open Perimetry Interface (OPI) for simulating and controlling visual field machines using R. The OPI is a standard for interfacing with visual field testing machines (perimeters). It specifies basic functions that allow many visual field tests to be constructed. As of October 2017 it is fully implemented on the Octopus 900 and partially on the Heidelberg Edge Perimeter, the Kowa AP 7000, the CrewT imo and the Centervue Compass. It also has a cousin: the R package 'visualFields', which has tools for analysing and manipulating visual field data.
# License: GPL-3
# URL: http://people.eng.unimelb.edu.au/aturpin/opi/index.html
# Depends: methods
# NeedsCompilation: no
# Packaged: 2017-10-25 05:44:45 UTC; aturpin
# Repository: CRAN
# Date/Publication: 2017-10-25 07:24:13 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
