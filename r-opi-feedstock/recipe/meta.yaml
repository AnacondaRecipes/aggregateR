{% set version = '2.11.0' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-opi
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/OPI_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/OPI/OPI_{{ version }}.tar.gz
  sha256: 7ccaca24ee22843bafda89f8455b73939b66a73672c4e5cccc6123b6d9341ff8

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-rfast
    - r-abind

  run:
    - r-base
    - r-rfast
    - r-abind

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('OPI')"           # [not win]
    - "\"%R%\" -e \"library('OPI')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://people.eng.unimelb.edu.au/aturpin/opi/index.html
  license: Apache License (== 2.0)
  summary: 'Implementation of the Open Perimetry Interface (OPI) for simulating and controlling
    visual field machines using R. The OPI is a standard for interfacing with visual
    field testing machines (perimeters) first started as an open source project with
    support of Haag-Streit in 2010. It specifies basic functions that allow many visual
    field tests to be constructed. As of February 2022 it is fully implemented on the
    Haag-Streit Octopus 900 with partial implementations on the Centervue Compass, Kowa
    AP 7000, Android phones and the CrewT IMO. It also has a cousin: the R package ''visualFields'',
    which has tools for analysing and manipulating visual field data.'
  license_family: APACHE

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: OPI
# Type: Package
# Title: Open Perimetry Interface
# Version: 2.11.0
# Date: 2023-08-21
# Authors@R: c( person("Andrew","Turpin",email="andrew.turpin@lei.org.au",role=c("cre","aut","cph")), person("David","Lawson",role=c("ctb","cph")), person("Matthias","Muller",role="ctb"), person("Jonathan","Dennis",role=c("ctb","cph")), person("Astrid","Zeman",role="ctb"), person("Ivan","Marin-Franch",role="ctb"))
# Author: Andrew Turpin [cre, aut, cph], David Lawson [ctb, cph], Matthias Muller [ctb], Jonathan Dennis [ctb, cph], Astrid Zeman [ctb], Ivan Marin-Franch [ctb]
# Maintainer: Andrew Turpin <andrew.turpin@lei.org.au>
# Description: Implementation of the Open Perimetry Interface (OPI) for simulating and controlling visual field machines using R. The OPI is a standard for interfacing with visual field testing machines (perimeters) first started as an open source project with support of Haag-Streit in 2010. It specifies basic functions that allow many visual field tests to be constructed. As of February 2022 it is fully implemented on the Haag-Streit Octopus 900 with partial implementations on the Centervue Compass, Kowa AP 7000, Android phones and the CrewT IMO. It also has a cousin: the R package 'visualFields', which has tools for analysing and manipulating visual field data.
# License: Apache License (== 2.0)
# URL: https://people.eng.unimelb.edu.au/aturpin/opi/index.html
# Depends: methods, Rfast, abind
# LazyData: true
# Encoding: UTF-8
# RoxygenNote: 7.2.2
# Collate: OPI-package.r opi.r compassClient.r displayClient.r daydreamClient.r dbTocd.r fourTwo.r full_threshold.r imoClient.r kowaAP7000Client.r mocs.r octopus600.r octopus900Client.r pix2deg.r phoneHMD.r QUESTP.r simDisplay.r simG.r simH.r simH_RT.r simNo.r simYes.r zest.r data-RtDbUnits.r data-RtSigmaUnits.r opiKineticStimulus.r opiStaticStimulus.r opiTemporalStimulus.r
# NeedsCompilation: no
# Packaged: 2023-08-21 06:18:07 UTC; aturpin
# Repository: CRAN
# Date/Publication: 2023-08-21 07:42:40 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
