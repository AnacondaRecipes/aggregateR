{% set version = '1.3.3' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-ddalpha
  version: {{ version|replace("-", "_") }}

source:
  fn: ddalpha_{{ version }}.tar.gz
  url:
    # - {{ cran_mirror }}/src/contrib/ddalpha_{{ version }}.tar.gz
    # - {{ cran_mirror }}/src/contrib/Archive/ddalpha/ddalpha_{{ version }}.tar.gz
    - https://cran.microsoft.com/src/contrib/Archive/ddalpha/ddalpha_{{ version }}.tar.gz
  sha256: 33bfb9098787ad622c64d7905d05155c2a4f63d60646407001d53ff133c4913c

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{ compiler('c') }}        # [not win]
    - {{ compiler('cxx') }}      # [not win]
    - {{ compiler('fortran') }}  # [not win]
    - {{native}}toolchain        # [win]
    - {{posix}}filesystem        # [win]
    - {{posix}}make

  host:
    - r-base
    - r-bh
    - r-mass
    - r-rcpp >=0.11.0
    - r-class
    - r-geometry
    - r-robustbase
    - r-sfsmisc

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-bh
    - r-mass
    - r-rcpp >=0.11.0
    - r-class
    - r-geometry
    - r-robustbase
    - r-sfsmisc

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('ddalpha')"           # [not win]
    - "\"%R%\" -e \"library('ddalpha')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=ddalpha
  license: GPL-2
  summary: Contains procedures for depth-based supervised learning, which are entirely non-parametric,
    in particular the DDalpha-procedure (Lange, Mosler and Mozharovskyi, 2014 <doi:10.1007/s00362-012-0488-4>).
    The training data sample is transformed by a statistical depth function to a compact
    low-dimensional space, where the final classification is done. It also offers an
    extension to functional data and routines for calculating certain notions of statistical
    depth functions. 50 multivariate and 5 functional classification problems are included.
  license_family: GPL2

extra:
  recipe-maintainers:
    - mingwandroid

# The original CRAN metadata for this package was:

# Package: ddalpha
# Type: Package
# Title: Depth-Based Classification and Calculation of Data Depth
# Version: 1.3.2
# Date: 2018-04-08
# Authors@R: c(person("Oleksii", "Pokotylo", role=c("aut", "cre"), email = "alexey.pokotylo@gmail.com"), person("Pavlo", "Mozharovskyi", role=c("aut"), email = "pavlo.mozharovskyi@ensai.fr"), person("Rainer", "Dyckerhoff", role=c("aut"), email = "rainer.dyckerhoff@statistik.uni-koeln.de"), person("Stanislav", "Nagy", role=c("aut"), email = "nagy@karlin.mff.cuni.cz"))
# SystemRequirements: C++11
# Depends: stats, utils, graphics, grDevices, MASS, class, robustbase, sfsmisc, geometry
# Imports: Rcpp (>= 0.11.0)
# LinkingTo: BH, Rcpp
# Description: Contains procedures for depth-based supervised learning, which are entirely non-parametric, in particular the DDalpha-procedure (Lange, Mosler and Mozharovskyi, 2014 <doi:10.1007/s00362-012-0488-4>). The training data sample is transformed by a statistical depth function to a compact low-dimensional space, where the final classification is done. It also offers an extension to functional data and routines for calculating certain notions of statistical depth functions. 50 multivariate and 5 functional classification problems are included.
# License: GPL-2
# NeedsCompilation: yes
# Packaged: 2018-04-08 18:00:41 UTC; User
# Author: Oleksii Pokotylo [aut, cre], Pavlo Mozharovskyi [aut], Rainer Dyckerhoff [aut], Stanislav Nagy [aut]
# Maintainer: Oleksii Pokotylo <alexey.pokotylo@gmail.com>
# Repository: CRAN
# Date/Publication: 2018-04-08 18:43:00 UTC

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
