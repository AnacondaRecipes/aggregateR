{% set version = '1.2' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-landscaper
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/landscapeR_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/landscapeR/landscapeR_{{ version }}.tar.gz
  sha256: 5eb23d9593e854214846aea2702861f9a1eee2b4587a24aa608bf96090aca5fe

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: knitr, rmarkdown
requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{posix}}filesystem        # [win]
    - {{posix}}make
    - {{posix}}sed               # [win]
    - {{posix}}coreutils         # [win]
    - {{posix}}zip               # [win]

  host:
    - r-base
    - r-rcpp
    - r-raster

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-rcpp
    - r-raster

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('landscapeR')"           # [not win]
    - "\"%R%\" -e \"library('landscapeR')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/dariomasante/landscapeR
  license: GPL-3
  summary: Simulates categorical maps on actual geographical realms, starting from either empty
    landscapes or landscapes provided by the user (e.g. land use maps). Allows to tweak
    or create landscapes while retaining a high degree of control on its features, without
    the hassle of specifying each location attribute. In this it differs from other
    tools which generate null or neutral landscapes in a theoretical space. The basic
    algorithm currently implemented uses a simple agent style/cellular automata growth
    model, with no rules (apart from areas of exclusion) and von Neumann neighbourhood
    (four cells, aka Rook case). Outputs are raster dataset exportable to any common
    GIS format.
  license_family: GPL3
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-3'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: landscapeR
# Title: Categorical Landscape Simulation Facility
# Version: 1.2
# Date: 2017-07-05
# Authors@R: c(person(given = "Dario", family = "Masante", role = c("aut", "cre"), email = "dario.masante@gmail.com"))
# Copyright: Natural Environment Research Council (NERC) and Centre for Ecology and Hydrology (CEH)
# URL: https://github.com/dariomasante/landscapeR
# BugReports: https://github.com/dariomasante/landscapeR/issues
# Imports: raster, Rcpp
# Suggests: knitr, rmarkdown
# Description: Simulates categorical maps on actual geographical realms, starting from either empty landscapes or landscapes provided by the user (e.g. land use maps). Allows to tweak or create landscapes while retaining a high degree of control on its features, without the hassle of specifying each location attribute. In this it differs from other tools which generate null or neutral landscapes in a theoretical space. The basic algorithm currently implemented uses a simple agent style/cellular automata growth model, with no rules (apart from areas of exclusion) and von Neumann neighbourhood (four cells, aka Rook case). Outputs are raster dataset exportable to any common GIS format.
# License: GPL (>= 3)
# LazyLoad: yes
# LazyData: TRUE
# NeedsCompilation: yes
# RoxygenNote: 6.0.1
# VignetteBuilder: knitr
# LinkingTo: Rcpp
# Packaged: 2017-07-05 12:46:53 UTC; masanda
# Author: Dario Masante [aut, cre]
# Maintainer: Dario Masante <dario.masante@gmail.com>
# Repository: CRAN
# Date/Publication: 2017-07-05 14:54:40 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
