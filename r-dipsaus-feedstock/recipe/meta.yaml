{% set version = '0.2.8' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-dipsaus
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/dipsaus_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/dipsaus/dipsaus_{{ version }}.tar.gz
  sha256: 1425a8752b3963f2f5354e26a51f23814030b0ab88ef877d1612f2bea92cabbe

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: knitr, promises, later, rmarkdown, testthat, microbenchmark, magrittr, yaml, future.callr, remotes, glue
requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}make
    - {{ posix }}sed               # [win]
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-r6
    - r-rcpp
    - r-base64enc
    - r-cli
    - r-digest
    - r-fastmap >=1.1.0
    - r-future
    - r-future.apply
    - r-jsonlite >=1.6
    - r-progressr
    - r-rlang >=0.4.0
    - r-rstudioapi >=0.11
    - r-shiny
    - r-stringr

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-r6
    - r-rcpp
    - r-base64enc
    - r-cli
    - r-digest
    - r-fastmap >=1.1.0
    - r-future
    - r-future.apply
    - r-jsonlite >=1.6
    - r-progressr
    - r-rlang >=0.4.0
    - r-rstudioapi >=0.11
    - r-shiny
    - r-stringr

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('dipsaus')"           # [not win]
    - "\"%R%\" -e \"library('dipsaus')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/dipterix/dipsaus, https://dipterix.org/dipsaus/
  license: GPL-3
  summary: 'Works as an "add-on" to packages like ''shiny'', ''future'', as well as ''rlang'',
    and provides utility functions. Just like dipping sauce adding flavors to potato
    chips or pita bread, ''dipsaus'' for data analysis and visualizations adds handy
    functions and enhancements to popular packages. The goal is to provide simple solutions
    that are frequently asked for online, such as how to synchronize ''shiny'' inputs
    without freezing the app, or how to get memory size on ''Linux'' or ''MacOS'' system.
    The enhancements roughly fall into these four categories: 1. ''shiny'' input widgets;
    2. high-performance computing using the ''future'' package; 3. modify R calls and
    convert among numbers, strings, and other objects. 4. utility functions to get system
    information such like CPU chip-set, memory limit, etc.'
  license_family: GPL3
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-3'

# The original CRAN metadata for this package was:

# Package: dipsaus
# Type: Package
# Title: A Dipping Sauce for Data Analysis and Visualizations
# Version: 0.2.8
# Authors@R: c( person("Zhengjia", "Wang", email = "dipterix.wang@gmail.com", role = c("aut", "cre")), person("John", "Magnotti", email = "John.Magnotti@pennmedicine.upenn.edu", role = c("ctb"), comment = "Contributed to `rutabaga.R`"), person("Xiang", "Zhang", email = "xiang.zhang@pennmedicine.upenn.edu", role = c("ctb"), comment = "Contributed to `rutabaga.R`") )
# Description: Works as an "add-on" to packages like 'shiny', 'future', as well as 'rlang', and provides utility functions. Just like dipping sauce adding flavors to potato chips or pita bread, 'dipsaus' for data analysis and visualizations adds handy functions and enhancements to popular packages. The goal is to provide simple solutions that are frequently asked for online, such as how to synchronize 'shiny' inputs without freezing the app, or how to get memory size on 'Linux' or 'MacOS' system. The enhancements roughly fall into these four categories: 1. 'shiny' input widgets; 2. high-performance computing using the 'future' package; 3. modify R calls and convert among numbers, strings, and other objects. 4. utility functions to get system information such like CPU chip-set, memory limit, etc.
# URL: https://github.com/dipterix/dipsaus, https://dipterix.org/dipsaus/
# BugReports: https://github.com/dipterix/dipsaus/issues
# License: GPL-3
# Encoding: UTF-8
# Language: en-US
# Depends: R (>= 3.5.0)
# Imports: utils, stats, graphics, grDevices, parallel, Rcpp, R6, shiny, cli, stringr, jsonlite (>= 1.6), future, future.apply, progressr, fastmap (>= 1.1.0), base64enc, digest, rlang (>= 0.4.0), rstudioapi (>= 0.11)
# Suggests: knitr, promises, later, rmarkdown, testthat, microbenchmark, magrittr, yaml, future.callr, remotes, glue
# RoxygenNote: 7.2.3
# LinkingTo: Rcpp
# VignetteBuilder: knitr
# NeedsCompilation: yes
# Packaged: 2023-07-03 19:27:14 UTC; dipterix
# Author: Zhengjia Wang [aut, cre], John Magnotti [ctb] (Contributed to `rutabaga.R`), Xiang Zhang [ctb] (Contributed to `rutabaga.R`)
# Maintainer: Zhengjia Wang <dipterix.wang@gmail.com>
# Repository: CRAN
# Date/Publication: 2023-07-03 20:00:03 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
