{% set version = '1.3' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-simplicialcubature
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/SimplicialCubature_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/SimplicialCubature/SimplicialCubature_{{ version }}.tar.gz
  sha256: 0bb6d4c4d2f47c52a7068f2cf31db64297b79e9f9dc8d296ff141463b95ab719

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{ posix }}zip               # [win]

  host:
    - r-base

  run:
    - r-base

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('SimplicialCubature')"           # [not win]
    - "\"%R%\" -e \"library('SimplicialCubature')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=SimplicialCubature
  license: GPL-2
  summary: Provides methods to integrate functions over m-dimensional simplices in n-dimensional
    Euclidean space.  There are exact methods for polynomials and adaptive methods for
    integrating an arbitrary function.
  license_family: GPL2
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: SimplicialCubature
# Type: Package
# Title: Integration of Functions Over Simplices
# Version: 1.3
# Date: 2021-01-04
# Author: John P. Nolan, with parts adapted from Fortran and matlab code by Alan Genz
# Maintainer: John P. Nolan  <jpnolan@american.edu>
# Depends: R (>= 3.0)
# Description: Provides methods to integrate functions over m-dimensional simplices in n-dimensional Euclidean space.  There are exact methods for polynomials and adaptive methods for integrating an arbitrary function.
# License: GPL (>= 2)
# NeedsCompilation: no
# Packaged: 2021-01-04 18:46:18 UTC; John
# Repository: CRAN
# Date/Publication: 2021-01-06 16:01:22 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
