{% set version = '1.0.4' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-xnomial
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/XNomial_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/XNomial/XNomial_{{ version }}.tar.gz
  sha256: e6237f79d96f02bb30af1cf055ae9f70541abba34ce045a9d4359b5304189dd7

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: knitr
requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}make
    - {{ posix }}sed               # [win]
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]

  host:
    - r-base

  run:
    - r-base
    - {{native}}gcc-libs         # [win]

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('XNomial')"           # [not win]
    - "\"%R%\" -e \"library('XNomial')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=XNomial
  license: GPL-3
  summary: Tests whether a set of counts fit a given expected ratio. For example, a genetic cross
    might be expected to produce four types in the relative frequencies of 9:3:3:1.
    To see whether a set of observed counts fits this expectation, one can examine all
    possible outcomes with xmulti() or a random sample of them with xmonte() and find
    the probability of an observation deviating from the expectation by at least as
    much as the observed. As a measure of deviation from the expected, one can use the
    log-likelihood ratio, the multinomial probability, or the classic chi-square statistic.
    A histogram of the test statistic can also be plotted and compared with the asymptotic
    curve.
  license_family: GPL3
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-3'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: XNomial
# Type: Package
# Title: Exact Goodness-of-Fit Test for Multinomial Data with Fixed Probabilities
# Version: 1.0.4
# Date: 2015-12-22
# Author: Bill Engels <wrengels@wisc.edu>
# Maintainer: Bill Engels <wrengels@wisc.edu>
# Description: Tests whether a set of counts fit a given expected ratio. For example, a genetic cross might be expected to produce four types in the relative frequencies of 9:3:3:1. To see whether a set of observed counts fits this expectation, one can examine all possible outcomes with xmulti() or a random sample of them with xmonte() and find the probability of an observation deviating from the expectation by at least as much as the observed. As a measure of deviation from the expected, one can use the log-likelihood ratio, the multinomial probability, or the classic chi-square statistic. A histogram of the test statistic can also be plotted and compared with the asymptotic curve.
# VignetteBuilder: knitr
# Depends: R (>= 2.14)
# Suggests: knitr
# NeedsCompilation: yes
# License: GPL
# RoxygenNote: 5.0.0
# Packaged: 2015-12-23 23:08:28 UTC; WRE
# Repository: CRAN
# Date/Publication: 2015-12-24 08:19:02

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
