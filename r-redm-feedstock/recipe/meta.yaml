{% set version = '0.7.2' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-redm
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/rEDM_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/rEDM/rEDM_{{ version }}.tar.gz
  sha256: 44d11d1bb937d69e54b1eae58b5f7658c663678f2301d0289fcbab615b44f1cc

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: knitr, rmarkdown, R.rsp, ggplot2
requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{posix}}filesystem        # [win]
    - {{posix}}make
    - {{posix}}sed               # [win]
    - {{posix}}coreutils         # [win]
    - {{posix}}zip               # [win]

  host:
    - r-base
    - r-rcpp >=0.11.5
    - r-rcppeigen

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-rcpp >=0.11.5
    - r-rcppeigen

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('rEDM')"           # [not win]
    - "\"%R%\" -e \"library('rEDM')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=rEDM
  license: file LICENSE
  summary: A new implementation of EDM algorithms based on research software previously developed
    for internal use in the Sugihara Lab (UCSD/SIO). Contains C++ compiled objects that
    use time delay embedding to perform state-space reconstruction and nonlinear forecasting
    and an R interface to those objects using 'Rcpp'. It supports both the simplex projection
    method from Sugihara & May (1990) <DOI:10.1038/344734a0> and the S-map algorithm
    in Sugihara (1994) <DOI:10.1098/rsta.1994.0106>. In addition, this package implements
    convergent cross mapping as described in Sugihara et al. (2012) <DOI:10.1126/science.1227079>
    and multiview embedding as described in Ye & Sugihara (2016) <DOI:10.1126/science.aag0863>.
  license_family: OTHER
  license_file:
    - LICENSE

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: rEDM
# Type: Package
# Title: Applications of Empirical Dynamic Modeling from Time Series
# Version: 0.7.2
# Maintainer: Sugihara Lab Maintainer <sugihara.lab.manager@gmail.com>
# Author: Hao Ye [aut, cre],  Adam Clark [aut],  Ethan Deyle [aut],  Steve Munch [aut],  Oliver Keyes [ctb],  Jun Cai [ctb],  Ethan White [ctb],  Jane Cowles [ctb],  James Stagge [ctb],  Yair Daon [ctb],  George Sugihara [ctb, ccp]
# Description: A new implementation of EDM algorithms based on research software previously developed for internal use in the Sugihara Lab (UCSD/SIO). Contains C++ compiled objects that use time delay embedding to perform state-space reconstruction and nonlinear forecasting and an R interface to those objects using 'Rcpp'. It supports both the simplex projection method from Sugihara & May (1990) <DOI:10.1038/344734a0> and the S-map algorithm in Sugihara (1994) <DOI:10.1098/rsta.1994.0106>. In addition, this package implements convergent cross mapping as described in Sugihara et al. (2012) <DOI:10.1126/science.1227079> and multiview embedding as described in Ye & Sugihara (2016) <DOI:10.1126/science.aag0863>.
# License: file LICENSE
# NeedsCompilation: yes
# Imports: Rcpp (>= 0.11.5), methods
# LinkingTo: Rcpp, RcppEigen
# RcppModules: lnlp_module, block_lnlp_module, ccm_module
# Suggests: knitr, rmarkdown, R.rsp, ggplot2
# VignetteBuilder: knitr, R.rsp
# RoxygenNote: 6.1.0
# Packaged: 2018-12-10 02:38:28 UTC; hye
# Repository: CRAN
# Date/Publication: 2018-12-10 14:40:03 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
