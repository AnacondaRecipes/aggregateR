{% set version = '1.2.2' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-multirng
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/MultiRNG_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/MultiRNG/MultiRNG_{{ version }}.tar.gz
  sha256: 54f8c65174b8f44f643b018bb90d4d161fe2833022006957191b44397daa072a

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{posix}}zip               # [win]

  host:
    - r-base

  run:
    - r-base

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('MultiRNG')"           # [not win]
    - "\"%R%\" -e \"library('MultiRNG')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=MultiRNG
  license: GPL-2 | GPL-3
  summary: 'Pseudo-random number generation for 11 multivariate distributions: Normal, t, Uniform,
    Bernoulli, Hypergeometric, Beta (Dirichlet), Multinomial, Dirichlet-Multinomial,
    Laplace, Wishart, and Inverted Wishart. The details of the method are explained
    in Demirtas (2004) <DOI:10.22237/jmasm/1099268340>.'

  license_family: GPL3
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-3'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: MultiRNG
# Type: Package
# Title: Multivariate Pseudo-Random Number Generation
# Version: 1.2.2
# Date: 2019-05-14
# Author: Hakan Demirtas, Rawan Allozi, Ran Gao
# Maintainer: Ran Gao <rgao8@uic.edu>
# Description: Pseudo-random number generation for 11 multivariate distributions: Normal, t, Uniform, Bernoulli, Hypergeometric, Beta (Dirichlet), Multinomial, Dirichlet-Multinomial, Laplace, Wishart, and Inverted Wishart. The details of the method are explained in Demirtas (2004) <DOI:10.22237/jmasm/1099268340>.
# License: GPL-2 | GPL-3
# NeedsCompilation: no
# Packaged: 2019-05-14 20:20:48 UTC; rangao
# Repository: CRAN
# Date/Publication: 2019-05-14 20:30:03 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
