{% set version = '1.1.0' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-knitrprogressbar
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/knitrProgressBar_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/knitrProgressBar/knitrProgressBar_{{ version }}.tar.gz
  sha256: 5b804e1a01386300b11e892f0ae71fb3e7163090770da3591d3666c7749665a3

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: knitr, rmarkdown, purrr, testthat, covr, mockr, withr, parallel
requirements:
  build:
    - {{posix}}zip               # [win]

  host:
    - r-base
    - r-r.oo
    - r-r6

  run:
    - r-base
    - r-r.oo
    - r-r6

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('knitrProgressBar')"           # [not win]
    - "\"%R%\" -e \"library('knitrProgressBar')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://rmflight.github.io/knitrProgressBar
  license: MIT
  summary: Provides a progress bar similar to 'dplyr' that can write progress out to a  variety
    of locations, including stdout(), stderr(), or from file(). Useful when using 'knitr'
    or 'rmarkdown', and you still want to see progress of calculations in the terminal.
  license_family: MIT
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/MIT'
    - LICENSE

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: knitrProgressBar
# Type: Package
# Title: Provides Progress Bars in 'knitr'
# Version: 1.1.0
# Authors@R: c(person(given = c("Robert", "M"), family = "Flight", email = "rflight79@gmail.com", role = c("aut", "cre")), person("Hadley", "Wickham", role = "ctb", comment = "Author of included dplyr fragments"), person("Romain", "Francois", role = "ctb", comment = "Author of included dplyr fragments"), person("Lionel", "Henry", role = "ctb", comment = "Author of included dplyr fragments"), person("Kirill", "Muller", role = "ctb", comment = "Author of included dplyr fragments"), person("RStudio", role = "cph", comment = "Copyright holder of included dplyr fragments"))
# Description: Provides a progress bar similar to 'dplyr' that can write progress out to a  variety of locations, including stdout(), stderr(), or from file(). Useful when using 'knitr' or 'rmarkdown', and you still want to see progress of calculations in the terminal.
# BugReports: https://github.com/rmflight/knitrProgressBar/issues
# URL: https://rmflight.github.io/knitrProgressBar
# License: MIT + file LICENSE
# Encoding: UTF-8
# LazyData: true
# Imports: R6, R.oo
# Suggests: knitr, rmarkdown, purrr, testthat, covr, mockr, withr, parallel
# VignetteBuilder: knitr
# RoxygenNote: 6.0.1
# NeedsCompilation: no
# Packaged: 2018-02-20 03:32:45 UTC; rmflight
# Author: Robert M Flight [aut, cre], Hadley Wickham [ctb] (Author of included dplyr fragments), Romain Francois [ctb] (Author of included dplyr fragments), Lionel Henry [ctb] (Author of included dplyr fragments), Kirill Muller [ctb] (Author of included dplyr fragments), RStudio [cph] (Copyright holder of included dplyr fragments)
# Maintainer: Robert M Flight <rflight79@gmail.com>
# Repository: CRAN
# Date/Publication: 2018-02-20 04:04:54 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
