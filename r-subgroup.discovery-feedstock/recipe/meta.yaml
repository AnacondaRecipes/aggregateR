{% set version = '0.2.1' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-subgroup.discovery
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/subgroup.discovery_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/subgroup.discovery/subgroup.discovery_{{ version }}.tar.gz
  sha256: 927bed5e0f1458b05feb1e68d0ea8b612f0caefa51988160f229bcc8aa9fdb97

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: testthat
requirements:
  build:
    - {{posix}}zip               # [win]

  host:
    - r-base

  run:
    - r-base

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('subgroup.discovery')"           # [not win]
    - "\"%R%\" -e \"library('subgroup.discovery')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/Jurian/subgroup.discovery
  license: GPL-3
  summary: 'Developed to assist in discovering interesting subgroups in high-dimensional data.
    The PRIM implementation is based on the 1998 paper "Bump hunting in high-dimensional
    data" by Jerome H. Friedman and Nicholas I. Fisher. <doi:10.1023/A:1008894516817>
    PRIM involves finding a set of "rules" which combined imply unusually large (or
    small) values of some other target variable. Specifically one tries to find a set
    of sub regions in which the target variable is substantially larger than overall
    mean. The objective of bump hunting in general is to find regions in the input (attribute/feature)
    space with relatively high (low) values for the target variable. The regions are
    described by simple rules of the type if: condition-1 and ... and condition-n then:
    estimated target value. Given the data (or a subset of the data), the goal is to
    produce a box B within which the target mean is as large as possible. There are
    many problems where finding such regions is of considerable practical interest.  Often
    these are problems where a decision maker can in a sense choose or select the values
    of the input variables so as to optimize the value of the target variable. In bump
    hunting it is customary to follow a so-called covering strategy. This means that
    the same box construction (rule induction) algorithm is applied sequentially to
    subsets of the data.'

  license_family: GPL3
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-3'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: subgroup.discovery
# Type: Package
# Title: Subgroup Discovery and Bump Hunting
# Version: 0.2.1
# Authors@R: c( person(given = "Jurian", family = "Baas", email = "j.baas@uu.nl", role = c("aut", "cre", "cph")), person(given = "Ad", family ="Feelders", email = "a.j.feelders@uu.nl", role = c("ctb")))
# Description: Developed to assist in discovering interesting subgroups in high-dimensional data. The PRIM implementation is based on the 1998 paper "Bump hunting in high-dimensional data" by Jerome H. Friedman and Nicholas I. Fisher. <doi:10.1023/A:1008894516817> PRIM involves finding a set of "rules" which combined imply unusually large (or small) values of some other target variable. Specifically one tries to find a set of sub regions in which the target variable is substantially larger than overall mean. The objective of bump hunting in general is to find regions in the input (attribute/feature) space with relatively high (low) values for the target variable. The regions are described by simple rules of the type if: condition-1 and ... and condition-n then: estimated target value. Given the data (or a subset of the data), the goal is to produce a box B within which the target mean is as large as possible. There are many problems where finding such regions is of considerable practical interest.  Often these are problems where a decision maker can in a sense choose or select the values of the input variables so as to optimize the value of the target variable. In bump hunting it is customary to follow a so-called covering strategy. This means that the same box construction (rule induction) algorithm is applied sequentially to subsets of the data.
# Depends: R (>= 2.10)
# License: GPL-3
# Encoding: UTF-8
# LazyData: true
# RoxygenNote: 6.1.1
# URL: https://github.com/Jurian/subgroup.discovery
# BugReports: https://github.com/Jurian/subgroup.discovery/issues
# Date: 2019-06-21
# Suggests: testthat
# NeedsCompilation: no
# Packaged: 2019-06-21 14:28:41 UTC; juria
# Author: Jurian Baas [aut, cre, cph], Ad Feelders [ctb]
# Maintainer: Jurian Baas <j.baas@uu.nl>
# Repository: CRAN
# Date/Publication: 2019-06-21 16:30:03 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
