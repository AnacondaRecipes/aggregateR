{% set version = '1.0' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-hornpa
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/hornpa_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/hornpa/hornpa_{{ version }}.tar.gz
  sha256: e4aeaec616c9a6725006caaf9bcf3100cafb64c4a5bc841fd4fbf13ca598db5d

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{posix}}zip               # [win]

  host:
    - r-base

  run:
    - r-base

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('hornpa')"           # [not win]
    - "\"%R%\" -e \"library('hornpa')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=hornpa
  license: GPL-3
  summary: A stand-alone function that generates a user specified number of random datasets and
    computes eigenvalues using the random datasets (i.e., implements Horn's [1965, Psychometrika]
    parallel analysis). Users then compare the resulting eigenvalues (the mean or the
    specified percentile) from the random datasets (i.e., eigenvalues resulting from
    noise) to the eigenvalues generated with the user's data. Can be used for both principal
    components analysis (PCA) and common/exploratory factor analysis (EFA). The output
    table shows how large eigenvalues can be as a result of merely using randomly generated
    datasets. If the user's own dataset has  actual eigenvalues greater than the corresponding
    eigenvalues, that lends support to retain that factor/component. In other words,
    if the i(th) eigenvalue from the actual data was larger than the percentile of the
    (i)th eigenvalue generated using randomly generated data, empirical support is provided
    to retain that factor/component.  Horn, J. (1965). A rationale and test for the
    number of factors in factor analysis. Psychometrika, 32, 179-185.
  license_family: GPL3
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-3'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: hornpa
# Type: Package
# Title: Horn's (1965) Test to Determine the Number of Components/Factors
# Version: 1.0
# Date: 2015-03-01
# Author: Francis Huang
# Maintainer: Francis Huang <huangf@missouri.edu>
# Description: A stand-alone function that generates a user specified number of random datasets and computes eigenvalues using the random datasets (i.e., implements Horn's [1965, Psychometrika] parallel analysis). Users then compare the resulting eigenvalues (the mean or the specified percentile) from the random datasets (i.e., eigenvalues resulting from noise) to the eigenvalues generated with the user's data. Can be used for both principal components analysis (PCA) and common/exploratory factor analysis (EFA). The output table shows how large eigenvalues can be as a result of merely using randomly generated datasets. If the user's own dataset has  actual eigenvalues greater than the corresponding eigenvalues, that lends support to retain that factor/component. In other words, if the i(th) eigenvalue from the actual data was larger than the percentile of the (i)th eigenvalue generated using randomly generated data, empirical support is provided to retain that factor/component.  Horn, J. (1965). A rationale and test for the number of factors in factor analysis. Psychometrika, 32, 179-185.
# License: GPL-3
# Packaged: 2015-03-02 14:29:58 UTC; huangf
# NeedsCompilation: no
# Repository: CRAN
# Date/Publication: 2015-03-03 01:01:34

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
