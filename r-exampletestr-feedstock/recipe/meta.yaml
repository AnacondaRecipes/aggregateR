{% set version = '1.7.1' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-exampletestr
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/exampletestr_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/exampletestr/exampletestr_{{ version }}.tar.gz
  sha256: 66dafc240737e468807beebab2b1b4df11e0fe7f4efec7e3e2b17ef8cdca7e1b

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: clipr (>= 0.7), covr, crayon, knitr, pacman, rmarkdown, spelling, testthat (>= 2.1)
requirements:
  build:
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-checkmate >=2.0
    - r-fs >=1.5
    - r-magrittr >=1.5
    - r-purrr
    - r-readr >=2.0
    - r-rlang >=0.4
    - r-roxygen2
    - r-rstudioapi >=0.4
    - r-strex >=1.4.2
    - r-stringr >=1.5
    - r-styler >=1.2
    - r-usethis >=2.0
    - r-withr >=2.1

  run:
    - r-base
    - r-checkmate >=2.0
    - r-fs >=1.5
    - r-magrittr >=1.5
    - r-purrr
    - r-readr >=2.0
    - r-rlang >=0.4
    - r-roxygen2
    - r-rstudioapi >=0.4
    - r-strex >=1.4.2
    - r-stringr >=1.5
    - r-styler >=1.2
    - r-usethis >=2.0
    - r-withr >=2.1

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('exampletestr')"           # [not win]
    - "\"%R%\" -e \"library('exampletestr')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://rorynolan.github.io/exampletestr/, https://github.com/rorynolan/exampletestr#readme
  license: GPL-3
  summary: Take the examples written in your documentation of functions and use them to create
    shells (skeletons which must be manually completed by the user) of test files to
    be tested with the 'testthat' package. Sort of like python 'doctests' for R.
  license_family: GPL3
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-3'

# The original CRAN metadata for this package was:

# Type: Package
# Package: exampletestr
# Title: Help for Writing Unit Tests Based on Function Examples
# Version: 1.7.1
# Authors@R: c(person(given = "Rory", family = "Nolan", role = c("aut", "cre"), email = "rorynoolan@gmail.com", comment = c(ORCID = "0000-0002-5239-4043")), person(given = "Sergi", family = "Padilla-Parra", role = "ths", email = "spadilla@well.ox.ac.uk", comment = c(ORCID = "0000-0002-8010-9481")), person(given = "Thomas", family = "Quinn", role = "rev", comment = c(ORCID = "0000-0003-0286-6329")), person(given = "Laurent", family = "Gatto", role = "rev", comment = c(ORCID = "0000-0002-1520-2268")))
# Maintainer: Rory Nolan <rorynoolan@gmail.com>
# Description: Take the examples written in your documentation of functions and use them to create shells (skeletons which must be manually completed by the user) of test files to be tested with the 'testthat' package. Sort of like python 'doctests' for R.
# License: GPL-3
# URL: https://rorynolan.github.io/exampletestr/, https://github.com/rorynolan/exampletestr#readme
# BugReports: https://github.com/rorynolan/exampletestr/issues
# Depends: R (>= 3.5)
# Imports: checkmate (>= 2.0), fs (>= 1.5), magrittr (>= 1.5), purrr, readr (>= 2.0), rlang (>= 0.4), roxygen2, rstudioapi (>= 0.4), strex (>= 1.4.2), stringr (>= 1.5), styler (>= 1.2), usethis (>= 2.0), withr (>= 2.1)
# Suggests: clipr (>= 0.7), covr, crayon, knitr, pacman, rmarkdown, spelling, testthat (>= 2.1)
# VignetteBuilder: knitr
# Config/testthat/edition: 2
# Encoding: UTF-8
# Language: en-US
# RoxygenNote: 7.2.3
# NeedsCompilation: no
# Packaged: 2023-06-11 02:53:48 UTC; rorynolan
# Author: Rory Nolan [aut, cre] (<https://orcid.org/0000-0002-5239-4043>), Sergi Padilla-Parra [ths] (<https://orcid.org/0000-0002-8010-9481>), Thomas Quinn [rev] (<https://orcid.org/0000-0003-0286-6329>), Laurent Gatto [rev] (<https://orcid.org/0000-0002-1520-2268>)
# Repository: CRAN
# Date/Publication: 2023-06-11 03:10:02 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
