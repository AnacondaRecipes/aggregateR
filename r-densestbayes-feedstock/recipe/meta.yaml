{% set version = '1.0-2.2' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-densestbayes
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/densEstBayes_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/densEstBayes/densEstBayes_{{ version }}.tar.gz
  sha256: 8361df9cd4b34fabfca19360bb680a8a3c68386a72bb69cf00dfa19daf97b679

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}sed               # [win]
    - {{ posix }}grep              # [win]
    - {{ posix }}autoconf
    - {{ posix }}automake          # [not win]
    - {{ posix }}automake-wrapper  # [win]
    - {{ posix }}pkg-config
    - {{ posix }}make
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-bh
    - r-mass
    - r-rcpp
    - r-rcpparmadillo
    - r-rcppeigen
    - r-rcppparallel
    - r-stanheaders
    - r-nlme
    - r-rstan
    - r-rstantools

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-bh
    - r-mass
    - r-rcpp
    - r-rcpparmadillo
    - r-rcppeigen
    - r-rcppparallel
    - r-stanheaders
    - r-nlme
    - r-rstan
    - r-rstantools

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('densEstBayes')"           # [not win]
    - "\"%R%\" -e \"library('densEstBayes')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=densEstBayes
  license: GPL-2
  summary: 'Bayesian density estimates for univariate continuous random samples are provided
    using the Bayesian inference engine paradigm. The engine options are: Hamiltonian
    Monte Carlo, the no U-turn sampler, semiparametric mean field variational Bayes
    and slice sampling. The methodology is described in Wand and Yu (2020) <arXiv:2009.06182>.'
  license_family: GPL2
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

# The original CRAN metadata for this package was:

# Package: densEstBayes
# Version: 1.0-2.2
# Date: 2021-08-19
# Title: Density Estimation via Bayesian Inference Engines
# Authors@R: person("Matt P.", "Wand", role = c("aut","cre"), email = "matt.wand@uts.edu.au", comment = c(ORCID = "0000-0003-2555-896X"))
# Maintainer: Matt P. Wand <matt.wand@uts.edu.au>
# Description: Bayesian density estimates for univariate continuous random samples are provided using the Bayesian inference engine paradigm. The engine options are: Hamiltonian Monte Carlo, the no U-turn sampler, semiparametric mean field variational Bayes and slice sampling. The methodology is described in Wand and Yu (2020) <arXiv:2009.06182>.
# License: GPL (>= 2)
# LazyData: true
# Biarch: true
# Depends: R (>= 3.5.0)
# Imports: MASS, nlme, Rcpp, methods, rstan, rstantools
# LinkingTo: BH, Rcpp, RcppArmadillo, RcppEigen, RcppParallel, StanHeaders, rstan
# SystemRequirements: GNU make
# NeedsCompilation: yes
# Packaged: 2023-03-30 08:37:26 UTC; andrew
# Author: Matt P. Wand [aut, cre] (<https://orcid.org/0000-0003-2555-896X>)
# Repository: CRAN
# Date/Publication: 2023-03-31 06:43:36 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
