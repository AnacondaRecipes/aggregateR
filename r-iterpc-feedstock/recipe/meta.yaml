{% set version = '0.4.1' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-iterpc
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/iterpc_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/iterpc/iterpc_{{ version }}.tar.gz
  sha256: 3da39831b5ada0bb809d206a326a974fa9e3126c5ab83088f889a05d725b0860

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: foreach, testthat, knitr, rmarkdown
requirements:
  build:
    - {{posix}}zip               # [win]

  host:
    - r-base
    - r-arrangements >=1.0.0
    - r-gmp >=0.5_12
    - r-iterators

  run:
    - r-base
    - r-arrangements >=1.0.0
    - r-gmp >=0.5_12
    - r-iterators

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('iterpc')"           # [not win]
    - "\"%R%\" -e \"library('iterpc')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://randy3k.github.io/iterpc
  license: GPL-2
  summary: 'Iterator for generating permutations and combinations. They can be either drawn with
    or without replacement, or with distinct/ non-distinct  items (multiset). The generated
    sequences are in lexicographical order  (dictionary order). The algorithms to generate
    permutations and combinations are  memory efficient. These iterative algorithms
    enable users to process all sequences  without putting all results in the memory
    at the same time.  The algorithms are written in C/C++ for faster performance. Note:
    ''iterpc'' is no longer being maintained. Users are recommended to switch to ''arrangements''.'

  license_family: GPL2
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: iterpc
# Type: Package
# Title: Efficient Iterator for Permutations and Combinations
# Version: 0.4.1
# Date: 2018-08-08
# Author: Randy Lai [aut, cre]
# Maintainer: Randy Lai <randy.cs.lai@gmail.com>
# Authors@R: c( person("Randy", "Lai", , "randy.cs.lai@gmail.com", role = c("aut", "cre")) )
# Description: Iterator for generating permutations and combinations. They can be either drawn with or without replacement, or with distinct/ non-distinct  items (multiset). The generated sequences are in lexicographical order  (dictionary order). The algorithms to generate permutations and combinations are  memory efficient. These iterative algorithms enable users to process all sequences  without putting all results in the memory at the same time.  The algorithms are written in C/C++ for faster performance. Note: 'iterpc' is no longer being maintained. Users are recommended to switch to 'arrangements'.
# URL: https://randy3k.github.io/iterpc
# License: GPL-2
# Depends: R (>= 3.0.0)
# Imports: iterators, gmp (>= 0.5-12), arrangements (>= 1.0.0)
# Suggests: foreach, testthat, knitr, rmarkdown
# ByteCompile: yes
# RoxygenNote: 6.1.0
# VignetteBuilder: knitr
# NeedsCompilation: no
# Packaged: 2018-08-08 20:45:34 UTC; randy
# Repository: CRAN
# Date/Publication: 2018-08-08 21:10:03 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
