{% set version = '3.1.3' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-mable
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/mable_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/mable/mable_{{ version }}.tar.gz
  sha256: 80d4937751e0b4c39a48f87f26cdde84d9970bfd3a5d3d02e3b8e10809d090c6

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: mixtools, ICsurv, knitr, rmarkdown, pbapply, markdown, ks, multimode
requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}make
    - {{ posix }}sed               # [win]
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-doparallel
    - r-foreach
    - r-icenreg
    - r-iterators
    - r-survival

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-doparallel
    - r-foreach
    - r-icenreg
    - r-iterators
    - r-survival

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('mable')"           # [not win]
    - "\"%R%\" -e \"library('mable')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=mable
  license: LGPL (>= 2.0, < 3)
  summary: 'Fit data from a continuous population with a smooth density on finite interval by
    an approximate Bernstein polynomial model which is a mixture of certain beta distributions
    and find maximum approximate Bernstein likelihood estimator of the unknown coefficients.
    Consequently, maximum likelihood estimates of the unknown density, distribution
    functions, and more can be obtained. If the support of the density is not the unit
    interval then transformation can be applied. This is an implementation of the methods
    proposed by the author of this package published in the Journal of Nonparametric
    Statistics: Guan (2016) <doi:10.1080/10485252.2016.1163349> and Guan (2017) <doi:10.1080/10485252.2017.1374384>.
    For data with covariates, under some semiparametric regression models such as Cox
    proportional hazards model and the accelerated failure time model, the baseline
    survival function can be estimated smoothly based on general interval censored data.'
  license_family: LGPL

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: mable
# Title: Maximum Approximate Bernstein/Beta Likelihood Estimation
# Version: 3.1.3
# Date: 2023-08-23
# Author: Zhong Guan [aut, cre]
# Maintainer: Zhong Guan <zguan@iusb.edu>
# Depends: R (>= 3.5.0)
# Description: Fit data from a continuous population with a smooth density on finite interval by an approximate Bernstein polynomial model which is a mixture of certain beta distributions and find maximum approximate Bernstein likelihood estimator of the unknown coefficients. Consequently, maximum likelihood estimates of the unknown density, distribution functions, and more can be obtained. If the support of the density is not the unit interval then transformation can be applied. This is an implementation of the methods proposed by the author of this package published in the Journal of Nonparametric Statistics: Guan (2016) <doi:10.1080/10485252.2016.1163349> and Guan (2017) <doi:10.1080/10485252.2017.1374384>. For data with covariates, under some semiparametric regression models such as Cox proportional hazards model and the accelerated failure time model, the baseline survival function can be estimated smoothly based on general interval censored data.
# License: LGPL (>= 2.0, < 3)
# LazyData: true
# Encoding: UTF-8
# Imports: survival, graphics, stats, icenReg, parallel, doParallel, foreach, iterators, tcltk
# Suggests: mixtools, ICsurv, knitr, rmarkdown, pbapply, markdown, ks, multimode
# BuildVignettes: true
# VignetteBuilder: knitr, rmarkdown
# RoxygenNote: 7.2.3
# NeedsCompilation: yes
# Packaged: 2023-08-24 15:51:46 UTC; zguan
# Repository: CRAN
# Date/Publication: 2023-08-24 16:20:02 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
