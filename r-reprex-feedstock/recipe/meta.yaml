{% set version = '2.0.2' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-reprex
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/reprex_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/reprex/reprex_{{ version }}.tar.gz
  sha256: a85b16e26112364a65c886efea050df08c17aadf1411fd14ec27d9ef13e87092

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: covr, fortunes, miniUI, mockr, rprojroot, sessioninfo, shiny, spelling, styler (>= 1.2.0), testthat (>= 3.0.2)
requirements:
  build:
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-callr >=3.6.0
    - r-cli >=3.2.0
    - r-clipr >=0.4.0
    - r-fs
    - r-glue
    - r-knitr >=1.23
    - r-lifecycle
    - r-rlang >=1.0.0
    - r-rmarkdown
    - r-rstudioapi
    - r-withr >=2.3.0

  run:
    - r-base
    - r-callr >=3.6.0
    - r-cli >=3.2.0
    - r-clipr >=0.4.0
    - r-fs
    - r-glue
    - r-knitr >=1.23
    - r-lifecycle
    - r-rlang >=1.0.0
    - r-rmarkdown
    - r-rstudioapi
    - r-withr >=2.3.0

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('reprex')"           # [not win]
    - "\"%R%\" -e \"library('reprex')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://reprex.tidyverse.org, https://github.com/tidyverse/reprex#readme
  license: MIT
  summary: Convenience wrapper that uses the 'rmarkdown' package to render small snippets of
    code to target formats that include both code and output.  The goal is to encourage
    the sharing of small, reproducible, and runnable examples on code-oriented websites,
    such as <https://stackoverflow.com> and <https://github.com>, or in email. The user's
    clipboard is the default source of input code and the default target for rendered
    output. 'reprex' also extracts clean, runnable R code from various common formats,
    such as copy/paste from an R session.
  license_family: MIT
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/MIT'
    - LICENSE

extra:
  recipe-maintainers:
    - mingwandroid

# The original CRAN metadata for this package was:

# Package: reprex
# Title: Prepare Reproducible Example Code via the Clipboard
# Version: 2.0.2
# Authors@R: c( person("Jennifer", "Bryan", , "jenny@rstudio.com", role = c("aut", "cre"), comment = c(ORCID = "0000-0002-6983-2759")), person("Jim", "Hester", , "james.hester@rstudio.com", role = "aut", comment = c(ORCID = "0000-0002-2739-7082")), person("David", "Robinson", , "admiral.david@gmail.com", role = "aut"), person("Hadley", "Wickham", , "hadley@rstudio.com", role = "aut", comment = c(ORCID = "0000-0003-4757-117X")), person("Christophe", "Dervieux", , "cderv@rstudio.com", role = "aut", comment = c(ORCID = "0000-0003-4474-2498")), person("RStudio", role = c("cph", "fnd")) )
# Description: Convenience wrapper that uses the 'rmarkdown' package to render small snippets of code to target formats that include both code and output.  The goal is to encourage the sharing of small, reproducible, and runnable examples on code-oriented websites, such as <https://stackoverflow.com> and <https://github.com>, or in email. The user's clipboard is the default source of input code and the default target for rendered output. 'reprex' also extracts clean, runnable R code from various common formats, such as copy/paste from an R session.
# License: MIT + file LICENSE
# URL: https://reprex.tidyverse.org, https://github.com/tidyverse/reprex#readme
# BugReports: https://github.com/tidyverse/reprex/issues
# Depends: R (>= 3.4)
# Imports: callr (>= 3.6.0), cli (>= 3.2.0), clipr (>= 0.4.0), fs, glue, knitr (>= 1.23), lifecycle, rlang (>= 1.0.0), rmarkdown, rstudioapi, utils, withr (>= 2.3.0)
# Suggests: covr, fortunes, miniUI, mockr, rprojroot, sessioninfo, shiny, spelling, styler (>= 1.2.0), testthat (>= 3.0.2)
# VignetteBuilder: knitr
# Config/Needs/website: dplyr, tidyverse/tidytemplate
# Config/testthat/edition: 3
# Encoding: UTF-8
# Language: en-US
# RoxygenNote: 7.2.1
# SystemRequirements: pandoc (>= 2.0) - http://pandoc.org
# NeedsCompilation: no
# Packaged: 2022-08-17 05:15:00 UTC; jenny
# Author: Jennifer Bryan [aut, cre] (<https://orcid.org/0000-0002-6983-2759>), Jim Hester [aut] (<https://orcid.org/0000-0002-2739-7082>), David Robinson [aut], Hadley Wickham [aut] (<https://orcid.org/0000-0003-4757-117X>), Christophe Dervieux [aut] (<https://orcid.org/0000-0003-4474-2498>), RStudio [cph, fnd]
# Maintainer: Jennifer Bryan <jenny@rstudio.com>
# Repository: CRAN
# Date/Publication: 2022-08-17 07:40:05 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
