{% set version = '3.13' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-dynclust
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/DynClust_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/DynClust/DynClust_{{ version }}.tar.gz
  sha256: f5e10ef95f90addc26d99f737544ef0291c96b5bf92f9607c8875c49bda01f08

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{posix}}zip               # [win]

  host:
    - r-base

  run:
    - r-base

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('DynClust')"           # [not win]
    - "\"%R%\" -e \"library('DynClust')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=DynClust
  license: MIT
  summary: DynClust is a two-stage procedure for the denoising and clustering of stack of noisy
    images acquired over time. Clustering only assumes that the data contain an unknown
    but small number of dynamic features. The method first denoises the signals using
    local spatial and full temporal information. The clustering step uses the previous
    output to aggregate voxels based on the knowledge of their spatial neighborhood.
    Both steps use a single keytool based on the statistical comparison of the difference
    of two signals with the null signal. No assumption is therefore required on the
    shape of the signals. The data are assumed to be normally distributed (or at least
    follow a symmetric distribution) with a known constant variance. Working pixelwise,
    the method can be time-consuming depending on the size of the data-array but harnesses
    the power of multicore cpus.
  license_family: MIT
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/MIT'
    - LICENSE

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: DynClust
# Type: Package
# Title: Denoising and clustering for dynamical image sequence (2D or 3D)+T
# Version: 3.13
# Date: 2014-02-18
# Author: Yves Rozenholc (MAP5, Univ. Paris Descartes), Christophe Pouzat (MAP5, Univ. Paris Descartes) and Tiffany Lieury (Cerebral Physiology lab, Univ. Paris Descartes)
# Maintainer: Yves Rozenholc <yves.rozenholc@parisdescartes.fr>
# Description: DynClust is a two-stage procedure for the denoising and clustering of stack of noisy images acquired over time. Clustering only assumes that the data contain an unknown but small number of dynamic features. The method first denoises the signals using local spatial and full temporal information. The clustering step uses the previous output to aggregate voxels based on the knowledge of their spatial neighborhood. Both steps use a single keytool based on the statistical comparison of the difference of two signals with the null signal. No assumption is therefore required on the shape of the signals. The data are assumed to be normally distributed (or at least follow a symmetric distribution) with a known constant variance. Working pixelwise, the method can be time-consuming depending on the size of the data-array but harnesses the power of multicore cpus.
# License: MIT + file LICENSE
# Depends: R (>= 2.10), parallel
# Packaged: 2014-04-25 00:04:55 UTC; rozen
# NeedsCompilation: no
# Repository: CRAN
# Date/Publication: 2014-04-25 11:02:51

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
