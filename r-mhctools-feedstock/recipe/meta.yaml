{% set version = '1.2.1' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-mhctools
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/MHCtools_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/MHCtools/MHCtools_{{ version }}.tar.gz
  sha256: 6ddd648b462f910d69bf7077e58269f83e82d175a4d0ab228808a2b64307c7d5

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{posix}}zip               # [win]

  host:
    - r-base
    - r-rlist >=0.4.6.1

  run:
    - r-base
    - r-rlist >=0.4.6.1

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('MHCtools')"           # [not win]
    - "\"%R%\" -e \"library('MHCtools')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=MHCtools
  license: MIT
  summary: Ten tools for analysis of major histocompatibility complex (MHC) data in non- model
    species. The functions are tailored for amplicon data sets that have been  filtered
    using the 'dada2' method (for more information visit  <https://benjjneb.github.io/dada2>),
    but even other data sets can be analyzed,  if the data tables are formatted according
    to the description in each function. The ReplMatch() function matches replicates
    in data sets in order to evaluate  genotyping success. The GetReplTable() and GetReplStats()
    functions perform such an evaluation. The HpltFind() function infers putative haplotypes
    from families in the data  set.  The GetHpltTable() and GetHpltStats() functions
    evaluate the accuracy of  the haplotype inference. The PapaDiv() function compares
    parent pairs in the data set and calculate their  joint MHC diversity, taking into
    account sequence variants that occur in both  parents. The CalcPdist() function
    calculates the p-distances from pairwise comparisons of all  sequences in a data
    set, and mean p-distances of all pairwise comparisons within each  sample in a data
    set. The function includes the options to specify which codons to  compare and to
    calculate amino acid p-distances. The CreateFas() function creates a fasta file
    with all the sequences in the data  set. The CreateSamplesFas() function creates
    a fasta file for each sample in the data  set.
  license_family: MIT
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/MIT'
    - LICENSE

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: MHCtools
# Type: Package
# Title: Analysis of MHC Data in Non-Model Species
# Version: 1.2.1
# Authors@R: person("Jacob", "Roved", email = "jacob.roved@biol.lu.se",  role = c("aut", "cre"))
# Description: Ten tools for analysis of major histocompatibility complex (MHC) data in non- model species. The functions are tailored for amplicon data sets that have been  filtered using the 'dada2' method (for more information visit  <https://benjjneb.github.io/dada2>), but even other data sets can be analyzed,  if the data tables are formatted according to the description in each function. The ReplMatch() function matches replicates in data sets in order to evaluate  genotyping success. The GetReplTable() and GetReplStats() functions perform such an evaluation. The HpltFind() function infers putative haplotypes from families in the data  set.  The GetHpltTable() and GetHpltStats() functions evaluate the accuracy of  the haplotype inference. The PapaDiv() function compares parent pairs in the data set and calculate their  joint MHC diversity, taking into account sequence variants that occur in both  parents. The CalcPdist() function calculates the p-distances from pairwise comparisons of all  sequences in a data set, and mean p-distances of all pairwise comparisons within each  sample in a data set. The function includes the options to specify which codons to  compare and to calculate amino acid p-distances. The CreateFas() function creates a fasta file with all the sequences in the data  set. The CreateSamplesFas() function creates a fasta file for each sample in the data  set.
# License: MIT + file LICENSE
# Encoding: UTF-8
# LazyData: true
# Imports: rlist (>= 0.4.6.1), utils
# RoxygenNote: 6.1.1
# NeedsCompilation: no
# Packaged: 2019-08-09 16:53:05 UTC; jacobroved
# Author: Jacob Roved [aut, cre]
# Maintainer: Jacob Roved <jacob.roved@biol.lu.se>
# Repository: CRAN
# Date/Publication: 2019-08-11 15:20:02 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
