{% set version = '1.7.17' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-wsrf
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/wsrf_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/wsrf/wsrf_{{ version }}.tar.gz
  sha256: 5f94c3291d11595d841306f7e22ccad1250a4187435f0eb12e0a47e199dbb43e

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: knitr (>= 1.5), party (>= 1.0.7), randomForest (>= 4.6.7), rattle.data (>= 1.0.2), stringr (>= 0.6.2)
requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{posix}}filesystem        # [win]
    - {{posix}}make
    - {{posix}}sed               # [win]
    - {{posix}}coreutils         # [win]
    - {{posix}}zip               # [win]

  host:
    - r-base
    - r-rcpp >=0.10.2

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-rcpp >=0.10.2

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('wsrf')"           # [not win]
    - "\"%R%\" -e \"library('wsrf')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/SimonYansenZhao/wsrf, http://togaware.com
  license: GPL-2
  summary: ' A parallel implementation of Weighted Subspace Random Forest.  The Weighted Subspace
    Random Forest algorithm was proposed in the International Journal of Data Warehousing
    and Mining by Baoxun Xu, Joshua Zhexue Huang, Graham Williams, Qiang Wang, and Yunming
    Ye (2012) <DOI:10.4018/jdwm.2012040103>.  The algorithm can classify very high-dimensional
    data with random forests built using small subspaces.  A novel variable weighting
    method is used for variable subspace selection in place of the traditional random
    variable sampling.This new approach is particularly useful in building models from
    high-dimensional data.'

  license_family: GPL2
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: wsrf
# Type: Package
# Title: Weighted Subspace Random Forest for Classification
# Version: 1.7.17
# Date: 2017-09-25
# Authors@R:  c(person(given = "Qinghan", family = "Meng", email = "qinghan.meng@gmail.com", role="aut"), person(given = "He", family = "Zhao", email = "Simon.Yansen.Zhao@gmail.com", role = c("aut", "cre")), person(given = c("Graham", "J."), family = "Williams", email = "graham.williams@togaware.com", role = "aut"), person(given = "Junchao", family = "Lv", role = "aut"), person(given = "Baoxun", family = "Xu", role = "aut"), person(given = c("Joshua", "Zhexue"), family = "Huang", email = "zx.huang@szu.edu.cn", role = "aut"))
# Description:  A parallel implementation of Weighted Subspace Random Forest.  The Weighted Subspace Random Forest algorithm was proposed in the International Journal of Data Warehousing and Mining by Baoxun Xu, Joshua Zhexue Huang, Graham Williams, Qiang Wang, and Yunming Ye (2012) <DOI:10.4018/jdwm.2012040103>.  The algorithm can classify very high-dimensional data with random forests built using small subspaces.  A novel variable weighting method is used for variable subspace selection in place of the traditional random variable sampling.This new approach is particularly useful in building models from high-dimensional data.
# License: GPL (>= 2)
# URL: https://github.com/SimonYansenZhao/wsrf, http://togaware.com
# BugReports: https://github.com/SimonYansenZhao/wsrf/issues
# Depends: parallel, R (>= 3.3.0), Rcpp (>= 0.10.2), stats
# LinkingTo: Rcpp
# Suggests: knitr (>= 1.5), party (>= 1.0.7), randomForest (>= 4.6.7), rattle.data (>= 1.0.2), stringr (>= 0.6.2)
# VignetteBuilder: knitr
# NeedsCompilation: yes
# SystemRequirements: C++11
# Classification/ACM-2012: Computing methodologies ~ Classification and regression trees, Computing methodologies ~ Supervised learning by classification, Computing methodologies ~ Massively parallel and high-performance simulations, Computing methodologies ~ Distributed simulation
# Packaged: 2017-09-25 08:23:10 UTC; simon
# Author: Qinghan Meng [aut], He Zhao [aut, cre], Graham J. Williams [aut], Junchao Lv [aut], Baoxun Xu [aut], Joshua Zhexue Huang [aut]
# Maintainer: He Zhao <Simon.Yansen.Zhao@gmail.com>
# Repository: CRAN
# Date/Publication: 2017-09-25 08:47:28 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
