{% set version = '1.5.5' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-rtkore
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/rtkore_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/rtkore/rtkore_{{ version }}.tar.gz
  sha256: 421873065b839a8d993b6904ca92e6afb699b9d4c87d436f58b0ae476004336b

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}make
    - {{ posix }}sed               # [win]
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-rcpp >=0.12.0
    - r-inline

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-rcpp >=0.12.0
    - r-inline

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('rtkore')"           # [not win]
    - "\"%R%\" -e \"library('rtkore')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: http://www.stkpp.org
  license: GPL-2
  summary: '''STK++'' <http://www.stkpp.org> is a collection of C++ classes for statistics, clustering,
    linear algebra, arrays (with an ''Eigen''-like API), regression, dimension reduction,
    etc. The integration of the library to ''R'' is using ''Rcpp''. The ''rtkore'' package
    includes the header files from the ''STK++'' core library. All files contain only
    template classes and/or inline functions. ''STK++'' is licensed under the GNU LGPL
    version 2 or later. ''rtkore'' (the ''stkpp'' integration into ''R'') is licensed
    under the GNU GPL version 2 or later. See file LICENSE.note for details.'
  license_family: GPL2
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: rtkore
# Type: Package
# Title: 'STK++' Core Library Integration to 'R' using 'Rcpp'
# Version: 1.5.5
# Encoding: UTF-8
# Date: 2018-09-25
# Authors@R: c( person("Serge", "Iovleff", role=c("aut","cre"), email="serge.iovleff@stkpp.org") , person("Parmeet", "Bhatia", role="ctb", email="bhatia.parmeet@gmail.com"))
# Copyright: Inria, University Lille 1 and specifically inst/COPYRIGHTS for the STK++ library
# Maintainer: Serge Iovleff <serge.iovleff@stkpp.org>
# Description: 'STK++' <http://www.stkpp.org> is a collection of C++ classes for statistics, clustering, linear algebra, arrays (with an 'Eigen'-like API), regression, dimension reduction, etc. The integration of the library to 'R' is using 'Rcpp'. The 'rtkore' package includes the header files from the 'STK++' core library. All files contain only template classes and/or inline functions. 'STK++' is licensed under the GNU LGPL version 2 or later. 'rtkore' (the 'stkpp' integration into 'R') is licensed under the GNU GPL version 2 or later. See file LICENSE.note for details.
# License: GPL (>= 2)
# BugReports: https://sourceforge.net/projects/stkpp/
# LazyLoad: yes
# Depends: R (>= 3.2.0), Rcpp (>= 0.12.0)
# Imports: inline
# LinkingTo: Rcpp
# URL: http://www.stkpp.org
# NeedsCompilation: yes
# SystemRequirements: GNU make
# Collate: 'rtkore.R' 'rtkoreFlags.R' 'inlineCxxPlugin.R'
# RoxygenNote: 6.1.0
# Packaged: 2018-10-01 12:45:01 UTC; iovleff
# Author: Serge Iovleff [aut, cre], Parmeet Bhatia [ctb]
# Repository: CRAN
# Date/Publication: 2018-10-01 14:10:02 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
