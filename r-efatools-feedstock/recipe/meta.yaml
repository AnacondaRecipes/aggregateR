{% set version = '0.4.4' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-efatools
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/EFAtools_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/EFAtools/EFAtools_{{ version }}.tar.gz
  sha256: 82d7b10c0cb8af7498504d4972ab97abd70b6be21408125043a8b1d9d4aef3bb

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: testthat, knitr, rmarkdown, microbenchmark
requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}make
    - {{ posix }}sed               # [win]
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-gparotation
    - r-rcpp
    - r-rcpparmadillo
    - r-checkmate
    - r-cli
    - r-crayon
    - r-dplyr
    - r-future
    - r-future.apply
    - r-ggplot2
    - r-lavaan
    - r-magrittr
    - r-progress
    - r-progressr
    - r-psych
    - r-rlang
    - r-stringr
    - r-tibble
    - r-tidyr
    - r-viridislite

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-gparotation
    - r-rcpp
    - r-rcpparmadillo
    - r-checkmate
    - r-cli
    - r-crayon
    - r-dplyr
    - r-future
    - r-future.apply
    - r-ggplot2
    - r-lavaan
    - r-magrittr
    - r-progress
    - r-progressr
    - r-psych
    - r-rlang
    - r-stringr
    - r-tibble
    - r-tidyr
    - r-viridislite

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('EFAtools')"           # [not win]
    - "\"%R%\" -e \"library('EFAtools')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/mdsteiner/EFAtools
  license: GPL-3
  summary: Provides functions to perform exploratory factor analysis (EFA) procedures and compare
    their solutions. The goal is to provide state-of-the-art factor retention methods
    and a high degree of flexibility in the EFA procedures. This way, for example, implementations
    from R 'psych' and 'SPSS' can be compared. Moreover, functions for Schmid-Leiman
    transformation and the computation of omegas are provided. To speed up the analyses,
    some of the iterative procedures, like principal axis factoring (PAF), are implemented
    in C++.
  license_family: GPL3
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-3'

# The original CRAN metadata for this package was:

# Package: EFAtools
# Title: Fast and Flexible Implementations of Exploratory Factor Analysis Tools
# Version: 0.4.4
# Authors@R: c(person(given = "Markus", family = "Steiner", role = c("aut", "cre"), email = "markus.d.steiner@gmail.com"), person(given = "Silvia", family = "Grieder", role = "aut", email = "silvia.grieder@gmail.com"), person(given = "William", family = "Revelle", role = "ctb"), person(given = "Max", family = "Auerswald", role = "ctb"), person(given = "Morten", family = "Moshagen", role = "ctb"), person(given = "John", family = "Ruscio", role = "ctb"), person(given = "Brendan", family = "Roche", role = "ctb"), person(given = "Urbano", family = "Lorenzo-Seva", role = "ctb"), person(given = "David", family = "Navarro-Gonzalez", role = "ctb"))
# Description: Provides functions to perform exploratory factor analysis (EFA) procedures and compare their solutions. The goal is to provide state-of-the-art factor retention methods and a high degree of flexibility in the EFA procedures. This way, for example, implementations from R 'psych' and 'SPSS' can be compared. Moreover, functions for Schmid-Leiman transformation and the computation of omegas are provided. To speed up the analyses, some of the iterative procedures, like principal axis factoring (PAF), are implemented in C++.
# Depends: R (>= 3.6.0)
# License: GPL-3
# Encoding: UTF-8
# LazyData: true
# URL: https://github.com/mdsteiner/EFAtools
# BugReports: https://github.com/mdsteiner/EFAtools/issues
# RoxygenNote: 7.2.3
# Imports: lavaan, psych, crayon, stringr, stats, ggplot2, tibble, magrittr, dplyr, cli, Rcpp, viridisLite, graphics, future.apply, future, GPArotation, checkmate, tidyr, progressr, progress, rlang
# LinkingTo: Rcpp, RcppArmadillo
# Suggests: testthat, knitr, rmarkdown, microbenchmark
# VignetteBuilder: knitr
# NeedsCompilation: yes
# Packaged: 2023-01-05 10:09:57 UTC; ma1159938
# Author: Markus Steiner [aut, cre], Silvia Grieder [aut], William Revelle [ctb], Max Auerswald [ctb], Morten Moshagen [ctb], John Ruscio [ctb], Brendan Roche [ctb], Urbano Lorenzo-Seva [ctb], David Navarro-Gonzalez [ctb]
# Maintainer: Markus Steiner <markus.d.steiner@gmail.com>
# Repository: CRAN
# Date/Publication: 2023-01-06 14:50:40 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
