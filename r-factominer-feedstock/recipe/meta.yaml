{% set version = '2.9' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-factominer
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/FactoMineR_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/FactoMineR/FactoMineR_{{ version }}.tar.gz
  sha256: 882698d399a641c80f63ffae69c334fc5306238fb8592e9b760e17d4621f5230

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: missMDA,knitr,Factoshiny,markdown
requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}make
    - {{ posix }}sed               # [win]
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-dt
    - r-mass
    - r-car
    - r-cluster
    - r-ellipse
    - r-emmeans
    - r-flashclust
    - r-ggplot2
    - r-ggrepel
    - r-lattice
    - r-leaps
    - r-multcompview
    - r-scatterplot3d

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-dt
    - r-mass
    - r-car
    - r-cluster
    - r-ellipse
    - r-emmeans
    - r-flashclust
    - r-ggplot2
    - r-ggrepel
    - r-lattice
    - r-leaps
    - r-multcompview
    - r-scatterplot3d

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('FactoMineR')"           # [not win]
    - "\"%R%\" -e \"library('FactoMineR')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: http://factominer.free.fr
  license: GPL-2
  summary: 'Exploratory data analysis methods to summarize, visualize and describe datasets.
    The main principal component methods are available, those with the largest potential
    in terms of applications: principal component analysis (PCA) when variables are
    quantitative, correspondence analysis (CA) and multiple correspondence analysis
    (MCA) when variables are categorical, Multiple Factor Analysis when variables are
    structured in groups, etc. and hierarchical cluster analysis. F. Husson, S. Le and
    J. Pages (2017).'
  license_family: GPL2
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

# The original CRAN metadata for this package was:

# Package: FactoMineR
# Version: 2.9
# Title: Multivariate Exploratory Data Analysis and Data Mining
# Author: Francois Husson, Julie Josse, Sebastien Le, Jeremy Mazet
# Maintainer: Francois Husson <francois.husson@institut-agro.fr>
# Depends: R (>= 4.0)
# Imports: car,cluster,DT,ellipse,emmeans,flashClust,graphics,grDevices,lattice,leaps,MASS,multcompView,scatterplot3d,stats,utils,ggplot2,ggrepel
# Suggests: missMDA,knitr,Factoshiny,markdown
# Description: Exploratory data analysis methods to summarize, visualize and describe datasets. The main principal component methods are available, those with the largest potential in terms of applications: principal component analysis (PCA) when variables are quantitative, correspondence analysis (CA) and multiple correspondence analysis (MCA) when variables are categorical, Multiple Factor Analysis when variables are structured in groups, etc. and hierarchical cluster analysis. F. Husson, S. Le and J. Pages (2017).
# License: GPL (>= 2)
# URL: http://factominer.free.fr
# BugReports: https://github.com/husson/FactoMineR
# Encoding: UTF-8
# VignetteBuilder: knitr
# NeedsCompilation: yes
# Packaged: 2023-10-12 17:51:54 UTC; husson
# Repository: CRAN
# Date/Publication: 2023-10-12 22:40:02 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
