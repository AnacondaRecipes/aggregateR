{% set version = '1.0.1' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-futile.options
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/futile.options_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/futile.options/futile.options_{{ version }}.tar.gz
  sha256: 7a9cc974e09598077b242a1069f7fbf4fa7f85ffe25067f6c4c32314ef532570

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{posix}}zip               # [win]

  host:
    - r-base

  run:
    - r-base

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('futile.options')"           # [not win]
    - "\"%R%\" -e \"library('futile.options')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=futile.options
  license: LGPL-3
  summary: A scoped options management framework. Used in other packages.
  license_family: LGPL
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/LGPL-3'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: futile.options
# Type: Package
# Title: Futile Options Management
# Version: 1.0.1
# Date: 2018-04-20
# Author: Brian Lee Yung Rowe
# Maintainer: Brian Lee Yung Rowe <r@zatonovo.com>
# Depends: R (>= 2.8.0)
# Description: A scoped options management framework. Used in other packages.
# License: LGPL-3
# LazyLoad: yes
# NeedsCompilation: no
# Packaged: 2018-04-20 16:08:58 UTC; brian
# Repository: CRAN
# Date/Publication: 2018-04-20 22:04:12 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
