{% set version = '0.9.2' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-shapviz
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/shapviz_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/shapviz/shapviz_{{ version }}.tar.gz
  sha256: 0cf81c3b79a69256d26838f530283a78b46e8c0c301c8fecebdfa6ceeb0f66f1

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: knitr, rmarkdown, testthat (>= 3.0.0)
requirements:
  build:
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-ggfittext >=0.8.0
    - r-gggenes
    - r-ggplot2 >=3.4.0
    - r-ggrepel
    - r-patchwork
    - r-rlang >=0.3.0
    - r-xgboost

  run:
    - r-base
    - r-ggfittext >=0.8.0
    - r-gggenes
    - r-ggplot2 >=3.4.0
    - r-ggrepel
    - r-patchwork
    - r-rlang >=0.3.0
    - r-xgboost

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('shapviz')"           # [not win]
    - "\"%R%\" -e \"library('shapviz')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/ModelOriented/shapviz
  license: GPL-2
  summary: Visualizations for SHAP (SHapley Additive exPlanations), such as waterfall plots,
    force plots, various types of importance plots, dependence plots, and interaction
    plots.  These plots act on a 'shapviz' object created from a matrix of SHAP values
    and a corresponding feature dataset. Wrappers for the R packages 'xgboost', 'lightgbm',
    'fastshap', 'shapr', 'h2o', 'treeshap', 'DALEX', 'kernelshap', and 'permshap' are
    added for convenience.  By separating visualization and computation, it is possible
    to display factor variables in graphs, even if the SHAP values are calculated by
    a model that requires numerical features. The plots are inspired by those provided
    by the 'shap' package in Python, but there is no dependency on it.
  license_family: GPL2
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

# The original CRAN metadata for this package was:

# Package: shapviz
# Title: SHAP Visualizations
# Version: 0.9.2
# Authors@R: c( person("Michael", "Mayer", , "mayermichael79@gmail.com", role = c("aut", "cre")), person("Adrian", "Stando", , "adrian.j.stando@gmail.com", role = "ctb") )
# Description: Visualizations for SHAP (SHapley Additive exPlanations), such as waterfall plots, force plots, various types of importance plots, dependence plots, and interaction plots.  These plots act on a 'shapviz' object created from a matrix of SHAP values and a corresponding feature dataset. Wrappers for the R packages 'xgboost', 'lightgbm', 'fastshap', 'shapr', 'h2o', 'treeshap', 'DALEX', 'kernelshap', and 'permshap' are added for convenience.  By separating visualization and computation, it is possible to display factor variables in graphs, even if the SHAP values are calculated by a model that requires numerical features. The plots are inspired by those provided by the 'shap' package in Python, but there is no dependency on it.
# License: GPL (>= 2)
# Depends: R (>= 3.6.0)
# Encoding: UTF-8
# RoxygenNote: 7.2.3
# Imports: ggfittext (>= 0.8.0), gggenes, ggplot2 (>= 3.4.0), ggrepel, grid, patchwork, rlang (>= 0.3.0), stats, utils, xgboost
# Enhances: fastshap, h2o, lightgbm
# LazyData: true
# Suggests: knitr, rmarkdown, testthat (>= 3.0.0)
# VignetteBuilder: knitr
# Config/testthat/edition: 3
# URL: https://github.com/ModelOriented/shapviz
# BugReports: https://github.com/ModelOriented/shapviz/issues
# NeedsCompilation: no
# Packaged: 2023-10-14 16:43:26 UTC; Michael
# Author: Michael Mayer [aut, cre], Adrian Stando [ctb]
# Maintainer: Michael Mayer <mayermichael79@gmail.com>
# Repository: CRAN
# Date/Publication: 2023-10-14 17:00:02 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
