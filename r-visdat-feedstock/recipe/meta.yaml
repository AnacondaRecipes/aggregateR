{% set version = '0.6.0' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-visdat
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/visdat_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/visdat/visdat_{{ version }}.tar.gz
  sha256: 104acdbb9d41167b861ab24de0e1e1e14f61c1b476bac112fcbc6e47c157e598

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: testthat (>= 3.0.0), plotly (>= 4.5.6), knitr, rmarkdown, vdiffr, spelling, covr, stringr
requirements:
  build:
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-cli
    - r-dplyr
    - r-forcats
    - r-ggplot2
    - r-glue
    - r-magrittr
    - r-purrr
    - r-readr
    - r-scales
    - r-tibble
    - r-tidyr

  run:
    - r-base
    - r-cli
    - r-dplyr
    - r-forcats
    - r-ggplot2
    - r-glue
    - r-magrittr
    - r-purrr
    - r-readr
    - r-scales
    - r-tibble
    - r-tidyr

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('visdat')"           # [not win]
    - "\"%R%\" -e \"library('visdat')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://docs.ropensci.org/visdat/, https://github.com/ropensci/visdat
  license: MIT
  summary: Create preliminary exploratory data visualisations of an entire dataset to identify
    problems or unexpected features using 'ggplot2'.
  license_family: MIT
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/MIT'
    - LICENSE

# The original CRAN metadata for this package was:

# Package: visdat
# Title: Preliminary Visualisation of Data
# Version: 0.6.0
# Authors@R: c( person("Nicholas", "Tierney", role = c("aut", "cre"), email = "nicholas.tierney@gmail.com", comment = c(ORCID = "https://orcid.org/0000-0003-1460-8722")), person("Sean", "Hughes", role = "rev", comment =c(ORCID = "https://orcid.org/0000-0002-9409-9405", "Sean Hughes reviewed the package for rOpenSci, see https://github.com/ropensci/onboarding/issues/87")), person("Mara", "Averick", role = "rev", comment = "Mara Averick reviewed the package for rOpenSci, see https://github.com/ropensci/onboarding/issues/87"), person("Stuart", "Lee", role = c("ctb")), person("Earo", "Wang", role = c("ctb")), person("Nic", "Crane", role = c("ctb")), person("Christophe", "Regouby", role=c("ctb")) )
# Description: Create preliminary exploratory data visualisations of an entire dataset to identify problems or unexpected features using 'ggplot2'.
# Depends: R (>= 3.2.2)
# License: MIT + file LICENSE
# LazyData: true
# RoxygenNote: 7.2.3
# Imports: ggplot2, tidyr, dplyr, purrr, readr, magrittr, stats, tibble, glue, forcats, cli, scales
# URL: https://docs.ropensci.org/visdat/, https://github.com/ropensci/visdat
# BugReports: https://github.com/ropensci/visdat/issues
# Suggests: testthat (>= 3.0.0), plotly (>= 4.5.6), knitr, rmarkdown, vdiffr, spelling, covr, stringr
# VignetteBuilder: knitr
# Encoding: UTF-8
# Language: en-US
# Config/testthat/edition: 3
# NeedsCompilation: no
# Packaged: 2023-02-02 00:52:14 UTC; nick
# Author: Nicholas Tierney [aut, cre] (<https://orcid.org/0000-0003-1460-8722>), Sean Hughes [rev] (<https://orcid.org/0000-0002-9409-9405>, Sean Hughes reviewed the package for rOpenSci, see https://github.com/ropensci/onboarding/issues/87), Mara Averick [rev] (Mara Averick reviewed the package for rOpenSci, see https://github.com/ropensci/onboarding/issues/87), Stuart Lee [ctb], Earo Wang [ctb], Nic Crane [ctb], Christophe Regouby [ctb]
# Maintainer: Nicholas Tierney <nicholas.tierney@gmail.com>
# Repository: CRAN
# Date/Publication: 2023-02-02 03:10:02 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
