{% set version = '1.22' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-sparsepp
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/sparsepp_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/sparsepp/sparsepp_{{ version }}.tar.gz
  sha256: 2999b3a393ccac46b1702b6def030360d81ec32735faab42f0c3ae790b2a4171

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: Rcpp
requirements:
  build:
    - {{ posix }}zip               # [win]

  host:
    - r-base

  run:
    - r-base

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('sparsepp')"           # [not win]
    - "\"%R%\" -e \"library('sparsepp')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/greg7mdp/sparsepp, https://github.com/dselivanov/r-sparsepp
  license: BSD_3_clause
  summary: Provides interface to 'sparsepp' - fast, memory efficient hash map. It is derived
    from Google's excellent 'sparsehash' implementation. We believe 'sparsepp' provides
    an unparalleled combination of performance and memory usage, and will outperform
    your compiler's unordered_map on both counts. Only Google's 'dense_hash_map' is
    consistently faster, at the cost of much greater memory usage (especially when the
    final size of the map is not known in advance).
  license_family: BSD
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/BSD_3_clause'
    - LICENSE

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: sparsepp
# Type: Package
# Title: 'Rcpp' Interface to 'sparsepp'
# Version: 1.22
# Date: 2018-09-19
# Authors@R: c( person("Gregory", "Popovitch", role = c("aut", "cph"), email = "greg7mdp@gmail.com"), person("Google Inc", role = c("aut", "cph")), person("Dmitriy", "Selivanov", role = "cre", email = "selivanov.dmitriy@gmail.com") )
# Description: Provides interface to 'sparsepp' - fast, memory efficient hash map. It is derived from Google's excellent 'sparsehash' implementation. We believe 'sparsepp' provides an unparalleled combination of performance and memory usage, and will outperform your compiler's unordered_map on both counts. Only Google's 'dense_hash_map' is consistently faster, at the cost of much greater memory usage (especially when the final size of the map is not known in advance).
# License: BSD_3_clause + file LICENSE
# Encoding: UTF-8
# URL: https://github.com/greg7mdp/sparsepp, https://github.com/dselivanov/r-sparsepp
# BugReports: https://github.com/dselivanov/r-sparsepp/issues
# Suggests: Rcpp
# RoxygenNote: 6.0.1
# NeedsCompilation: no
# Packaged: 2018-09-22 16:08:38 UTC; dmitry
# Author: Gregory Popovitch [aut, cph], Google Inc [aut, cph], Dmitriy Selivanov [cre]
# Maintainer: Dmitriy Selivanov <selivanov.dmitriy@gmail.com>
# Repository: CRAN
# Date/Publication: 2018-09-22 16:30:03 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
