{% set version = '0.1.0' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-kpeaks
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/kpeaks_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/kpeaks/kpeaks_{{ version }}.tar.gz
  sha256: 68e6e1a1d2aaac2cd409fb6829995b4ad29a8c32fe8214022c6343ed39b3b7e3

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{posix}}zip               # [win]

  host:
    - r-base

  run:
    - r-base

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('kpeaks')"           # [not win]
    - "\"%R%\" -e \"library('kpeaks')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=kpeaks
  license: GPL-2
  summary: The input argument k which is the number of clusters is needed to start all of the
    partitioning clustering algorithms. In unsupervised learning applications, an optimal
    value of this argument is widely determined by using the internal validity indexes.
    Since these indexes suggest a k value which is computed on the clustering results
    after several runs of a clustering algorithm they are computationally expensive.
    On the contrary, 'kpeaks' enables to estimate k before running any clustering algorithm.
    It is based on a simple novel technique using the descriptive statistics of peak
    counts of the features in a data set.
  license_family: GPL2
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: kpeaks
# Type: Package
# Title: Determination of K Using Peak Counts of Features for Clustering
# Version: 0.1.0
# Date: 2017-09-17
# Authors@R: c(person("Zeynel", "Cebeci", email = "zcebeci@cukurova.edu.tr", role = c("aut", "cre")),  person("Cagatay","Cebeci", role = "aut", email = "cagataycebeci@gmail.com"))
# Author: Zeynel Cebeci [aut, cre], Cagatay Cebeci [aut]
# Maintainer: Zeynel Cebeci <zcebeci@cukurova.edu.tr>
# Description: The input argument k which is the number of clusters is needed to start all of the partitioning clustering algorithms. In unsupervised learning applications, an optimal value of this argument is widely determined by using the internal validity indexes. Since these indexes suggest a k value which is computed on the clustering results after several runs of a clustering algorithm they are computationally expensive. On the contrary, 'kpeaks' enables to estimate k before running any clustering algorithm. It is based on a simple novel technique using the descriptive statistics of peak counts of the features in a data set.
# Depends: R (>= 2.10.0)
# License: GPL (>= 2)
# LazyData: true
# Imports: graphics, stats, utils
# NeedsCompilation: no
# Packaged: 2017-09-17 17:29:04 UTC; user1
# Repository: CRAN
# Date/Publication: 2017-09-19 09:37:37 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
