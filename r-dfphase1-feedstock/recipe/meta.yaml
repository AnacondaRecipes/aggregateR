{% set version = '1.2.0' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-dfphase1
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/dfphase1_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/dfphase1/dfphase1_{{ version }}.tar.gz
  sha256: 1de1cc1830dbcb366ccc27db3d077a6133689170b796f734412be68058eb2c29

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}make
    - {{ posix }}sed               # [win]
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-rcpp >=0.11.1
    - r-lattice
    - r-robustbase

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-rcpp >=0.11.1
    - r-lattice
    - r-robustbase

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('dfphase1')"           # [not win]
    - "\"%R%\" -e \"library('dfphase1')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=dfphase1
  license: LGPL-2
  summary: Statistical methods for retrospectively detecting changes in location and/or dispersion
    of univariate and multivariate variables. Data values are assumed to be independent,
    can be individual (one observation at each instant of time) or subgrouped (more
    than one observation at each instant of time). Control limits are computed, often
    using a permutation approach, so that a prescribed false alarm probability is guaranteed
    without making any parametric assumptions on the stable (in-control) distribution.
    See G. Capizzi and G. Masarotto (2018) <doi:10.1007/978-3-319-75295-2_1> for an
    introduction to the package.
  license_family: LGPL
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/LGPL-2'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: dfphase1
# Type: Package
# Title: Phase I Control Charts (with Emphasis on Distribution-Free Methods)
# Version: 1.2.0
# Author: Giovanna Capizzi and Guido Masarotto
# Maintainer: Giovanna Capizzi <giovanna.capizzi@unipd.it>
# Description: Statistical methods for retrospectively detecting changes in location and/or dispersion of univariate and multivariate variables. Data values are assumed to be independent, can be individual (one observation at each instant of time) or subgrouped (more than one observation at each instant of time). Control limits are computed, often using a permutation approach, so that a prescribed false alarm probability is guaranteed without making any parametric assumptions on the stable (in-control) distribution. See G. Capizzi and G. Masarotto (2018) <doi:10.1007/978-3-319-75295-2_1> for an introduction to the package.
# License: LGPL (>= 2)
# Imports: Rcpp (>= 0.11.1), lattice, robustbase
# LinkingTo: Rcpp
# NeedsCompilation: yes
# Packaged: 2023-06-19 10:00:51 UTC; guido
# Repository: CRAN
# Date/Publication: 2023-06-19 13:20:02 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
