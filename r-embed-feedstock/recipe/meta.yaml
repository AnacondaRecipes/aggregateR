{% set version = '1.1.3' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-embed
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/embed_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/embed/embed_{{ version }}.tar.gz
  sha256: 0624355194a54240c3d2a7f6dbdffdbdccbdc7994123951e799eabed71704fa9

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: covr, dials (>= 1.2.0), ggplot2, hardhat, irlba, knitr, lme4, modeldata, rmarkdown, rpart, rstanarm, stringdist, testthat (>= 3.0.0), VBsparsePCA, xgboost
requirements:
  build:
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-dplyr >=1.1.0
    - r-generics >=0.1.0
    - r-glue
    - r-keras
    - r-lifecycle
    - r-purrr
    - r-recipes >=1.0.7
    - r-rlang >=0.4.10
    - r-rsample
    - r-tensorflow
    - r-tibble
    - r-tidyr
    - r-uwot
    - r-vctrs
    - r-withr

  run:
    - r-base
    - r-dplyr >=1.1.0
    - r-generics >=0.1.0
    - r-glue
    - r-keras
    - r-lifecycle
    - r-purrr
    - r-recipes >=1.0.7
    - r-rlang >=0.4.10
    - r-rsample
    - r-tensorflow
    - r-tibble
    - r-tidyr
    - r-uwot
    - r-vctrs
    - r-withr

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('embed')"           # [not win]
    - "\"%R%\" -e \"library('embed')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://embed.tidymodels.org, https://github.com/tidymodels/embed
  license: MIT
  summary: Predictors can be converted to one or more numeric representations using a variety
    of methods. Effect encodings using simple generalized linear models <arXiv:1611.09477>
    or nonlinear models <arXiv:1604.06737> can be used.  There are also functions for
    dimension reduction and other approaches.
  license_family: MIT
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/MIT'
    - LICENSE

# The original CRAN metadata for this package was:

# Package: embed
# Title: Extra Recipes for Encoding Predictors
# Version: 1.1.3
# Authors@R: c( person("Emil", "Hvitfeldt", , "emil.hvitfeldt@posit.co", role = c("aut", "cre"), comment = c(ORCID = "0000-0002-0679-1945")), person("Max", "Kuhn", , "max@posit.co", role = c("aut"), comment = c(ORCID = "0000-0003-2402-136X")), person(given = "Posit Software, PBC", role = c("cph", "fnd")) )
# Description: Predictors can be converted to one or more numeric representations using a variety of methods. Effect encodings using simple generalized linear models <arXiv:1611.09477> or nonlinear models <arXiv:1604.06737> can be used.  There are also functions for dimension reduction and other approaches.
# License: MIT + file LICENSE
# URL: https://embed.tidymodels.org, https://github.com/tidymodels/embed
# BugReports: https://github.com/tidymodels/embed/issues
# Depends: R (>= 3.6), recipes (>= 1.0.7)
# Imports: glue, dplyr (>= 1.1.0), generics (>= 0.1.0), keras, lifecycle, purrr, rlang (>= 0.4.10), rsample, stats, tensorflow, tibble, tidyr, utils, uwot, withr, vctrs
# Suggests: covr, dials (>= 1.2.0), ggplot2, hardhat, irlba, knitr, lme4, modeldata, rmarkdown, rpart, rstanarm, stringdist, testthat (>= 3.0.0), VBsparsePCA, xgboost
# ByteCompile: true
# Config/Needs/website: tidymodels, ggiraph, tidyverse/tidytemplate, reticulate
# Config/testthat/edition: 3
# Encoding: UTF-8
# RoxygenNote: 7.2.3
# NeedsCompilation: no
# Packaged: 2023-10-28 22:56:54 UTC; emilhvitfeldt
# Author: Emil Hvitfeldt [aut, cre] (<https://orcid.org/0000-0002-0679-1945>), Max Kuhn [aut] (<https://orcid.org/0000-0003-2402-136X>), Posit Software, PBC [cph, fnd]
# Maintainer: Emil Hvitfeldt <emil.hvitfeldt@posit.co>
# Repository: CRAN
# Date/Publication: 2023-10-28 23:20:02 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
