{% set version = '1.0' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-nicherover
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/nicheROVER_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/nicheROVER/nicheROVER_{{ version }}.tar.gz
  sha256: 5c01e984787e0aa6d1efedb33f74a0650bc4542c8a6f44fe46c7c6f9afe34769

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: knitr
requirements:
  build:
    - {{posix}}zip               # [win]

  host:
    - r-base
    - r-mvtnorm

  run:
    - r-base
    - r-mvtnorm

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('nicheROVER')"           # [not win]
    - "\"%R%\" -e \"library('nicheROVER')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=nicheROVER
  license: GPL-2
  summary: This package uses a probabilistic method to calculate niche regions and pairwise niche
    overlap using multidimensional niche indicator data (e.g., stable isotopes, environmental
    variables, etc.). The niche region is defined as the joint probability density function
    of the multidimensional niche indicators at a user-defined probability alpha (e.g.,
    95%).  Uncertainty is accounted for in a Bayesian framework, and the method can
    be extended to three or more indicator dimensions.  It provides directional estimates
    of niche overlap, accounts for species-specific distributions in multivariate niche
    space, and produces unique and consistent bivariate projections of the multivariate
    niche region.  A forthcoming article by Swanson et al. (Ecology, 2014) provides
    a detailed description of the methodology.  See the package vignette for a worked
    example using fish stable isotope data.
  license_family: GPL2
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: nicheROVER
# Title: (Niche) (R)egion and Niche (Over)lap Metrics for Multidimensional Ecological Niches
# Version: 1.0
# Date: 2014-07-21
# Authors@R: c(person("Martin", "Lysy", role = c("aut", "cre"), email = "mlysy@uwaterloo.ca"), person("Ashley D.", "Stasko", role = c("aut", "ctb")), person("Heidi K.", "Swanson", role = c("aut", "ctb")))
# Description: This package uses a probabilistic method to calculate niche regions and pairwise niche overlap using multidimensional niche indicator data (e.g., stable isotopes, environmental variables, etc.). The niche region is defined as the joint probability density function of the multidimensional niche indicators at a user-defined probability alpha (e.g., 95%).  Uncertainty is accounted for in a Bayesian framework, and the method can be extended to three or more indicator dimensions.  It provides directional estimates of niche overlap, accounts for species-specific distributions in multivariate niche space, and produces unique and consistent bivariate projections of the multivariate niche region.  A forthcoming article by Swanson et al. (Ecology, 2014) provides a detailed description of the methodology.  See the package vignette for a worked example using fish stable isotope data.
# Depends: R (>= 1.9.0), mvtnorm
# Suggests: knitr
# VignetteBuilder: knitr
# License: GPL-2
# LazyData: true
# Packaged: 2014-07-25 17:41:04 UTC; Jerome
# Author: Martin Lysy [aut, cre], Ashley D. Stasko [aut, ctb], Heidi K. Swanson [aut, ctb]
# Maintainer: Martin Lysy <mlysy@uwaterloo.ca>
# NeedsCompilation: no
# Repository: CRAN
# Date/Publication: 2014-07-25 21:15:59

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
