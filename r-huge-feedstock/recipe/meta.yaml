{% set version = '1.3.5' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-huge
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/huge_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/huge/huge_{{ version }}.tar.gz
  sha256: 9240866e2f773cd0ac8a02514871149d2babaa162a49e151eab9591ad42984ea

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}sed               # [win]
    - {{ posix }}grep              # [win]
    - {{ posix }}autoconf
    - {{ posix }}automake          # [not win]
    - {{ posix }}automake-wrapper  # [win]
    - {{ posix }}pkg-config
    - {{ posix }}make
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-mass
    - r-matrix
    - r-rcpp
    - r-rcppeigen
    - r-igraph

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-mass
    - r-matrix
    - r-rcpp
    - r-rcppeigen
    - r-igraph

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('huge')"           # [not win]
    - "\"%R%\" -e \"library('huge')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=huge
  license: GPL-2
  summary: 'Provides a general framework for high-dimensional undirected graph estimation. It
    integrates data preprocessing, neighborhood screening, graph estimation, and model
    selection techniques into a pipeline. In preprocessing stage, the nonparanormal(npn)
    transformation is applied to help relax the normality assumption. In the graph estimation
    stage, the graph structure is estimated by Meinshausen-Buhlmann graph estimation
    or the graphical lasso, and both methods can be further accelerated by the lossy
    screening rule preselecting the neighborhood of each variable by correlation thresholding.
    We target on high-dimensional data analysis usually d >> n, and the computation
    is memory-optimized using the sparse matrix output. We also provide a computationally
    efficient approach, correlation thresholding graph estimation. Three regularization/thresholding
    parameter selection methods are included in this package: (1)stability approach
    for regularization selection (2) rotation information criterion (3) extended Bayesian
    information criterion which is only available for the graphical lasso.'
  license_family: GPL2
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: huge
# Type: Package
# Title: High-Dimensional Undirected Graph Estimation
# Version: 1.3.5
# Author: Haoming Jiang, Xinyu Fei, Han Liu, Kathryn Roeder, John Lafferty, Larry Wasserman,  Xingguo Li, and Tuo Zhao
# Maintainer: Haoming Jiang <jianghm.ustc@gmail.com>
# Depends: R (>= 3.0.0)
# Imports: Matrix, igraph, MASS, grDevices, graphics, methods, stats, utils, Rcpp
# LinkingTo: Rcpp, RcppEigen
# Description: Provides a general framework for high-dimensional undirected graph estimation. It integrates data preprocessing, neighborhood screening, graph estimation, and model selection techniques into a pipeline. In preprocessing stage, the nonparanormal(npn) transformation is applied to help relax the normality assumption. In the graph estimation stage, the graph structure is estimated by Meinshausen-Buhlmann graph estimation or the graphical lasso, and both methods can be further accelerated by the lossy screening rule preselecting the neighborhood of each variable by correlation thresholding. We target on high-dimensional data analysis usually d >> n, and the computation is memory-optimized using the sparse matrix output. We also provide a computationally efficient approach, correlation thresholding graph estimation. Three regularization/thresholding parameter selection methods are included in this package: (1)stability approach for regularization selection (2) rotation information criterion (3) extended Bayesian information criterion which is only available for the graphical lasso.
# License: GPL-2
# Repository: CRAN
# NeedsCompilation: yes
# RoxygenNote: 7.1.1
# Encoding: UTF-8
# Packaged: 2021-06-30 19:55:18 UTC; jhaoming
# Date/Publication: 2021-06-30 20:20:02 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
