{% set version = '0.5.0-1' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-mlr3pipelines
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/mlr3pipelines_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/mlr3pipelines/mlr3pipelines_{{ version }}.tar.gz
  sha256: 0dd67898071ef916aa6d776c9a43bef7a944cb12a5d73fe73f14138f43fcc6de

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: ggplot2, glmnet, igraph, knitr, lme4, mlbench, bbotk (>= 0.3.0), mlr3filters (>= 0.1.1), mlr3learners, mlr3measures, nloptr, quanteda, rmarkdown, rpart, stopwords, testthat, visNetwork, bestNormalize, fastICA, kernlab, smotefamily, evaluate, NMF, MASS, kknn, GenSA, methods, vtreat, future
requirements:
  build:
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-r6
    - r-backports
    - r-checkmate
    - r-data.table
    - r-digest
    - r-lgr
    - r-mlr3 >=0.6.0
    - r-mlr3misc >=0.9.0
    - r-paradox
    - r-withr

  run:
    - r-base
    - r-r6
    - r-backports
    - r-checkmate
    - r-data.table
    - r-digest
    - r-lgr
    - r-mlr3 >=0.6.0
    - r-mlr3misc >=0.9.0
    - r-paradox
    - r-withr

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('mlr3pipelines')"           # [not win]
    - "\"%R%\" -e \"library('mlr3pipelines')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://mlr3pipelines.mlr-org.com, https://github.com/mlr-org/mlr3pipelines
  license: LGPL-3
  summary: Dataflow programming toolkit that enriches 'mlr3' with a diverse set of pipelining
    operators ('PipeOps') that can be composed into graphs. Operations exist for data
    preprocessing, model fitting, and ensemble learning. Graphs can themselves be treated
    as 'mlr3' 'Learners' and can therefore be resampled, benchmarked, and tuned.
  license_family: LGPL
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/LGPL-3'

# The original CRAN metadata for this package was:

# Package: mlr3pipelines
# Title: Preprocessing Operators and Pipelines for 'mlr3'
# Version: 0.5.0-1
# Authors@R: c(person(given = "Martin", family = "Binder", role = c("aut", "cre"), email = "mlr.developer@mb706.com"), person(given = "Florian", family = "Pfisterer", role = "aut", email = "pfistererf@googlemail.com", comment = c(ORCID = "0000-0001-8867-762X")), person(given = "Lennart", family = "Schneider", role = "aut", email = "lennart.sch@web.de", comment = c(ORCID = "0000-0003-4152-5308")), person(given = "Bernd", family = "Bischl", role = "aut", email = "bernd_bischl@gmx.net", comment = c(ORCID = "0000-0001-6002-6980")), person(given = "Michel", family = "Lang", role = "aut", email = "michellang@gmail.com", comment = c(ORCID = "0000-0001-9754-0393")), person(given = "Sebastian", family = "Fischer", role = "ctb", email = "sebf.fischer@gmail.com", comment = c(ORCID = "0000-0002-9609-3197")), person(given = "Susanne", family = "Dandl", role = "aut", email = "dandl.susanne@googlemail.com"))
# Description: Dataflow programming toolkit that enriches 'mlr3' with a diverse set of pipelining operators ('PipeOps') that can be composed into graphs. Operations exist for data preprocessing, model fitting, and ensemble learning. Graphs can themselves be treated as 'mlr3' 'Learners' and can therefore be resampled, benchmarked, and tuned.
# License: LGPL-3
# URL: https://mlr3pipelines.mlr-org.com, https://github.com/mlr-org/mlr3pipelines
# BugReports: https://github.com/mlr-org/mlr3pipelines/issues
# Depends: R (>= 3.1.0)
# Imports: backports, checkmate, data.table, digest, lgr, mlr3 (>= 0.6.0), mlr3misc (>= 0.9.0), paradox, R6, withr
# Suggests: ggplot2, glmnet, igraph, knitr, lme4, mlbench, bbotk (>= 0.3.0), mlr3filters (>= 0.1.1), mlr3learners, mlr3measures, nloptr, quanteda, rmarkdown, rpart, stopwords, testthat, visNetwork, bestNormalize, fastICA, kernlab, smotefamily, evaluate, NMF, MASS, kknn, GenSA, methods, vtreat, future
# ByteCompile: true
# Encoding: UTF-8
# Config/testthat/edition: 3
# Config/testthat/parallel: true
# NeedsCompilation: no
# RoxygenNote: 7.2.3
# VignetteBuilder: knitr
# Collate: 'Graph.R' 'GraphLearner.R' 'mlr_pipeops.R' 'multiplicity.R' 'utils.R' 'PipeOp.R' 'PipeOpEnsemble.R' 'LearnerAvg.R' 'NO_OP.R' 'PipeOpTaskPreproc.R' 'PipeOpBoxCox.R' 'PipeOpBranch.R' 'PipeOpChunk.R' 'PipeOpClassBalancing.R' 'PipeOpClassWeights.R' 'PipeOpClassifAvg.R' 'PipeOpColApply.R' 'PipeOpColRoles.R' 'PipeOpCollapseFactors.R' 'PipeOpCopy.R' 'PipeOpDateFeatures.R' 'PipeOpEncode.R' 'PipeOpEncodeImpact.R' 'PipeOpEncodeLmer.R' 'PipeOpFeatureUnion.R' 'PipeOpFilter.R' 'PipeOpFixFactors.R' 'PipeOpHistBin.R' 'PipeOpICA.R' 'PipeOpImpute.R' 'PipeOpImputeConstant.R' 'PipeOpImputeHist.R' 'PipeOpImputeLearner.R' 'PipeOpImputeMean.R' 'PipeOpImputeMedian.R' 'PipeOpImputeMode.R' 'PipeOpImputeOOR.R' 'PipeOpImputeSample.R' 'PipeOpKernelPCA.R' 'PipeOpLearner.R' 'PipeOpLearnerCV.R' 'PipeOpMissingIndicators.R' 'PipeOpModelMatrix.R' 'PipeOpMultiplicity.R' 'PipeOpMutate.R' 'PipeOpNMF.R' 'PipeOpNOP.R' 'PipeOpOVR.R' 'PipeOpPCA.R' 'PipeOpProxy.R' 'PipeOpQuantileBin.R' 'PipeOpRandomProjection.R' 'PipeOpRandomResponse.R' 'PipeOpRegrAvg.R' 'PipeOpRemoveConstants.R' 'PipeOpRenameColumns.R' 'PipeOpScale.R' 'PipeOpScaleMaxAbs.R' 'PipeOpScaleRange.R' 'PipeOpSelect.R' 'PipeOpSmote.R' 'PipeOpSpatialSign.R' 'PipeOpSubsample.R' 'PipeOpTextVectorizer.R' 'PipeOpThreshold.R' 'PipeOpTrafo.R' 'PipeOpTuneThreshold.R' 'PipeOpUnbranch.R' 'PipeOpVtreat.R' 'PipeOpYeoJohnson.R' 'Selector.R' 'assert_graph.R' 'bibentries.R' 'greplicate.R' 'gunion.R' 'mlr_graphs.R' 'operators.R' 'pipeline_bagging.R' 'pipeline_branch.R' 'pipeline_greplicate.R' 'pipeline_ovr.R' 'pipeline_robustify.R' 'pipeline_stacking.R' 'pipeline_targettrafo.R' 'po.R' 'ppl.R' 'reexports.R' 'typecheck.R' 'zzz.R'
# Packaged: 2023-05-22 06:52:00 UTC; user
# Author: Martin Binder [aut, cre], Florian Pfisterer [aut] (<https://orcid.org/0000-0001-8867-762X>), Lennart Schneider [aut] (<https://orcid.org/0000-0003-4152-5308>), Bernd Bischl [aut] (<https://orcid.org/0000-0001-6002-6980>), Michel Lang [aut] (<https://orcid.org/0000-0001-9754-0393>), Sebastian Fischer [ctb] (<https://orcid.org/0000-0002-9609-3197>), Susanne Dandl [aut]
# Maintainer: Martin Binder <mlr.developer@mb706.com>
# Repository: CRAN
# Date/Publication: 2023-05-22 10:10:02 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
