{% set version = '2019.08.26' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-fpop
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/fpop_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/fpop/fpop_{{ version }}.tar.gz
  sha256: 3605f6a61972f599fc2ec0f9eedba5f17c7c0a4cf6ffe3cb9d7f4f0ad36ae5bf

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}make
    - {{ posix }}sed               # [win]
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]

  host:
    - r-base

  run:
    - r-base
    - {{native}}gcc-libs         # [win]

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('fpop')"           # [not win]
    - "\"%R%\" -e \"library('fpop')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=fpop
  license: LGPL-2.1
  summary: A dynamic programming algorithm for the fast segmentation of univariate signals into
    piecewise constant profiles. The 'fpop'  package is a wrapper to a C++ implementation
    of the fpop (Functional Pruning Optimal Partioning) algorithm described in Maidstone
    et al. 2017 <doi:10.1007/s11222-016-9636-3>. The problem of detecting changepoints
    in an univariate sequence is formulated in terms of minimising the mean squared
    error over segmentations. The fpop algorithm exactly minimizes the mean squared
    error for a penalty linear in the number of changepoints.
  license_family: LGPL
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/LGPL-2.1'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: fpop
# Type: Package
# Title: Segmentation using Optimal Partitioning and Function Pruning
# Version: 2019.08.26
# Authors@R: c(person("Guillem", "Rigaill", email = "guillem.rigaill@inra.fr", role = c("aut", "cre")), person("Toby", "Hocking", role = c("aut")), person("Robert", "Maidstone", role = c("aut")), person("Michel", "Koskas", role = c("ctb")), person("Paul", "Fearnhead", role = c("aut")))
# Maintainer: Guillem Rigaill <guillem.rigaill@inra.fr>
# Description: A dynamic programming algorithm for the fast segmentation of univariate signals into piecewise constant profiles. The 'fpop'  package is a wrapper to a C++ implementation of the fpop (Functional Pruning Optimal Partioning) algorithm described in Maidstone et al. 2017 <doi:10.1007/s11222-016-9636-3>. The problem of detecting changepoints in an univariate sequence is formulated in terms of minimising the mean squared error over segmentations. The fpop algorithm exactly minimizes the mean squared error for a penalty linear in the number of changepoints.
# License: LGPL (>= 2.1)
# NeedsCompilation: yes
# Packaged: 2019-08-26 05:34:19 UTC; grigaill
# Author: Guillem Rigaill [aut, cre], Toby Hocking [aut], Robert Maidstone [aut], Michel Koskas [ctb], Paul Fearnhead [aut]
# Repository: CRAN
# Date/Publication: 2019-08-27 07:00:03 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
