{% set version = '0.13.2-0' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-xtensor
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/xtensor_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/xtensor/xtensor_{{ version }}.tar.gz
  sha256: eec9c97d79a7b842d1c5dca53a183f3cfb7733f9c479be30710248db6066954b

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: testthat
requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}sed               # [win]
    - {{ posix }}grep              # [win]
    - {{ posix }}autoconf
    - {{ posix }}automake          # [not win]
    - {{ posix }}automake-wrapper  # [win]
    - {{ posix }}pkg-config
    - {{ posix }}make
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-rcpp

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-rcpp

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('xtensor')"           # [not win]
    - "\"%R%\" -e \"library('xtensor')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/xtensor-stack/xtensor
  license: BSD_3_clause
  summary: The 'xtensor' C++ library for numerical analysis with multi-dimensional array expressions
    is provided as a header-only C++14 library. It offers an extensible expression system
    enabling lazy broadcasting; an API following the idioms of the C++ standard library;
    and tools to manipulate array expressions and build upon 'xtensor'.
  license_family: BSD
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/BSD_3_clause'
    - LICENSE

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: xtensor
# Type: Package
# Title: Headers for the 'xtensor' Library
# Version: 0.13.2-0
# Author: Johan Mabille, Sylvain Corlay and Wolf Vollprecht
# Maintainer: Sylvain Corlay <sylvain.corlay@gmail.com>
# Description: The 'xtensor' C++ library for numerical analysis with multi-dimensional array expressions is provided as a header-only C++14 library. It offers an extensible expression system enabling lazy broadcasting; an API following the idioms of the C++ standard library; and tools to manipulate array expressions and build upon 'xtensor'.
# URL: https://github.com/xtensor-stack/xtensor
# License: BSD_3_clause + file LICENSE
# Encoding: UTF-8
# Imports: Rcpp
# LinkingTo: Rcpp
# LazyData: true
# Biarch: true
# Suggests: testthat
# NeedsCompilation: yes
# Packaged: 2021-03-01 09:23:53 UTC; sylvain
# Repository: CRAN
# Date/Publication: 2021-03-01 09:40:02 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
