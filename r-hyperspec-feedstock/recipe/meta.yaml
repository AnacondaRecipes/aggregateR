{% set version = '0.100.0' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-hyperspec
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/hyperSpec_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/hyperSpec/hyperSpec_{{ version }}.tar.gz
  sha256: bacc870a188a9c5fd0bbe3b4138f636b118c1d913d420c6c2925e052a9d11c54

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: R.matlab, tripack, deldir, rgl, plotrix, sp, baseline, compiler, inline, Rcpp, MASS, fastcluster, pls, mvtnorm, digest, reshape, devtools, R.rsp, tibble
requirements:
  build:
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-dplyr
    - r-ggplot2 >=2.2.0
    - r-lattice
    - r-latticeextra
    - r-lazyeval
    - r-testthat
    - r-xml2

  run:
    - r-base
    - r-dplyr
    - r-ggplot2 >=2.2.0
    - r-lattice
    - r-latticeextra
    - r-lazyeval
    - r-testthat
    - r-xml2

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('hyperSpec')"           # [not win]
    - "\"%R%\" -e \"library('hyperSpec')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://r-hyperspec.github.io/hyperSpec/ (documentation), https://github.com/r-hyperspec/hyperSpec
    (code)
  license: GPL-3
  summary: Comfortable ways to work with hyperspectral data sets. I.e. spatially or time-resolved
    spectra, or spectra with any other kind of information associated with each of the
    spectra. The spectra can be data as obtained in XRF, UV/VIS, Fluorescence, AES,
    NIR, IR, Raman, NMR, MS, etc. More generally, any data that is recorded over a discretized
    variable, e.g. absorbance = f(wavelength), stored as a vector of absorbance values
    for discrete wavelengths is suitable.
  license_family: GPL3
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-3'

# The original CRAN metadata for this package was:

# Package: hyperSpec
# Encoding: UTF-8
# Type: Package
# Title: Work with Hyperspectral Data, i.e. Spectra + Meta Information (Spatial, Time, Concentration, ...)
# Version: 0.100.0
# Date: 2021-09-13
# Maintainer: Claudia Beleites <Claudia.Beleites@chemometrix.gmbh>
# Authors@R: c( person("Claudia",   "Beleites",  role = c("aut","cre", "dtc"), email = "Claudia.Beleites@chemometrix.gmbh", comment = c(ORCID = "0000-0003-1626-154X")), person("Valter",    "Sergo",     role = c("aut")), person("Alois",     "Bonifacio", role = c("ctb", "dtc")), person("Marcel",    "Dahms",     role = "ctb"), person("Bjorn",     "Egert",     role = "ctb"), person("Simon",     "Fuller",    role = "ctb"), person("Vilmantas", "Gegzna",    role = "ctb"), person("Rustam",    "Guliev",    role = "ctb"), person("Bryan A.",  "Hanson",    role = "ctb"), person("Michael",   "Hermes",    role = "ctb"), person("Martin",    "Kammer",    role = "dtc"), person("Roman",     "Kiselev",   role = "ctb"), person("Sebastian", "Mellor",    role = "ctb") )
# Description: Comfortable ways to work with hyperspectral data sets. I.e. spatially or time-resolved spectra, or spectra with any other kind of information associated with each of the spectra. The spectra can be data as obtained in XRF, UV/VIS, Fluorescence, AES, NIR, IR, Raman, NMR, MS, etc. More generally, any data that is recorded over a discretized variable, e.g. absorbance = f(wavelength), stored as a vector of absorbance values for discrete wavelengths is suitable.
# License: GPL (>= 3)
# LazyLoad: yes
# LazyData: yes
# Depends: R (>= 3.6.0), lattice, grid, ggplot2 (>= 2.2.0), xml2
# Suggests: R.matlab, tripack, deldir, rgl, plotrix, sp, baseline, compiler, inline, Rcpp, MASS, fastcluster, pls, mvtnorm, digest, reshape, devtools, R.rsp, tibble
# Imports: testthat, methods, utils, latticeExtra, lazyeval, dplyr
# URL: https://r-hyperspec.github.io/hyperSpec/ (documentation), https://github.com/r-hyperspec/hyperSpec (code)
# BugReports: https://github.com/r-hyperspec/hyperSpec/issues
# VignetteBuilder: R.rsp
# Collate: 'validate.R' 'hyperspec-class.R' 'unittest.R' 'paste.row.R' 'Arith.R' 'Compare.R' 'DollarNames.R' 'Math.R' 'chk.hy.R' 'read.txt.wide.R' 'read.txt.long.R' 'options.R' 'wl.R' 'fileio.optional.R' 'NEW-functions.R' 'Summary.R' 'aggregate.R' 'all.equal.R' 'apply.R' 'as.data.frame.R' 'barbiturates.R' 'bind.R' 'call.list.R' 'chondro.R' 'colMeans.R' 'collapse.R' 'count_lines.R' 'cov.R' 'decomposition.R' 'deprecated.R' 'dim.R' 'dimnames.R' 'droplevels.R' 'empty.R' 'wl2i.R' 'extract.R' 'factor2num.R' 'fix_spc_colnames.R' 'flu.R' 'getbynames.R' 'regexps.R' 'guesswavelength.R' 'paracetamol.R' 'laser.R' 'hyperspec-package.R' 'initialize.R' 'labels.R' 'plotmap.R' 'levelplot.R' 'makeraster.R' 'map.identify.R' 'map.sel.poly.R' 'mark.dendrogram.R' 'mark.peak.R' 'matlab.palette.R' 'mean_sd.R' 'merge.R' 'mvtnorm.R' 'normalize01.R' 'orderwl.R' 'pearson.dist.R' 'plot.R' 'plotc.R' 'plotmat.R' 'plotspc.R' 'plotvoronoi.R' 'qplot.R' 'qplotmixmap.R' 'quantile.R' 'rbind.fill.R' 'read.ENVI.R' 'read.ENVI.HySpex.R' 'read.ENVI.Nicolet.R' 'read.txt.Witec.R' 'read.asc.Andor.R' 'read.asc.PerkinElmer.R' 'read.ini.R' 'read.jdx.R' 'read.mat.Cytospec.R' 'read.mat.Witec.R' 'read.spc.Kaiser.R' 'read.spc.R' 'read.spc.Shimadzu.R' 'read.spe.R' 'read.txt.Horiba.R' 'read.txt.Renishaw.R' 'read.txt.Shimadzu.R' 'replace.R' 'sample.R' 'scale.R' 'seq.R' 'show.R' 'spc.NA.approx.R' 'spc.bin.R' 'spc.fit.poly.R' 'spc.identify.R' 'spc.loess.R' 'spc.rubberband.R' 'spc.spline.R' 'split.R' 'split.string.R' 'splitdots.R' 'subset.R' 'sweep.R' 'trellis.factor.key.R' 'units.R' 'vandermonde.R' 'wc.R' 'wleval.R' 'write.txt.long.R' 'write.txt.wide.R' 'y-pastenames.R' 'zzz.R'
# RoxygenNote: 7.1.1
# NeedsCompilation: no
# Packaged: 2021-09-13 11:16:56 UTC; cb
# Author: Claudia Beleites [aut, cre, dtc] (<https://orcid.org/0000-0003-1626-154X>), Valter Sergo [aut], Alois Bonifacio [ctb, dtc], Marcel Dahms [ctb], Bjorn Egert [ctb], Simon Fuller [ctb], Vilmantas Gegzna [ctb], Rustam Guliev [ctb], Bryan A. Hanson [ctb], Michael Hermes [ctb], Martin Kammer [dtc], Roman Kiselev [ctb], Sebastian Mellor [ctb]
# Repository: CRAN
# Date/Publication: 2021-09-13 13:00:02 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
