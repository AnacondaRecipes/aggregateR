{% set version = '1.3.0' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-openimager
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/OpenImageR_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/OpenImageR/OpenImageR_{{ version }}.tar.gz
  sha256: a6e828b81dccb33e6c0326e8574ecda9e58add051cd2a4b12f237f25219f2548

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: testthat, knitr, rmarkdown, covr
requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}make
    - {{ posix }}sed               # [win]
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-r6
    - r-rcpp >=0.12.17
    - r-rcpparmadillo >=0.8.0
    - r-jpeg
    - r-lifecycle
    - r-png
    - r-shiny
    - r-tiff

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-r6
    - r-rcpp >=0.12.17
    - r-rcpparmadillo >=0.8.0
    - r-jpeg
    - r-lifecycle
    - r-png
    - r-shiny
    - r-tiff

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('OpenImageR')"           # [not win]
    - "\"%R%\" -e \"library('OpenImageR')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/mlampros/OpenImageR
  license: GPL-3
  summary: 'Incorporates functions for image preprocessing, filtering and image recognition.
    The package takes advantage of ''RcppArmadillo'' to speed up computationally intensive
    functions. The histogram of oriented gradients descriptor is a modification of the
    ''findHOGFeatures'' function of the ''SimpleCV'' computer vision platform, the average_hash(),
    dhash() and phash() functions are based on the ''ImageHash'' python library. The
    Gabor Feature Extraction functions are based on ''Matlab'' code of the paper, "CloudID:
    Trustworthy cloud-based and cross-enterprise biometric identification" by M. Haghighat,
    S. Zonouz, M. Abdel-Mottaleb, Expert Systems with Applications, vol. 42, no. 21,
    pp. 7905-7916, 2015, <doi:10.1016/j.eswa.2015.06.025>. The ''SLIC'' and ''SLICO''
    superpixel algorithms were explained in detail in (i) "SLIC Superpixels Compared
    to State-of-the-art Superpixel Methods", Radhakrishna Achanta, Appu Shaji, Kevin
    Smith, Aurelien Lucchi, Pascal Fua, and Sabine Suesstrunk, IEEE Transactions on
    Pattern Analysis and Machine Intelligence, vol. 34, num. 11, p. 2274-2282, May 2012,
    <doi:10.1109/TPAMI.2012.120> and (ii) "SLIC Superpixels", Radhakrishna Achanta,
    Appu Shaji, Kevin Smith, Aurelien Lucchi, Pascal Fua, and Sabine Suesstrunk, EPFL
    Technical Report no. 149300, June 2010.'
  license_family: GPL3
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-3'

# The original CRAN metadata for this package was:

# Package: OpenImageR
# Type: Package
# Title: An Image Processing Toolkit
# Version: 1.3.0
# Date: 2023-07-08
# Authors@R: c( person("Lampros", "Mouselimis", email = "mouselimislampros@gmail.com", role = c("aut", "cre"), comment = c(ORCID = "https://orcid.org/0000-0002-8024-1546")), person("Sight", "Machine", role = "cph", comment = "findHOGFeatures function of the SimpleCV computer vision platform"), person("Johannes", "Buchner", role = "cph", comment = "average_hash, dhash and phash functions of the ImageHash python library"), person("Mohammad", "Haghighat", email = "haghighat@ieee.org", role = "cph", comment = "Gabor Feature Extraction"), person("Radhakrishna", "Achanta", email = "Radhakrishna.Achanta@epfl.ch", role = "cph", comment = "Author of the C++ code of the SLIC and SLICO algorithms (for commercial use please contact the author)"), person("Oleh", "Onyshchak", role = "cph", comment = "Author of the Python code of the WarpAffine function") )
# Maintainer: Lampros Mouselimis <mouselimislampros@gmail.com>
# BugReports: https://github.com/mlampros/OpenImageR/issues
# URL: https://github.com/mlampros/OpenImageR
# Description: Incorporates functions for image preprocessing, filtering and image recognition. The package takes advantage of 'RcppArmadillo' to speed up computationally intensive functions. The histogram of oriented gradients descriptor is a modification of the 'findHOGFeatures' function of the 'SimpleCV' computer vision platform, the average_hash(), dhash() and phash() functions are based on the 'ImageHash' python library. The Gabor Feature Extraction functions are based on 'Matlab' code of the paper, "CloudID: Trustworthy cloud-based and cross-enterprise biometric identification" by M. Haghighat, S. Zonouz, M. Abdel-Mottaleb, Expert Systems with Applications, vol. 42, no. 21, pp. 7905-7916, 2015, <doi:10.1016/j.eswa.2015.06.025>. The 'SLIC' and 'SLICO' superpixel algorithms were explained in detail in (i) "SLIC Superpixels Compared to State-of-the-art Superpixel Methods", Radhakrishna Achanta, Appu Shaji, Kevin Smith, Aurelien Lucchi, Pascal Fua, and Sabine Suesstrunk, IEEE Transactions on Pattern Analysis and Machine Intelligence, vol. 34, num. 11, p. 2274-2282, May 2012, <doi:10.1109/TPAMI.2012.120> and (ii) "SLIC Superpixels", Radhakrishna Achanta, Appu Shaji, Kevin Smith, Aurelien Lucchi, Pascal Fua, and Sabine Suesstrunk, EPFL Technical Report no. 149300, June 2010.
# License: GPL-3
# Encoding: UTF-8
# Copyright: inst/COPYRIGHTS
# SystemRequirements: libarmadillo: apt-get install -y libarmadillo-dev (deb), libblas: apt-get install -y libblas-dev (deb), liblapack: apt-get install -y liblapack-dev (deb), libarpack++2: apt-get install -y libarpack++2-dev (deb), gfortran: apt-get install -y gfortran (deb), libjpeg-dev: apt-get install -y libjpeg-dev (deb), libpng-dev: apt-get install -y libpng-dev (deb), libfftw3-dev: apt-get install -y libfftw3-dev (deb), libtiff5-dev: apt-get install -y libtiff5-dev (deb)
# Depends: R(>= 3.2.3)
# Imports: Rcpp (>= 0.12.17), graphics, grDevices, grid, shiny, jpeg, png, tiff, R6, lifecycle, tools
# LinkingTo: Rcpp, RcppArmadillo (>= 0.8.0)
# Suggests: testthat, knitr, rmarkdown, covr
# RoxygenNote: 7.2.3
# VignetteBuilder: knitr
# NeedsCompilation: yes
# Packaged: 2023-07-08 07:59:50 UTC; lampros
# Author: Lampros Mouselimis [aut, cre] (<https://orcid.org/0000-0002-8024-1546>), Sight Machine [cph] (findHOGFeatures function of the SimpleCV computer vision platform), Johannes Buchner [cph] (average_hash, dhash and phash functions of the ImageHash python library), Mohammad Haghighat [cph] (Gabor Feature Extraction), Radhakrishna Achanta [cph] (Author of the C++ code of the SLIC and SLICO algorithms (for commercial use please contact the author)), Oleh Onyshchak [cph] (Author of the Python code of the WarpAffine function)
# Repository: CRAN
# Date/Publication: 2023-07-08 11:00:05 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
