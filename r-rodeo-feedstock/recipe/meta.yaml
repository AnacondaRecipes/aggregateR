{% set version = '0.7.7' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-rodeo
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/rodeo_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/rodeo/rodeo_{{ version }}.tar.gz
  sha256: ebe0b04c6759488d5d796e38ad9639491dccddfdcedc4146a84b9c46b571dab1

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: knitr, rmarkdown, xtable, rootSolve
requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('fortran') }}        # [not win]
    - {{ compiler('m2w64_fortran') }}  # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}make
    - {{ posix }}sed               # [win]
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-r6
    - r-desolve

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-r6
    - r-desolve

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('rodeo')"           # [not win]
    - "\"%R%\" -e \"library('rodeo')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/dkneis/rodeo
  license: GPL-2
  summary: Provides an R6 class and several utility methods to facilitate the implementation
    of models based on ordinary differential equations. The heart of the package is
    a code generator that creates compiled 'Fortran' (or 'R') code which can be passed
    to a numerical solver. There is direct support for solvers contained in packages
    'deSolve' and 'rootSolve'.
  license_family: GPL2
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: rodeo
# Type: Package
# NeedsCompilation: yes
# Title: A Code Generator for ODE-Based Models
# Version: 0.7.7
# Date: 2021-03-27
# Author: David Kneis <david.kneis@tu-dresden.de>
# Maintainer: David Kneis <david.kneis@tu-dresden.de>
# Description: Provides an R6 class and several utility methods to facilitate the implementation of models based on ordinary differential equations. The heart of the package is a code generator that creates compiled 'Fortran' (or 'R') code which can be passed to a numerical solver. There is direct support for solvers contained in packages 'deSolve' and 'rootSolve'.
# URL: https://github.com/dkneis/rodeo
# License: GPL (>= 2)
# Imports: R6, deSolve
# VignetteBuilder: knitr
# Suggests: knitr, rmarkdown, xtable, rootSolve
# SystemRequirements: The tools to run 'R CMD SHLIB' on 'Fortran' code. The used 'Fortran' compiler must support pointer initialization which is a feature of the 2008 standard. The compiler from Oracle Developer Studio 12.6 on Solaris 10 currently does not meet this requirement.
# RoxygenNote: 7.1.1
# Packaged: 2021-03-27 17:27:28 UTC; dkneis
# Repository: CRAN
# Date/Publication: 2021-03-27 18:20:02 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
