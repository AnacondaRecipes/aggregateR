{% set version = '0.0.1' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-rcppnloptexample
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/RcppNLoptExample_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/RcppNLoptExample/RcppNLoptExample_{{ version }}.tar.gz
  sha256: 368057f77f0a8b466b4970dd4206e49355f3698ace3c57dea3008ba02e34b4ba

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{posix}}filesystem        # [win]
    - {{posix}}make
    - {{posix}}sed               # [win]
    - {{posix}}coreutils         # [win]
    - {{posix}}zip               # [win]

  host:
    - r-base
    - r-rcpp
    - r-nloptr >=1.2.0

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-rcpp
    - r-nloptr >=1.2.0

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('RcppNLoptExample')"           # [not win]
    - "\"%R%\" -e \"library('RcppNLoptExample')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=RcppNLoptExample
  license: GPL-2
  summary: An example package which shows use of 'NLopt' functionality from C++ via 'Rcpp' without
    requiring linking, and relying just on 'nloptr' thanks to the exporting API added
    there by Jelmer Ypma. This package is a fully functioning, updated, and expanded
    version of the initial example by Julien Chiquet at <https://github.com/jchiquet/RcppArmadilloNLoptExample>
    also containing a large earlier pull request of mine.
  license_family: GPL2
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: RcppNLoptExample
# Type: Package
# Title: 'Rcpp' Package Illustrating Header-Only Access to 'NLopt'
# Version: 0.0.1
# Date: 2018-10-01
# Author: Dirk Eddelbuettel
# Maintainer: Dirk Eddelbuettel <edd@debian.org>
# Description: An example package which shows use of 'NLopt' functionality from C++ via 'Rcpp' without requiring linking, and relying just on 'nloptr' thanks to the exporting API added there by Jelmer Ypma. This package is a fully functioning, updated, and expanded version of the initial example by Julien Chiquet at <https://github.com/jchiquet/RcppArmadilloNLoptExample> also containing a large earlier pull request of mine.
# License: GPL (>= 2)
# Encoding: UTF-8
# LinkingTo: Rcpp, nloptr (>= 1.2.0)
# Imports: Rcpp, nloptr (>= 1.2.0)
# Depends: R (>= 3.0.2)
# RoxygenNote: 6.0.1
# NeedsCompilation: yes
# Packaged: 2018-10-02 02:32:59 UTC; edd
# Repository: CRAN
# Date/Publication: 2018-10-12 13:40:02 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
