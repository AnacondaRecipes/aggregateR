{% set version = '1.2.1' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-superranker
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/SuperRanker_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/SuperRanker/SuperRanker_{{ version }}.tar.gz
  sha256: 8f7f9bcf4fdc3bf6beda94695dc7e5ccdb0d300409331942583037f168e8db0b

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: testthat (>= 3.0.0)
requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}make
    - {{ posix }}sed               # [win]
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-rcpp >=0.11.5
    - r-prodlim >=1.5.7

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-rcpp >=0.11.5
    - r-prodlim >=1.5.7

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('SuperRanker')"           # [not win]
    - "\"%R%\" -e \"library('SuperRanker')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=SuperRanker
  license: GPL-2
  summary: "Tools for analysing the agreement of two or more rankings of the same items. Examples
    are importance rankings of predictor variables and risk predictions of subjects.
    Benchmarks for agreement are computed based on random permutation and bootstrap.
    See Ekstr\xF8m CT, Gerds TA, Jensen, AK (2018). \"Sequential rank agreement methods
    for comparison of ranked lists.\" _Biostatistics_, *20*(4), 582-598 <doi:10.1093/biostatistics/kxy017>
    for more information."
  license_family: GPL2
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: SuperRanker
# Type: Package
# Title: Sequential Rank Agreement
# Version: 1.2.1
# Date: 2023-08-27
# Authors@R: c(person(given="Claus Thorn", family="Ekstrm", email="ekstrom@sund.ku.dk", role=c("aut", "cre")), person(given="Thomas Alexander", family="Gerds", email="tag@biostat.ku.dk", role=c("aut")))
# Description: Tools for analysing the agreement of two or more rankings of the same items. Examples are importance rankings of predictor variables and risk predictions of subjects. Benchmarks for agreement are computed based on random permutation and bootstrap. See Ekstrm CT, Gerds TA, Jensen, AK (2018). "Sequential rank agreement methods for comparison of ranked lists." _Biostatistics_, *20*(4), 582-598 <doi:10.1093/biostatistics/kxy017> for more information.
# License: GPL (>= 2)
# Imports: stats, graphics, Rcpp (>= 0.11.5), prodlim (>= 1.5.7)
# LinkingTo: Rcpp
# Encoding: UTF-8
# ByteCompile: true
# RoxygenNote: 7.2.3
# Suggests: testthat (>= 3.0.0)
# Config/testthat/edition: 3
# NeedsCompilation: yes
# Packaged: 2023-08-27 14:36:06 UTC; ekstrom
# Author: Claus Thorn Ekstrm [aut, cre], Thomas Alexander Gerds [aut]
# Maintainer: Claus Thorn Ekstrm <ekstrom@sund.ku.dk>
# Repository: CRAN
# Date/Publication: 2023-08-27 22:40:09 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
