{% set version = '1.5.0' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-rpostgis
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/rpostgis_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/rpostgis/rpostgis_{{ version }}.tar.gz
  sha256: ffb175238a1d7d9d1f02d7793ff2b05c8052cbf5f679bb85c2cf2e3b5684fdd4

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: RPostgres, testthat (>= 3.0.0)
requirements:
  build:
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-dbi >=0.5
    - r-rpostgresql
    - r-purrr
    - r-raster
    - r-sf
    - r-sp
    - r-terra

  run:
    - r-base
    - r-dbi >=0.5
    - r-rpostgresql
    - r-purrr
    - r-raster
    - r-sf
    - r-sp
    - r-terra

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('rpostgis')"           # [not win]
    - "\"%R%\" -e \"library('rpostgis')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://mablab.org/rpostgis/, https://github.com/mablab/rpostgis
  license: GPL-3
  summary: Provides an interface between R and 'PostGIS'-enabled 'PostgreSQL' databases to transparently
    transfer spatial data. Both vector (points, lines, polygons) and raster data are
    supported in read and write modes. Also provides convenience functions to execute
    common procedures in 'PostgreSQL/PostGIS'.
  license_family: GPL3
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-3'

# The original CRAN metadata for this package was:

# Package: rpostgis
# Version: 1.5.0
# Date: 2023-10-12
# Title: R Interface to a 'PostGIS' Database
# Description: Provides an interface between R and 'PostGIS'-enabled 'PostgreSQL' databases to transparently transfer spatial data. Both vector (points, lines, polygons) and raster data are supported in read and write modes. Also provides convenience functions to execute common procedures in 'PostgreSQL/PostGIS'.
# Authors@R: c( person("Mathieu", "Basille", email = "basille@ufl.edu", role = c("aut"), comment = c(ORCID = "0000-0001-9366-7127")), person("David", "Bucklin", email = "david.bucklin@gmail.com", role = c("aut")), person("Adrian", "Cidre Gonzalez", email = "adrian.cidre@gmail.com", role = c("aut", "cre"), comment = c(ORCID = "0000-0002-3310-3052")))
# SystemRequirements: 'PostgreSQL' with 'PostGIS' extension
# Depends: R (>= 3.3.0), RPostgreSQL, DBI (>= 0.5)
# Imports: methods, sp, stats, terra, purrr, sf, raster
# Suggests: RPostgres, testthat (>= 3.0.0)
# License: GPL (>= 3)
# URL: https://mablab.org/rpostgis/, https://github.com/mablab/rpostgis
# BugReports: https://github.com/mablab/rpostgis/issues
# RoxygenNote: 7.2.3
# Encoding: UTF-8
# Config/testthat/edition: 3
# NeedsCompilation: no
# Packaged: 2023-10-12 09:56:33 UTC; cidre
# Author: Mathieu Basille [aut] (<https://orcid.org/0000-0001-9366-7127>), David Bucklin [aut], Adrian Cidre Gonzalez [aut, cre] (<https://orcid.org/0000-0002-3310-3052>)
# Maintainer: Adrian Cidre Gonzalez <adrian.cidre@gmail.com>
# Repository: CRAN
# Date/Publication: 2023-10-12 10:40:02 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
