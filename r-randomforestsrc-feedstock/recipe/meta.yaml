{% set version = '3.2.2' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-randomforestsrc
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/randomForestSRC_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/randomForestSRC/randomForestSRC_{{ version }}.tar.gz
  sha256: 0b39ed80b5a86ab902e707b3910ca24051331003a26cfd6f81db52faf38157cb

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: survival, pec, prodlim, mlbench, interp, caret, imbalance, cluster
requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}sed               # [win]
    - {{ posix }}grep              # [win]
    - {{ posix }}autoconf
    - {{ posix }}automake          # [not win]
    - {{ posix }}automake-wrapper  # [win]
    - {{ posix }}pkg-config
    - {{ posix }}make
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-diagrammer
    - r-data.tree

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-diagrammer
    - r-data.tree

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('randomForestSRC')"           # [not win]
    - "\"%R%\" -e \"library('randomForestSRC')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://www.randomforestsrc.org/ https://ishwaran.org/
  license: GPL-3
  summary: Fast OpenMP parallel computing of Breiman's random forests for univariate, multivariate,
    unsupervised, survival, competing risks, class imbalanced classification and quantile
    regression. New Mahalanobis splitting for correlated outcomes.  Extreme random forests
    and randomized splitting.  Suite of imputation methods for missing data.  Fast random
    forests using subsampling. Confidence regions and standard errors for variable importance.
    New improved holdout importance. Case-specific importance.  Minimal depth variable
    importance. Visualize trees on your Safari or Google Chrome browser. Anonymous random
    forests for data privacy.
  license_family: GPL3
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-3'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: randomForestSRC
# Version: 3.2.2
# Date: 2023-05-23
# Title: Fast Unified Random Forests for Survival, Regression, and Classification (RF-SRC)
# Author: Hemant Ishwaran <hemant.ishwaran@gmail.com>, Udaya B. Kogalur <ubk@kogalur.com>
# Maintainer: Udaya B. Kogalur <ubk@kogalur.com>
# BugReports: https://github.com/kogalur/randomForestSRC/issues/
# Depends: R (>= 3.6.0),
# Imports: parallel, data.tree, DiagrammeR
# Suggests: survival, pec, prodlim, mlbench, interp, caret, imbalance, cluster
# Description: Fast OpenMP parallel computing of Breiman's random forests for univariate, multivariate, unsupervised, survival, competing risks, class imbalanced classification and quantile regression. New Mahalanobis splitting for correlated outcomes.  Extreme random forests and randomized splitting.  Suite of imputation methods for missing data.  Fast random forests using subsampling. Confidence regions and standard errors for variable importance. New improved holdout importance. Case-specific importance.  Minimal depth variable importance. Visualize trees on your Safari or Google Chrome browser. Anonymous random forests for data privacy.
# License: GPL (>= 3)
# URL: https://www.randomforestsrc.org/ https://ishwaran.org/
# NeedsCompilation: yes
# Packaged: 2023-05-23 18:07:19 UTC; udaya
# Repository: CRAN
# Date/Publication: 2023-05-23 23:12:03 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
