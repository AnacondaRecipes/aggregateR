{% set version = '2.9.1' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-randomforestsrc
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/randomForestSRC_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/randomForestSRC/randomForestSRC_{{ version }}.tar.gz
  sha256: 317a47fafe55065bfc0943a2ff9322c6cdf45b3dd6136254b32178d86a91d4ef

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: survival, pec, prodlim, mlbench, akima, caret, imbalance
requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{posix}}filesystem        # [win]
    - {{posix}}sed               # [win]
    - {{posix}}grep              # [win]
    - {{posix}}autoconf
    - {{posix}}automake          # [not win]
    - {{posix}}automake-wrapper  # [win]
    - {{posix}}pkg-config
    - {{posix}}make
    - {{posix}}coreutils         # [win]
    - {{posix}}zip               # [win]

  host:
    - r-base

  run:
    - r-base
    - {{native}}gcc-libs         # [win]

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('randomForestSRC')"           # [not win]
    - "\"%R%\" -e \"library('randomForestSRC')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: http://web.ccs.miami.edu/~hishwaran http://www.kogalur.com https://github.com/kogalur/randomForestSRC
  license: GPL-3
  summary: Fast OpenMP parallel computing of Breiman's random forests for survival, competing
    risks, regression and classification based on Ishwaran and Kogalur's popular random
    survival forests (RSF) package.  Handles missing data and now includes multivariate,
    unsupervised forests, quantile regression and solutions for class imbalanced data.  New
    fast interface using subsampling and confidence regions for variable importance.
  license_family: GPL3
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-3'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: randomForestSRC
# Version: 2.9.1
# Date: 2019-07-08
# Title: Fast Unified Random Forests for Survival, Regression, and Classification (RF-SRC)
# Author: Hemant Ishwaran <hemant.ishwaran@gmail.com>, Udaya B. Kogalur <ubk@kogalur.com>
# Maintainer: Udaya B. Kogalur <ubk@kogalur.com>
# BugReports: https://github.com/kogalur/randomForestSRC/issues/new
# Depends: R (>= 3.5.0),
# Imports: parallel
# Suggests: survival, pec, prodlim, mlbench, akima, caret, imbalance
# Description: Fast OpenMP parallel computing of Breiman's random forests for survival, competing risks, regression and classification based on Ishwaran and Kogalur's popular random survival forests (RSF) package.  Handles missing data and now includes multivariate, unsupervised forests, quantile regression and solutions for class imbalanced data.  New fast interface using subsampling and confidence regions for variable importance.
# License: GPL (>= 3)
# URL: http://web.ccs.miami.edu/~hishwaran http://www.kogalur.com https://github.com/kogalur/randomForestSRC
# NeedsCompilation: yes
# Packaged: 2019-07-08 18:25:47 UTC; kogalur
# Repository: CRAN
# Date/Publication: 2019-07-08 19:00:03 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
