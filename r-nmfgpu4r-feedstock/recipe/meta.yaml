{% set version = '0.2.5.2' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-nmfgpu4r
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/nmfgpu4R_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/nmfgpu4R/nmfgpu4R_{{ version }}.tar.gz
  sha256: 93b3b19aa7ab7b84d422bf5695fef54f0c77431beedb639a90d3dcb55e360614

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: gdata
requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{posix}}filesystem        # [win]
    - {{posix}}make
    - {{posix}}sed               # [win]
    - {{posix}}coreutils         # [win]
    - {{posix}}zip               # [win]

  host:
    - r-base
    - r-matrix
    - r-rcpp >=0.11.4
    - r-sparsem
    - r-stringr

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-matrix
    - r-rcpp >=0.11.4
    - r-sparsem
    - r-stringr

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('nmfgpu4R')"           # [not win]
    - "\"%R%\" -e \"library('nmfgpu4R')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/razorx89/nmfgpu4R
  license: GPL-3
  summary: Wrapper package for the nmfgpu library, which implements several Non-negative Matrix
    Factorization (NMF) algorithms for CUDA platforms. By using the acceleration of
    GPGPU computing, the NMF can be used for real-world problems inside the R environment.
    All CUDA devices starting with Kepler architecture are supported by the library.
  license_family: GPL3
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-3'
    - LICENSE

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: nmfgpu4R
# Type: Package
# Title: Non-Negative Matrix Factorization (NMF) using CUDA
# Version: 0.2.5.2
# Date: 2016-10-17
# Author: Sven Koitka [aut, cre, cph], Christoph M. Friedrich [ctb]
# Maintainer: Sven Koitka <sven.koitka@fh-dortmund.de>
# Description: Wrapper package for the nmfgpu library, which implements several Non-negative Matrix Factorization (NMF) algorithms for CUDA platforms. By using the acceleration of GPGPU computing, the NMF can be used for real-world problems inside the R environment. All CUDA devices starting with Kepler architecture are supported by the library.
# License: GPL-3 | file LICENSE
# URL: https://github.com/razorx89/nmfgpu4R
# BugReports: https://github.com/razorx89/nmfgpu4R/issues
# Depends: R (>= 3.1.0)
# Imports: Rcpp (>= 0.11.4), Matrix, SparseM, stats, stringr, tools, utils
# Suggests: gdata
# LinkingTo: Rcpp
# RoxygenNote: 5.0.1
# SystemRequirements: CUDA >= v7.0, Nvidia GPU (e.g. GeForce or Tesla) with compute capability >= 3.0 (Kepler)
# NeedsCompilation: yes
# Packaged: 2016-10-17 07:53:46 UTC; Sven Koitka
# Repository: CRAN
# Date/Publication: 2016-10-17 12:41:21

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
