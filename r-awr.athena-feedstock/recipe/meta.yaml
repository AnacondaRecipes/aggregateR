{% set version = '2.0.7-0' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-awr.athena
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/AWR.Athena_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/AWR.Athena/AWR.Athena_{{ version }}.tar.gz
  sha256: 70ab8a7c5e12256d1ff72db828efb15fd3ce5f31b4a6331ef1f94b303dc42bc9

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{posix}}zip               # [win]

  host:
    - r-base
    - r-rjdbc
    - r-rjava

  run:
    - r-base
    - r-rjdbc
    - r-rjava

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('AWR.Athena')"           # [not win]
    - "\"%R%\" -e \"library('AWR.Athena')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=AWR.Athena
  license: AGPL-3
  summary: '''RJDBC'' based ''DBI'' driver to Amazon Athena, which is an interactive query service
    to analyze data in Amazon ''S3'' using standard ''SQL''.'

  license_family: AGPL
  license_file: '{{ environ["PREFIX"] }}/lib/R/share/licenses/AGPL-3'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: AWR.Athena
# Type: Package
# Title: 'AWS' Athena 'DBI' Wrapper
# Version: 2.0.7-0
# Author: Neal Fultz <nfultz@gmail.com>, Gergely DarA3czi <gergely@system1.com>
# Maintainer: Neal Fultz <nfultz@gmail.com>
# Description: 'RJDBC' based 'DBI' driver to Amazon Athena, which is an interactive query service to analyze data in Amazon 'S3' using standard 'SQL'.
# License: AGPL-3
# Encoding: UTF-8
# LazyData: true
# Imports: methods, RJDBC, rJava
# RoxygenNote: 6.1.1
# NeedsCompilation: no
# Packaged: 2019-07-05 16:30:06.57 UTC; nfultz
# Repository: CRAN
# Date/Publication: 2019-07-08 20:30:03 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
