{% set version = '0.1.2' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-rapiserialize
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/RApiSerialize_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/RApiSerialize/RApiSerialize_{{ version }}.tar.gz
  sha256: 9cc0bbb918eeadb394339c64b15324e8123fbb0061692f40102b111417a2600a

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}make
    - {{ posix }}sed               # [win]
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]

  host:
    - r-base

  run:
    - r-base
    - {{native}}gcc-libs         # [win]

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('RApiSerialize')"           # [not win]
    - "\"%R%\" -e \"library('RApiSerialize')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/eddelbuettel/rapiserialize, https://dirk.eddelbuettel.com/code/rapiserialize.html
  license: GPL-2
  summary: Access to the internal R serialization code is provided for use by other packages
    at the C function level by using the registration of native function mechanism.
    Client packages simply include a single header file RApiSerializeAPI.h provided
    by this package. This packages builds on the Rhpc package by Ei-ji Nakama and Junji
    Nakano which also includes a (partial) copy of the file src/main/serialize.c from
    R itself. The R Core group is the original author of the serialization code made
    available by this package.
  license_family: GPL2
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: RApiSerialize
# Type: Package
# Title: R API Serialization
# Version: 0.1.2
# Date: 2022-08-25
# Author: Dirk Eddelbuettel, Ei-ji Nakama, Junji Nakano, and R Core (original code)
# Maintainer: Dirk Eddelbuettel <edd@debian.org>
# Description: Access to the internal R serialization code is provided for use by other packages at the C function level by using the registration of native function mechanism. Client packages simply include a single header file RApiSerializeAPI.h provided by this package. This packages builds on the Rhpc package by Ei-ji Nakama and Junji Nakano which also includes a (partial) copy of the file src/main/serialize.c from R itself. The R Core group is the original author of the serialization code made available by this package.
# URL: https://github.com/eddelbuettel/rapiserialize, https://dirk.eddelbuettel.com/code/rapiserialize.html
# BugReports: https://github.com/eddelbuettel/rapiserialize/issues
# License: GPL (>= 2)
# NeedsCompilation: yes
# Packaged: 2022-08-25 10:50:33 UTC; edd
# Repository: CRAN
# Date/Publication: 2022-08-25 11:52:34 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
