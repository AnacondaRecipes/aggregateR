{% set version = '0.2.8.0' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-umap
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/umap_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/umap/umap_{{ version }}.tar.gz
  sha256: 57718187922a4e5746a0e014b913e451419d934bad3b149f18893ec4becd2a2a

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: knitr, rmarkdown, testthat
requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}make
    - {{ posix }}sed               # [win]
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-matrix
    - r-rspectra
    - r-rcpp >=0.12.6
    - r-openssl
    - r-reticulate

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-matrix
    - r-rspectra
    - r-rcpp >=0.12.6
    - r-openssl
    - r-reticulate

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('umap')"           # [not win]
    - "\"%R%\" -e \"library('umap')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/tkonopka/umap
  license: MIT
  summary: Uniform manifold approximation and projection is a technique for dimension reduction.
    The algorithm was described by McInnes and Healy (2018) in <arXiv:1802.03426>. This
    package provides an interface for two implementations. One is written from scratch,
    including components for nearest-neighbor search and for embedding. The second implementation
    is a wrapper for 'python' package 'umap-learn' (requires separate installation,
    see vignette for more details).
  license_family: MIT
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/MIT'
    - LICENSE

# The original CRAN metadata for this package was:

# Package: umap
# Title: Uniform Manifold Approximation and Projection
# Version: 0.2.8.0
# Authors@R: person("Tomasz", "Konopka", , "tokonopka@gmail.com", role = c("aut", "cre"))
# Author: Tomasz Konopka [aut, cre]
# Maintainer: Tomasz Konopka <tokonopka@gmail.com>
# Description: Uniform manifold approximation and projection is a technique for dimension reduction. The algorithm was described by McInnes and Healy (2018) in <arXiv:1802.03426>. This package provides an interface for two implementations. One is written from scratch, including components for nearest-neighbor search and for embedding. The second implementation is a wrapper for 'python' package 'umap-learn' (requires separate installation, see vignette for more details).
# Depends: R (>= 3.1.2)
# Imports: Matrix, methods, openssl, reticulate, Rcpp (>= 0.12.6), RSpectra, stats
# License: MIT + file LICENSE
# URL: https://github.com/tkonopka/umap
# BugReports: https://github.com/tkonopka/umap/issues
# LinkingTo: Rcpp
# Suggests: knitr, rmarkdown, testthat
# VignetteBuilder: knitr
# Encoding: UTF-8
# RoxygenNote: 7.1.2
# NeedsCompilation: yes
# Packaged: 2022-03-23 18:54:20 UTC; tkonopka
# Repository: CRAN
# Date/Publication: 2022-03-23 20:30:02 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
