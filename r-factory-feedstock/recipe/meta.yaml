{% set version = '0.1.0' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-factory
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/factory_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/factory/factory_{{ version }}.tar.gz
  sha256: 1d2ae4198cb8e637dd6f182be089258596e4cace569a141a2e73229b455f259c

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic
  # TODO: rlang >=0.4.0 not present
  skip: True

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: testthat (>= 2.1.0), covr, roxygen2, knitr, rmarkdown, ggplot2
requirements:
  build:
    - {{posix}}zip               # [win]

  host:
    - r-base
    - r-purrr >=0.3.2
    - r-rlang >=0.4.0

  run:
    - r-base
    - r-purrr >=0.3.2
    - r-rlang >=0.4.0

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('factory')"           # [not win]
    - "\"%R%\" -e \"library('factory')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/jonthegeek/factory
  license: MIT
  summary: Function factories are functions that make functions. They can be  confusing to construct.
    Straightforward techniques can produce functions  that are fragile or hard to understand.
    While more robust techniques exist  to construct function factories, those techniques
    can be confusing. This  package is designed to make it easier to construct function
    factories.
  license_family: MIT
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/MIT'
    - LICENSE

extra:
  recipe-maintainers:
    - katietz

# The original CRAN metadata for this package was:

# Package: factory
# Type: Package
# Title: Build Function Factories
# Version: 0.1.0
# Authors@R:  c(person(given = "Jon",  family = "Harmon",  role = c("aut", "cre"), email = "jonthegeek@gmail.com") )
# Description: Function factories are functions that make functions. They can be  confusing to construct. Straightforward techniques can produce functions  that are fragile or hard to understand. While more robust techniques exist  to construct function factories, those techniques can be confusing. This  package is designed to make it easier to construct function factories.
# URL: https://github.com/jonthegeek/factory
# BugReports: https://github.com/jonthegeek/factory/issues
# License: MIT + file LICENSE
# Encoding: UTF-8
# LazyData: true
# RoxygenNote: 6.1.1
# Imports: purrr (>= 0.3.2), rlang (>= 0.4.0)
# Suggests: testthat (>= 2.1.0), covr, roxygen2, knitr, rmarkdown, ggplot2
# VignetteBuilder: knitr
# NeedsCompilation: no
# Packaged: 2019-08-20 13:44:54 UTC; Jon.Harmon
# Author: Jon Harmon [aut, cre]
# Maintainer: Jon Harmon <jonthegeek@gmail.com>
# Repository: CRAN
# Date/Publication: 2019-08-21 09:00:07 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
