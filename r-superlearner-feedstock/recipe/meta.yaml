{% set version = '2.0-28.1' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-superlearner
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/SuperLearner_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/SuperLearner/SuperLearner_{{ version }}.tar.gz
  sha256: 752f11b99816f8d61c1ff411ea4d5bec5509f2a655d250e58baa48e8a0266ba6

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip
  noarch: generic

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: arm, bartMachine, biglasso, bigmemory, caret, class, devtools, e1071, earth, extraTrees, gbm, genefilter, ggplot2, glmnet, ipred, KernelKnn, kernlab, knitr, lattice, LogicReg, MASS, mlbench, nloptr, nnet, party, polspline, prettydoc, quadprog, randomForest, ranger, RhpcBLASctl, ROCR, rmarkdown, rpart, SIS, speedglm, spls, sva, testthat, xgboost (>= 0.6)
requirements:
  build:
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-cvauc
    - r-gam >=1.15
    - r-nnls

  run:
    - r-base
    - r-cvauc
    - r-gam >=1.15
    - r-nnls

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('SuperLearner')"           # [not win]
    - "\"%R%\" -e \"library('SuperLearner')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/ecpolley/SuperLearner
  license: GPL-3
  summary: Implements the super learner prediction method and contains a library of prediction
    algorithms to be used in the super learner.
  license_family: GPL3
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-3'

# The original CRAN metadata for this package was:

# Package: SuperLearner
# Type: Package
# Title: Super Learner Prediction
# Version: 2.0-28.1
# Date: 2021-05-04
# Authors@R: c(person("Eric", "Polley", email = "epolley@uchicago.edu", role = c("aut", "cre")), person("Erin", "LeDell", role = c("aut")), person("Chris", "Kennedy", role = c("aut")), person("Sam", "Lendle", role = c("ctb")), person("Mark", "van der Laan", role = c("aut", "ths")))
# Maintainer: Eric Polley <epolley@uchicago.edu>
# Description: Implements the super learner prediction method and contains a library of prediction algorithms to be used in the super learner.
# License: GPL-3
# URL: https://github.com/ecpolley/SuperLearner
# Depends: R (>= 2.14.0), nnls, gam (>= 1.15)
# Imports: cvAUC
# Suggests: arm, bartMachine, biglasso, bigmemory, caret, class, devtools, e1071, earth, extraTrees, gbm, genefilter, ggplot2, glmnet, ipred, KernelKnn, kernlab, knitr, lattice, LogicReg, MASS, mlbench, nloptr, nnet, party, polspline, prettydoc, quadprog, randomForest, ranger, RhpcBLASctl, ROCR, rmarkdown, rpart, SIS, speedglm, spls, sva, testthat, xgboost (>= 0.6)
# LazyLoad: yes
# VignetteBuilder: knitr, rmarkdown
# RoxygenNote: 6.0.1
# NeedsCompilation: no
# Packaged: 2023-07-18 08:11:41 UTC; hornik
# Author: Eric Polley [aut, cre], Erin LeDell [aut], Chris Kennedy [aut], Sam Lendle [ctb], Mark van der Laan [aut, ths]
# Repository: CRAN
# Date/Publication: 2023-07-18 11:46:38 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
